{"version":3,"sources":["../../src/bpbilling/InitialInfo.js","../../src/bpbilling/PayOption.js","../../src/bpbilling/OnlineBilling.js","../../src/bpbilling/BplsBillingWebController.js","../../src/bpbilling/Payment.js","../../src/businessrenewal/reducer.js","../../src/components/Confirmation.js","../../src/components/TrackingInfo.js","../../src/businessrenewal/components/LobList.js","../../src/businessrenewal/InitialPage.js","../../src/businessrenewal/components/EditInfo.js","../../src/businessrenewal/EditInfoPage.js","../../src/businessrenewal/components/RequirementList.js","../../src/businessrenewal/RenewBusinessWebController.js","../../src/businessrenewal/SelectTxnTypePage.js","../../src/businessrenewal/GeneralInfoPage.js","../../src/businessrenewal/RequirementPage.js","../../src/businessrenewal/ConfirmPage.js","../../src/businessrenewal/CompletedPage.js"],"names":["PayOption","props","initialValue","open","onAccept","onCancel","useState","billtoqtr","context","React","Modal","caption","maxWidth","FormPanel","handler","Select","name","items","OnlineBilling","title","partner","onSubmit","paymentError","error","ctx","useData","refno","txntype","contact","bill","setBill","setError","loading","setLoading","showPayOption","setShowPayOption","qtr","setQtr","setBarcode","useEffect","params","showdetails","svc","Service","lookupAsync","id","invoke","then","data","info","amount","billno","e","err","toString","blur","email","Card","style","Title","Subtitle","Spacer","Error","msg","Panel","Label","expr","display","justifyContent","Button","variant","action","Table","size","showPagination","TableColumn","item","lobname","account","align","format","flexDirection","paddingRight","currencyFormat","ActionBar","disabled","BackLink","origin","orgcode","paidby","paidbyaddress","particulars","appno","disableWhen","billOption","initialState","reducer","draft","type","pages","step","Component","ContactVerification","moveNextStep","movePrevStep","dispatch","setRefno","Fragment","Text","value","onChange","autoFocus","EPayment","module","component","initialContact","initialStep","cancelPayment","BplsBillingWebController","service","location","history","setStep","page","StateProvider","Page","Content","center","cs","goBack","bin","app","objid","lobs","infos","newinfos","redflags","push","Confirmation","onContinue","agreeDisclaimer","setAgreeDisclaimer","height","Subtitle2","opacity","Checkbox","TrackingInfo","LobList","isPreviousInfo","prevgross","gross","steps","components","decimal","Decimal","integer","Integer","EditInfo","dataType","HandlerComponent","className","fullWidth","styles","lobTitles","RequirementList","requirements","deleteRequirement","onUpload","ref","attachment","requirement","setRequirement","selectedIndex","setSelectedIndex","length","map","req","idx","key","onClick","findIndex","path","BackupIcon","fontSize","color","src","alt","UploadButton","fileId","uploadedFile","appService","appType","setAppType","setAppno","Radio","Item","visibleWhen","required","marginLeft","helperText","controlno","exitInitial","setApp","keyCode","setKeyCode","setCurrentStep","validatedApp","label","placeholder","maxLength","row","readOnly","phoneno","width","initialApp","datatype","lob","res","setRequirements","forEach","saveRequirements","updatedRequirements","_","requirementsCompleted","deletedRequirement","deletedIdx","captionStyle","replace","RenewBusinessWebController","PageComponent","compProps","nextStep","lookup","stepCompleted","target","stepperContainer","Stepper","filter","pg","completedStep","activeStep","handleStep","paddingTop","paddingLeft"],"mappings":"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","file":"static/js/12.36554e79.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Text,\n  Title,\n  Button,\n  ActionBar,\n  Subtitle,\n  Spacer,\n  Service,\n  Error,\n  BackLink,\n  useData,\n  Card\n} from 'rsi-react-web-components'\n\nconst InitialInfo = ({\n  title,\n  partner,\n  moveNextStep,\n  movePrevStep,\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { txntype } = ctx;\n\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n  const [refno, setRefno] = useState()\n\n  const getBilling = async () => {\n    const params = {txntype, refno, qtr: 4, showdetails:true};\n    const svc = Service.lookupAsync(`${partner.id}:OnlineBusinessBillingService`, \"bpls\");\n    return await svc.invoke(\"getBilling\", params);\n  }  \n\n  const loadBill = () => {\n    setLoading(true);\n    setError(null);\n    getBilling().then(data => {\n      const bill = data.info;\n      bill.qtr = 4;\n      if (bill.amount == 0) {\n        bill.items = [];\n      }\n      dispatch({type: \"SET_BILL\", refno: refno, bill: bill});\n      moveNextStep();\n    }).catch(err => {\n      setError(err.toString());\n      setLoading(false)\n    })\n  }\n\n  return (\n    <React.Fragment>\n    <Card>\n      <Title>{title}</Title>\n      <Subtitle>Initial Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <Text \n        name=\"appno\" \n        caption=\"BIN or Application No.\" \n        value={refno} \n        onChange={setRefno} \n        autoFocus={true} \n      />\n      <ActionBar>\n        <BackLink caption='Back' variant=\"text\" action={movePrevStep} />\n        <Button caption='Next' action={loadBill} loading={loading} disabled={loading} />\n      </ActionBar>\n    </Card>\n    </React.Fragment>\n  )\n}\n\nexport default InitialInfo\n","import React, { useState } from \"react\";\nimport { Number, Select, FormPanel, Modal } from \"rsi-react-web-components\";\n\nconst PayOption = (props) => {\n  const { initialValue = {billtoqtr: 4}, open, onAccept, onCancel } = props;\n  const [context, setContext] = useState(initialValue);\n\n  const okHandler = () => {\n    onAccept(context);\n  };\n\n  const qtrs = [1, 2, 3, 4];\n\n  return (\n    <Modal\n      open={open}\n      caption=\"Pay Options\"\n      onAccept={okHandler}\n      onCancel={onCancel}\n      maxWidth={100}\n    >\n      <FormPanel context={context} handler={setContext}>\n        <Select caption=\"Quarter to Bill\" name=\"billtoqtr\" items={qtrs} />\n      </FormPanel>\n    </Modal>\n  );\n};\n\nexport default PayOption;\n","import React, { useState, useEffect } from 'react'\nimport {\n  Card,\n  Panel,\n  Button,\n  Label,\n  ActionBar,\n  Spacer,\n  Service,\n  Error,\n  Subtitle,\n  Title,\n  BackLink,\n  useData,\n  Table,\n  TableColumn,\n  currencyFormat\n} from 'rsi-react-web-components'\n\nimport PayOption from './PayOption'\n\nconst ORIGIN = 'filipizen'\n\nconst OnlineBilling = ({\n  title,\n  partner,\n  onCancel,\n  onSubmit,\n  error: paymentError\n}) => {\n  const [ctx, dispatch] = useData();\n  const { refno, txntype, contact, bill: initialBill } = ctx;\n\n  const [bill, setBill] = useState(initialBill);\n  const [error, setError] = useState(paymentError);\n  const [loading, setLoading] = useState(false)\n  const [showPayOption, setShowPayOption] = useState(false)\n  const [qtr, setQtr] = useState(4)\n  const [barcode, setBarcode] = useState()\n\n  const getBilling = async () => {\n    const params = {txntype, refno, qtr, showdetails:true};\n    const svc = Service.lookupAsync(`${partner.id}:OnlineBusinessBillingService`, \"bpls\");\n    return await svc.invoke(\"getBilling\", params);\n  }\n\n  const loadBill = () => {\n    setLoading(true);\n    setError(null);\n      getBilling().then(data => {\n        const bill = data.info;\n        bill.qtr = 4;\n        if (bill.amount == 0) {\n          bill.items = [];\n        }\n        setBill(bill);\n        setBarcode(`51001:${bill.billno}`); \t\t\t\t\t\n        setLoading(false)\n      }).catch(err => {\n        setError(err.toString());\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    if (refno) {\n      loadBill();\n    }\n  }, [qtr])\n\n  const payOptionHandler = (billOption) => {\n    setShowPayOption(false)\n    setQtr(billOption.billtoqtr);\n  }\n\n  const checkoutPayment = () => {\n    onSubmit({\n      refno,\n      txntype,\n      origin: ORIGIN,\n      orgcode: partner.id,\n      qtr,\n      info: { data: bill, qtr },\n      paidby: bill.paidby,\n      paidbyaddress: bill.paidbyaddress,\n      amount: bill.amount,\n      particulars: `Business Tax for Application No. ${bill.appno}`,\n    })\n  }\n\n  const onCancelBilling = () => {\n    onCancel(0);\n  }\n\n  const blur = contact && contact.email !== bill.email;\n\n  return (\n    <Card style={{maxWidth: 800}}>\n      <Title>{title}</Title>\n      <Subtitle>Billing Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <Panel>\n        <Label context={bill} caption=\"Application No.\" expr=\"appno\" />\n        <Label context={bill} caption=\"Application Type\" expr=\"apptype\" />\n        <Label context={bill} caption=\"Date Filed\" expr=\"appdate\" />\n        <Label context={bill} caption=\"BIN\" expr=\"bin\" />\n        <Label context={bill} caption=\"Trade Name\" expr=\"tradename\" blur={blur} />\n        <Label context={bill} caption=\"Owner Name\" expr=\"ownername\" blur={blur} />\n        <Label context={bill} caption=\"Business Address\" expr=\"address\" blur={blur} />\n        <Spacer />\n        <Panel style={{display: \"flex\", justifyContent: \"flex-start\"}}>\n          <Button variant=\"outlined\" caption='Pay Option' action={() => setShowPayOption(true)} />\n        </Panel>\n        <Table items={bill ? bill.items : []} size=\"small\" showPagination={false} >\n          <TableColumn caption=\"Particulars\" expr={item => (item.lobname ? item.lobname : \"\") +  ` -${item.account}`} />\n          <TableColumn caption=\"Amount\" expr=\"amount\" align=\"right\" format=\"currency\" />\n          <TableColumn caption=\"Surcharge\" expr=\"surcharge\" align=\"right\" format=\"currency\" />\n          <TableColumn caption=\"Interest\" expr=\"interest\" align=\"right\" format=\"currency\" />\n          <TableColumn caption=\"Total\" expr=\"total\" align=\"right\" format=\"currency\" />\n        </Table>\n        <Panel style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\", paddingRight: 15}}>\n          <Label context={bill} caption=\"Bill Amount:\" expr={item => currencyFormat(item.amount)} />\n        </Panel>\n      </Panel>\n      <ActionBar disabled={loading}>\n        <BackLink caption='Back' action={onCancelBilling} />\n        <Button caption='Confirm Payment' action={checkoutPayment} disableWhen={bill.amount === 0} />\n      </ActionBar>\n\n      <PayOption\n          initialValue={bill && { qtr }}\n          open={showPayOption}\n          onAccept={payOptionHandler}\n          onCancel={() => setShowPayOption(false)}\n        />\n    </Card>\n  )\n}\n\nexport default OnlineBilling\n","import React, { useState } from 'react'\nimport { Page, Panel, StateProvider, Content } from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport { ContactVerification } from 'rsi-react-filipizen-components'\n\nconst initialState = {\n  txntype: \"bpls\",\n  refno: null,\n  bill: {},\n  contact: {},\n}\n\nconst reducer = (draft, action) => {\n  switch(action.type) {\n    case \"SET_BILL\":\n      draft.refno = action.refno;\n      draft.bill = action.bill;\n      return;\n\n    case \"SET_CONTACT\":\n      draft.contact = action.contact;\n      return;\n  }\n}\n\nimport InitialInfo from \"./InitialInfo\";\nimport Payment from \"./Payment\";\n\nconst pages = [\n  {step: 1, name: \"verification\", caption: \"Verification\", Component: ContactVerification},\n  {step: 2, name: \"initial\", caption: \"Initial Information\", Component: InitialInfo},\n  {step: 3, name: \"payment\", caption: \"Payment\", Component: Payment},\n]\n\nconst BplsBillingWebController = ({\n  partner,\n  service,\n  location,\n  history,\n  initialStep=0\n}) => {\n\n  const [step, setStep] = useState(initialStep);\n\n  const moveNextStep = () => {\n    setStep(cs => cs+1);\n  }\n\n  const movePrevStep = () => {\n    if (step === 0) {\n      history.goBack();\n    } else {\n      setStep(cs => cs-1);\n    }\n  }\n\n  const cancelPayment = () => {\n    setStep(1);\n  }\n\n  const page = pages[step];\n  const PageComponent = page.Component;\n  const compProps = {\n    partner,\n    service,\n    location,\n    history,\n    moveNextStep,\n    movePrevStep,\n    cancelPayment,\n    title: \"Business Online Billing\",\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Page>\n        <Content center>\n          <Panel>\n            <PageComponent page={page} {...compProps} />\n          </Panel>\n        </Content>\n      </Page>\n    </StateProvider>\n  )\n};\n\nexport default BplsBillingWebController;\n","import React from 'react'\nimport { useData } from 'rsi-react-web-components'\nimport { EPayment } from 'rsi-react-filipizen-components'\nimport OnlineBilling from './OnlineBilling';\n\nconst Payment = (props) => {\n  const [ctx, dispatch] = useData()\n  const module = {\n    title: props.title,\n    component: OnlineBilling\n  }\n  return (\n    <EPayment\n      module={module}\n      {...props}\n      initialContact={ctx.contact}\n      initialStep={1}\n      cancelPayment={props.cancelPayment}\n    />\n  )\n}\n\nexport default Payment\n","export const ACTIONS = {\n  SET_APP: \"SET_APP\",\n  SET_CONTACT: \"SET_CONTACT\",\n  UPDATE_APP_INFOS: \"UPDATE_APP_INFOS\",\n};\n\nexport const initialState = {\n  bin: null,\n  app: {objid: \"0001\", lobs:[], infos:[], newinfos: [], redflags:[]},\n  contact: {},\n};\n\nconst reducer = (draft, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_APP:\n      draft.app = action.app;\n      draft.bin = action.app.bin;\n      return;\n    \n      case ACTIONS.UPDATE_APP_INFOS:\n      draft.app = action.app;\n      draft.app.newinfos.push(...action.infos);\n      draft.bin = action.app.bin;\n      return;\n\n    case ACTIONS.SET_CONTACT:\n      draft.contact = action.contact;\n      return;\n\n    default:\n      return draft;\n  }\n};\n\nexport default reducer;\n","import React, { useState } from \"react\";\nimport {\n  Subtitle2,\n  Button,\n  Checkbox,\n  ActionBar,\n  BackLink,\n  Spacer,\n  Subtitle,\n  Error\n} from 'rsi-react-web-components';\n\n\nconst Confirmation = ({\n  partner,\n  title=\"New Permit Application\",\n  onCancel,\n  onContinue,\n  error\n}) => {\n  const [agreeDisclaimer, setAgreeDisclaimer] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Subtitle>{title}</Subtitle>\n      <Spacer height={30} />\n      <Error msg={error} />\n      <Subtitle2>Please read thoroughly before proceeding</Subtitle2>\n      <p style={{opacity: 0.8}}>\n      This online service will require personal information from the applicant,\n      lot owner(s) and professionals involved in this transaction. In compliance\n      with the Data Privacy Act, we are securing your consent that you have been\n      authorized by the aforementioned parties to act on their behalf. The data\n      collected will be stored, processed and used for effectively carrying out\n      legitimate transactions with the local government of {partner.title}. If you\n      do not agree to these terms, you can cancel out by click on the Cancel button.\n      If you agree to these terms, tick on the checkbox and click Continue.\n      </p>\n      <Checkbox caption='Yes, I have read and agree to the terms and conditions'\n        value={agreeDisclaimer}\n        name='agreeDisclaimer'\n        onChange={setAgreeDisclaimer}\n      />\n      <ActionBar>\n        <BackLink caption=\"Cancel\" action={onCancel} />\n        <Button caption='Continue' action={onContinue} disableWhen={!agreeDisclaimer} />\n      </ActionBar>\n  </React.Fragment>\n  )\n}\n\nexport default Confirmation;\n","import React from \"react\";\nimport {\n  Subtitle2,\n  Button,\n  ActionBar,\n  Spacer,\n  Subtitle\n} from 'rsi-react-web-components';\n\nconst TrackingInfo = ({\n  title=\"New Permit Application\",\n  appno,\n  onContinue\n}) => {\n  return (\n    <React.Fragment>\n      <Subtitle>{title}</Subtitle>\n      <Spacer height={30} />\n      <Subtitle2>Application created</Subtitle2>\n      <p>\n      Please take note of the tracking number for this application.\n      This will be your tracking reference for completing\n      and follow up for this application.\n      </p>\n      <Subtitle2>{appno}</Subtitle2>\n      <ActionBar>\n        <Button caption='Continue' action={onContinue} />\n      </ActionBar>\n    </React.Fragment>\n  )\n}\n\nexport default TrackingInfo;\n","import React from \"react\";\nimport {\n  Table,\n  TableColumn,\n  currencyFormat,\n} from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nconst LobList = ({ \n    lobs,\n    isPreviousInfo=true\n}) => {\n  return (\n    <React.Fragment>\n      <Table items={lobs} showPagination={false}>\n        <TableColumn caption=\"Line of Business\" expr=\"lob.name\" />\n        <TableColumn\n          caption={isPreviousInfo ? \"Previous Gross (Php)\" : \"Gross (Php)\"}\n          expr={(item) => currencyFormat((isPreviousInfo ? item.prevgross : item.gross))}\n          type=\"decimal\"\n          align=\"right\"\n        />\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default LobList;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Content,\n  FormPanel,\n  Panel,\n  Button,\n  Error,\n  ActionBar,\n  BackLink,\n  Spacer,\n  Title,\n  Text,\n  Subtitle,\n  Table,\n  TableColumn,\n  useData\n} from \"rsi-react-web-components\";\n\nimport { ACTIONS } from \"./reducer\"\n\nimport { ContactVerification, isBlur } from \"rsi-react-filipizen-components\";\nimport Confirmation from \"../components/Confirmation\";\nimport TrackingInfo from \"../components/TrackingInfo\";\n\nimport LobList from \"./components/LobList\";\n\nconst steps = [\n  { name: \"enter-bin\", caption: \"Business Identification Number\" },\n  { name: \"email-verification\", caption: \"Email Verification\" },\n  { name: \"app-notice\", caption: \"Business Renewal Notice\" },\n  { name: \"verify-info\", caption: \"Business Verify Information\" },\n  { name: \"confirmation\", caption: \"Confirmation\" },\n  { name: \"newapp\", caption: \"New Application \" },\n];\n\nconst InitialPage = ({\n  partner, \n  service, \n  history, \n  title,\n  appService,\n  moveNextStep: exitInitial\n}) => {\n  \n  const [ctx, dispatch] = useData();\n  const { contact } = ctx;\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const [agreeDisclaimer, setAgreeDisclaimer] = useState(false);\n  const [app, setApp] = useState({});\n  const [email, setEmail] = useState();\n  const [keyCode, setKeyCode] = useState();\n\n  const [currentStep, setCurrentStep] = useState(0);\n  \n\n  const step = steps[currentStep];\n\n  const moveNextStep = () => {\n    setCurrentStep((cs) => cs + 1);\n  };\n\n  const movePrevStep = () => {\n    setCurrentStep((cs) => cs - 1);\n  };\n\n  const validateBin = () => {\n    setError(null);\n    setLoading(true);\n    appService.invoke(\"validateBin\", app, (err, validatedApp) => {\n      if (!err) {\n        setApp(validatedApp);\n        moveNextStep()\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    });\n  };\n\n  const verifyCode = () => {\n    setError(null);\n    if (app.key !== keyCode) {\n      setError(\"Code is incorrect\");\n    } else {\n      verifyApplication()\n    }\n  };\n\n  const verifyApplication = () => {\n    setError(null);\n    setLoading(true);\n    appService.invoke(\"openBin\", app, (err, validatedApp) => {\n      if (!err) {\n        let idx;\n        if (validatedApp.redflags.length == 0) {\n          idx = steps.findIndex(step => step.name === \"verify-info\");\n        } else {\n          idx = steps.findIndex(step => step.name === \"app-notice\");\n        }\n        validatedApp.step = 1;\n        setApp(validatedApp);\n        setCurrentStep(idx);\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    });\n  };\n\n  const saveApp = () => {\n    appService.invoke(\"create\", app, (err, app) => {\n      if (!err) {\n        app.redflags = [];\n        dispatch({type: ACTIONS.SET_APP, app});     \n        setApp(app);\n        moveNextStep();\n      } else {\n        setError(err);\n      }\n    });\n  };\n\n  return (\n    <React.Fragment>\n    {step.name === \"verification\" ? (\n      <ContactVerification\n        partner={partner}\n        moveNextStep={moveNextStep}\n        movePrevStep={movePrevStep}\n        title={title}\n      />\n    ): (\n      <Card>\n        <Spacer />\n\n        <FormPanel context={app} handler={setApp} visibleWhen={step.name === \"enter-bin\"}>\n          <Title>{title}</Title>\n          <Subtitle>{step.caption}</Subtitle>\n          <Spacer />\n          <Error msg={error} />\n          <Text caption=\"Enter BIN\" name=\"bin\" required={true} autoFocus={true} />\n          <ActionBar>\n            <BackLink caption=\"Cancel\" action={() => history.goBack()} />\n            <Button caption=\"Next\" action={validateBin} loading={loading} disableWhen={!app.bin} />\n          </ActionBar>\n        </FormPanel>\n\n        <Panel visibleWhen={step.name === \"email-verification\"}>\n          <Title>{title}</Title>\n          <Subtitle>{step.caption}</Subtitle>\n          <Spacer />\n          <Content center>\n            <span>Enter the code sent to your business email</span>\n            <span>address at {email}</span>\n          </Content>\n          <Spacer />\n          <Text\n            label=\"Email Code\"\n            placeholder=\"Enter code sent to your email\"\n            name=\"keyCode\"\n            value={keyCode}\n            onChange={setKeyCode}\n            maxLength={6}\n            autoFocus={true}\n            error={error ? true : false}\n            helperText={error}\n          />\n          {/* \n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\"}}>\n              <Button label=\"Resend Code\" action={()=>setIsResendCode(true)} variant=\"text\" />\n            </div>\n          */}\n          <ActionBar>\n            <Button label=\"Verify\" action={verifyCode} />\n          </ActionBar>\n        </Panel>\n\n        <FormPanel visibleWhen={step.name === \"app-notice\"} context={app} handler={setApp}>\n          <Title>{title}</Title>\n          <Subtitle>{step.caption}</Subtitle>\n          <Spacer height={30} />\n          <Panel row>\n            <Text caption=\"BIN\" name=\"bin\" readOnly={true} />\n            <Text caption=\"Application No.\" name=\"prevapp.appno\" readOnly={true} />\n          </Panel>\n          <Panel row>\n            <Text caption=\"Application Year\" name=\"prevapp.appyear\" readOnly={true} />\n            <Text caption=\"Application Type\" name=\"prevapp.apptype\" readOnly={true} />\n          </Panel>\n          <Text caption=\"Trade Name\" name=\"tradename\" readOnly={true} />\n          <Text caption=\"Owner Name\" name=\"owner.name\" readOnly={true} />\n          <Text caption=\"Business Address\" name=\"businessaddress\" readOnly={true} />\n\n          <p>\n          You cannot renew business due to the following issues. Please settle it\n          with the corresponding offices. You can contact our helpdesk at {partner.phoneno}.\n          </p>\n\n          <Table items={app.redflags} showPagination={false}>\n            <TableColumn caption=\"Issue\" expr=\"issue\" />\n            <TableColumn caption=\"Office/Department\" expr=\"office\" />\n          </Table>\n\n          <ActionBar>\n            <BackLink caption=\"Cancel\" action={() => history.goBack()} />\n          </ActionBar>\n        </FormPanel>\n        \n        <FormPanel visibleWhen={step.name === \"verify-info\"} context={app} handler={setApp}>\n          <Title>{title}</Title>\n          <Subtitle>{step.caption}</Subtitle>\n          <Spacer height={30} />\n          <Panel row>\n            <Text caption=\"BIN\" name=\"bin\" readOnly={true} />\n            <Text caption=\"Application No.\" name=\"prevapp.appno\" readOnly={true} />\n          </Panel>\n          <Panel row>\n            <Text caption=\"Application Year\" name=\"prevapp.appyear\" readOnly={true} />\n            <Text caption=\"Application Type\" name=\"prevapp.apptype\" readOnly={true} />\n          </Panel>\n          <Text caption=\"Trade Name\" name=\"tradename\" readOnly={true} />\n          <Text caption=\"Owner Name\" name=\"owner.name\" readOnly={true} />\n          <Text caption=\"Business Address\" name=\"businessaddress\" readOnly={true} />\n          <Spacer />\n          <h3>Line of Businesses Operated</h3>\n          <LobList lobs={app.lobs} />\n          <ActionBar>\n            <BackLink caption=\"Back\" action={() => setCurrentStep(1)} />\n            <Button caption=\"Next\" action={moveNextStep} />\n          </ActionBar>\n        </FormPanel>\n\n        <Panel visibleWhen={step.name === \"confirmation\"}>\n          <Title>{title}</Title>\n          <Confirmation\n            title=\"Business Renewal Application\"\n            partner={partner}\n            error={error}\n            onCancel={movePrevStep}\n            onContinue={saveApp}\n          />\n        </Panel>\n\n        <Panel visibleWhen={step.name === \"newapp\"} width={400}>\n          <Title>{title}</Title>\n          <TrackingInfo appno={app.controlno} onContinue={exitInitial} />\n        </Panel>\n      </Card>\n    )}\n      </React.Fragment>\n    );\n};\n\nexport default InitialPage;\n","import React from 'react'\nimport {\n  Decimal,\n  Integer,\n}\nfrom \"rsi-react-web-components\";\nimport styles from \"./EditInfo.css\";\n\nconst components = {\n  \"decimal\": Decimal,\n  \"integer\": Integer,\n}\n\nconst EditInfo = ({\n  dataType=\"integer\",\n  caption,\n  name,\n}) => {\n  const HandlerComponent = components[dataType];\n  \n  return (\n    <div className={styles.EditInfo}>\n      <label>{caption}</label>\n      <HandlerComponent\n        className={styles.EditInfo__item}\n        name={name}\n        fullWidth={false}\n        variant='outlined'\n        size='small'\n      />\n    </div>\n  )\n}\n\nexport default EditInfo\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  FormPanel,\n  Panel,\n  Error,\n  Button,\n  ActionBar,\n  BackLink,\n  Spacer,\n  Title,\n  Text,\n  Subtitle,\n  Subtitle2,\n  useData,\n} from \"rsi-react-web-components\";\n\nimport EditInfo from \"./components/EditInfo\";\nimport { ACTIONS } from \"./reducer\";\n\nconst EditInfoPage = ({\n  appService,\n  moveNextStep,\n  movePrevStep,\n  title,\n  stepCompleted\n}) => {\n  \n  const [ctx, dispatch] = useData();\n  const { contact, app: initialApp } = ctx;\n  \n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [app, setApp] = useState(initialApp);\n\n  useEffect(() => {\n    setLoading(true);\n    appService.invoke(\"getInfos\", app, (err, app) => {\n      if (!err) {\n        setApp(app);\n        dispatch({type: ACTIONS.SET_APP, app});\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    });\n  }, [])\n\n  const submitInfo = () => {\n    setError(null);\n    setLoading(true);\n    const infos = {objid: app.objid, step: 4, lobs: app.lobs, infos: app.infos};\n    appService.invoke(\"saveInfos\", infos, (err, res) => {\n      if (!err) {\n        moveNextStep();\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    });\n  }\n\n  return (\n    <Card>\n      <Error msg={error}/>\n      <FormPanel context={app} handler={setApp}>\n        <Title>{title}</Title>\n        <Subtitle2>Tracking No. {app.controlno}</Subtitle2>\n        <Subtitle>Edit Information</Subtitle>\n        <Spacer height={30} />\n        <Panel row>\n            <Text caption=\"BIN\" name=\"bin\" readOnly={true} />\n            <Text caption=\"Application No.\" name=\"prevapp.appno\" readOnly={true} />\n          </Panel>\n          <Panel row>\n            <Text caption=\"Application Year\" name=\"prevapp.appyear\" readOnly={true} />\n            <Text caption=\"Application Type\" name=\"prevapp.apptype\" readOnly={true} />\n          </Panel>\n        <Text caption=\"Trade Name\" name=\"tradename\" readOnly={true} />\n        <Text caption=\"Owner Name\" name=\"owner.name\" readOnly={true} />\n        <Text caption=\"Business Address\" name=\"businessaddress\" readOnly={true} />\n        <Spacer />\n        <h4>Business Information</h4>\n        {app.infos.map((info, idx) => \n          <EditInfo\n            key={`${info.name}:${idx}`}\n            name={`infos[${idx}].value`}\n            dataType={info.datatype}\n            caption={info.caption}\n          />\n        )}\n        <Spacer />\n        <Panel style={styles.lobTitles}>\n          <h4>Line of Businesses</h4>\n          <h4>Last Year Gross (Php)</h4>\n        </Panel>\n        {app.lobs.map((lob, idx) => \n          <EditInfo\n            key={`${lob.name}:${idx}`}\n            name={`lobs[${idx}].gross`}\n            dataType=\"decimal\"\n            caption={lob.lob.name}\n          />\n        )}\n        <ActionBar>\n          <BackLink caption=\"Back\" action={movePrevStep} />\n          <Button caption=\"Next\" action={submitInfo} />\n        </ActionBar>\n      </FormPanel>\n    </Card>\n  );\n};\n\nconst styles = {\n  lobTitles: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}\n\n\nexport default EditInfoPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, UploadButton, BackupIcon } from \"rsi-react-web-components\";\nimport styles from \"./RequirementList.css\";\n\nconst RequirementList = ({ requirements, deleteRequirement, onUpload }) => {\n  const [requirement, setRequirement] = useState({ ref:{}, attachment:{}});\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  useEffect(() => {\n    if (requirements.length > 0 && selectedIndex < 0) {\n      setRequirement(requirements[0]);\n      setSelectedIndex(0);\n    }\n  }, [requirements]);\n\n  const onSelectItem = (item) => {\n    setSelectedIndex(requirements.findIndex(req => req.objid === item.objid));\n    setRequirement(item);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.list}>\n        {requirements.map((req, idx) => {\n          const classNames = selectedIndex === idx ? `${styles.listItem} ${styles.selected}` : styles.listItem;\n          return (\n            <div key={req.objid} \n              className={classNames} \n              onClick={() => onSelectItem(req)}\n            >\n              <label>{req.ref.title}</label>\n              {req.attachment && req.attachment.path && \n                <BackupIcon style={{fontSize: 20, color: \"green\"}} />\n              }\n            </div>\n          )\n        })}\n      </div>\n      <div className={styles.viewer}>\n          <div className={styles.menubar}>\n            <label className={styles.menubar__label}>{requirement.ref.title}</label>\n            {requirement.attachment.path &&\n              <Button caption=\"Delete\" color=\"secondary\" action={() => deleteRequirement(requirement)}/>\n            }\n          </div>\n          <div className={styles.imageContainer}>\n            {requirement.attachment.path ? (\n              <img className={styles.imageContainer__image}\n                src={requirement.attachment.path}\n                alt={requirement.attachment.name} />\n              ): (\n                <UploadButton \n                  key={requirement.objid} \n                  fileId={requirement.objid}\n                  data={requirement}\n                  onUpload={(attachment) => onUpload(attachment, requirement)}\n                  uploadedFile={requirement.attachment}\n                />\n            )}\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RequirementList;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Service,\n  Stepper,\n  Content,\n  Page,\n  StateProvider,\n} from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport reducer, { initialState } from \"./reducer\";\n\nimport SelectTxnTypePage from \"./SelectTxnTypePage.js\";\nimport InitialPage from \"./InitialPage\";\nimport GeneralInfoPage from \"./GeneralInfoPage\";\nimport EditInfoPage from \"./EditInfoPage\";\nimport RequirementPage from \"./RequirementPage\";\nimport ConfirmPage from \"./ConfirmPage\";\nimport CompletedPage from \"./CompletedPage\";\n\nconst pages = [\n  { step: 0, name: \"select\", caption: \"Initial\", component: SelectTxnTypePage },\n  { step: 1, name: \"initial\", caption: \"Initial\", component: InitialPage },\n  { step: 2, name: \"info\", caption: \"General Information\", component: GeneralInfoPage },\n  { step: 3, name: \"edit-info\", caption: \"Edit Information\", component: EditInfoPage },\n  { step: 4, name: \"requirements\", caption: \"Requirements\", component: RequirementPage },\n  { step: 5, name: 'confirm', caption: 'Confirm', component: ConfirmPage },\n  { step: 6, name: 'completed', caption: 'Completed', component: CompletedPage },\n];\n\nconst RenewBusinessWebController = ({\n  partner,\n  service,\n  location,\n  history,\n  initialStep=0\n}) => {\n\n  const [step, setStep] = useState(initialStep);\n  const [app, setApp] = useState({step: 0});\n\n  const moveNextStep = (nextStep) => {\n    if (typeof(nextStep) === \"number\") {\n      setStep(nextStep);\n    } else {\n      nextStep = step+1;\n      setStep(cs => cs+1);\n    }\n    setApp({...app, step: nextStep});\n  }\n\n  const movePrevStep = () => {\n    if (step === 0) {\n      history.goBack();\n    } else {\n      setStep(cs => cs-1);\n    }\n  }\n\n  const handleStep = (step) => {\n    setStep(step + 2);\n  };\n\n   const page = pages[step];\n  const PageComponent = page.component;\n  \n  const compProps = {\n    partner,\n    service,\n    location,\n    history,\n    moveNextStep,\n    movePrevStep,\n    appService: Service.lookup(`${partner.id}:OnlineBusinessRenewalService`, \"bpls\"),\n    stepCompleted: step < app.step,\n    title: \"Business Renewal Application\",\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Page>\n        {/** {step > 0 && app.step < pages.length && ( */}\n        {step > 1 && (\n          <Panel target=\"left\" style={styles.stepperContainer}>\n            <Stepper\n              steps={pages.filter(pg => pg.step > 1)}\n              completedStep={app.step - 1}\n              activeStep={step - 2}\n              handleStep={handleStep}\n            />\n          </Panel>\n        )}\n        <Content center>\n          <Panel>\n            <PageComponent page={page} {...compProps} />\n          </Panel>\n        </Content>\n      </Page>\n      }\n    </StateProvider>\n  );\n};\n\nconst styles = {\n  stepperContainer: {\n    paddingTop: 30,\n    paddingLeft: 40,\n  },\n};\n\nexport default RenewBusinessWebController;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Radio,\n  ActionBar,\n  BackLink,\n  Item,\n  Spacer,\n  Error,\n  Text,\n  Subtitle,\n  Page,\n  Card,\n  Title,\n  useData,\n} from 'rsi-react-web-components';\nimport { ACTIONS } from \"./reducer\"\n\nconst SelectTxnTypePage = ({\n  partner, \n  service, \n  history, \n  title,\n  appService,\n  moveNextStep,\n}) => {\n  const [error, setError] = useState();\n  const [appType, setAppType]= useState(\"new\");\n  const [appno, setAppno] = useState();\n\n  const [ctx, dispatch] = useData();\n\n  const submitAppType = () => {\n    if (appType === \"new\") {\n      moveNextStep();\n    } else {\n      if (!appno) {\n        setError(\"Tracking No. is required.\");\n      } else {\n        appService.invoke(\"getApplication\", {controlno: appno}, (err, app) => {\n          if (!err) {\n            app.infos = [];\n            app.lobs = [];\n            dispatch({type: ACTIONS.SET_APP, app});\n            moveNextStep(app.step);\n          } else  {\n            setError(err);\n          }\n        });\n      };\n    };\n  }\n\n  return (\n    <Card>\n      <Title>{service.title}</Title>\n      <Subtitle>Select an action</Subtitle>\n      <Spacer height={30} />\n      <Radio value={appType} onChange={setAppType} >\n        <Item caption=\"Create New Application\" value=\"new\" />\n        <Item caption=\"Resume Pending Application\" value=\"resume\" />\n      </Radio>\n      <Text\n        caption=\"Application Tracking No.\"\n        value={appno} onChange={setAppno}\n        visibleWhen={appType === \"resume\"}\n        variant=\"outlined\"\n        fullWidth={false}\n        required\n        style={{marginLeft: 40}}\n        error={error}\n        helperText={error}\n        size=\"small\"\n        autoFocus={true} \n        />\n      <ActionBar>\n        <BackLink caption=\"Cancel\" action={() => history.goBack()} />\n        <Button caption=\"Next\" action={submitAppType} />\n      </ActionBar>\n    </Card>\n  )\n}\n\nexport default SelectTxnTypePage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  FormPanel,\n  Panel,\n  Error,\n  Button,\n  ActionBar,\n  BackLink,\n  Spacer,\n  Title,\n  Label,\n  Text,\n  Subtitle,\n  Subtitle2,\n  useData,\n} from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport LobList from \"./components/LobList\";\n\n\nconst GeneralInfoPage = ({\n  moveNextStep,\n  movePrevStep,\n  appService, \n  title,\n  stepCompleted\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { contact, app: initialApp } = ctx;\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [app, setApp] = useState(initialApp);\n\n  useEffect(() => {\n    setLoading(true);\n    appService.invoke(\"getInfos\", {objid: app.objid}, (err, app) => {\n      if (!err) {\n        setApp(app);\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    })\n  }, [])\n\n  return (\n    <Card>\n      <Error msg={error}/>\n      <FormPanel context={app} handler={setApp}>\n        <Title>{title}</Title>\n        <Subtitle2>Tracking No. {app.controlno}</Subtitle2>\n        <Subtitle>General Information</Subtitle>\n        <Spacer height={30} />\n        <Panel row>\n          <Text caption=\"BIN\" name=\"bin\" readOnly={true} />\n          <Text caption=\"Application No.\" name=\"prevapp.appno\" readOnly={true} />\n        </Panel>\n        <Panel row>\n          <Text caption=\"Application Year\" name=\"prevapp.appyear\" readOnly={true} />\n          <Text caption=\"Application Type\" name=\"prevapp.apptype\" readOnly={true} />\n        </Panel>\n        <Text caption=\"Trade Name\" name=\"tradename\" readOnly={true} />\n        <Text caption=\"Owner Name\" name=\"owner.name\" readOnly={true} />\n        <Text caption=\"Business Address\" name=\"businessaddress\" readOnly={true} />\n        <Spacer />\n        {app.infos.map(info => \n          <Label key={info.name} caption={info.caption} >{info.value}</Label>\n        )}\n        <Spacer />\n        <LobList lobs={app.lobs} isPreviousInfo={false}  />\n        <ActionBar>\n          <BackLink caption=\"Back\" action={movePrevStep} />\n          <Button caption=\"Next\" action={moveNextStep} />\n        </ActionBar>\n      </FormPanel>\n    </Card>\n  );\n};\n\nexport default GeneralInfoPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Error,\n  Button,\n  ActionBar,\n  BackLink,\n  Title,\n  Subtitle,\n  Subtitle2,\n  useData,\n} from \"rsi-react-web-components\";\n\nimport { ACTIONS } from \"./reducer\";\nimport RequirementList from \"./components/RequirementList\";\n\nconst RequirementPage = ({\n  appService,\n  moveNextStep,\n  movePrevStep,\n  title,\n  stepCompleted\n}) => {\n  \n  const [ctx, dispatch] = useData();\n  const { contact, app } = ctx;\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [requirements, setRequirements] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    appService.invoke(\"getRequirements\", app, (err, requirements) => {\n      if (!err) {\n        requirements.forEach(req => req.attachment = {});\n        dispatch({type: ACTIONS.SET_APP, app: {...app, step: 4}});\n        setRequirements(requirements);\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  const deleteRequirement = (deletedRequirement) => {\n    const deletedIdx = requirements.findIndex(req => req.objid === deletedRequirement.objid);\n    const updatedRequirements = [...requirements];\n    updatedRequirements[deletedIdx].attachment = {};\n    setRequirements(updatedRequirements);\n    saveRequirements(updatedRequirements);\n  };\n\n  const saveRequirements = (updatedRequirements) => {\n    const updatedApp = {objid: app.objid, requirements: updatedRequirements};\n    appService.invoke(\"update\", updatedApp, (err, _) => {\n      if (err) {\n        setError(err);\n      }\n    });\n  }\n\n  const submit = () => {\n    setLoading(false);\n    const updatedApp = {objid: app.objid, step: app.step+1}\n    appService.invoke(\"update\", updatedApp, (err, _) => {\n      if (!err) {\n        moveNextStep();\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    });\n  }\n\n  const onUpload = (attachment, requirement) => {\n    const idx = requirements.findIndex(req => req.objid === requirement.objid);\n    const updatedRequirements = [...requirements];\n    updatedRequirements[idx].attachment = attachment;\n    setRequirements(updatedRequirements);\n    saveRequirements(updatedRequirements);\n  }\n\n  const requirementsCompleted = requirements.findIndex(req => typeof(req.attachment) === \"undefined\") == -1;\n\n  return (\n    <Card>\n      <Error msg={error}/>\n      <Title>{title}</Title>\n      <Subtitle2>Tracking No. {app.controlno}</Subtitle2>\n      <Subtitle>Requirements</Subtitle>\n      <h4>Please attach the following documents:</h4>\n      <RequirementList \n        requirements={requirements} \n        onUpload={onUpload}\n        deleteRequirement={deleteRequirement} \n      />\n      <ActionBar>\n        <BackLink caption=\"Back\" action={movePrevStep} />\n        <Button caption=\"Next\" action={submit} disableWhen={!requirementsCompleted} />\n      </ActionBar>\n    </Card>\n  );\n};\n\n\nexport default RequirementPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Panel,\n  FormPanel,\n  Error,\n  Button,\n  ActionBar,\n  BackLink,\n  Spacer,\n  Title,\n  Label,\n  Text,\n  Subtitle,\n  Subtitle2,\n  useData,\n} from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport LobList from \"./components/LobList\";\n\n\nconst ConfirmPage = ({\n  moveNextStep,\n  movePrevStep,\n  appService, \n  title,\n  stepCompleted\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { contact, app: initialApp } = ctx;\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [app, setApp] = useState(initialApp);\n\n  useEffect(() => {\n    setLoading(true);\n    appService.invoke(\"getInfos\", {objid: app.objid}, (err, app) => {\n      if (!err) {\n        setApp(app);\n      } else {\n        setError(err);\n      }\n      setLoading(false);\n    })\n  }, [])\n\n  const submit = () => {\n    const submittedApp = { objid: app.objid, step: 2}\n    appService.invoke(\"submit\", submittedApp, (err, app) => {\n      if (!err) {\n        moveNextStep();\n      } else {\n        setError(err);\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <Error msg={error}/>\n      <FormPanel context={app} handler={setApp}>\n        <Title>{title}</Title>\n        <Subtitle2>Tracking No. {app.controlno}</Subtitle2>\n        <Subtitle>Confirmation</Subtitle>\n        <Spacer height={30} />\n        <Panel row>\n          <Text caption=\"BIN\" name=\"bin\" readOnly={true} />\n          <Text caption=\"Application No.\" name=\"prevapp.appno\" readOnly={true} />\n        </Panel>\n        <Panel row>\n          <Text caption=\"Application Year\" name=\"prevapp.appyear\" readOnly={true} />\n          <Text caption=\"Application Type\" name=\"prevapp.apptype\" readOnly={true} />\n        </Panel>\n        <Text caption=\"Trade Name\" name=\"tradename\" readOnly={true} />\n        <Text caption=\"Owner Name\" name=\"owner.name\" readOnly={true} />\n        <Text caption=\"Business Address\" name=\"businessaddress\" readOnly={true} />\n        <Spacer />\n        {app.infos.map(info => \n          <Label key={info.name} caption={info.caption} captionStyle={{width: 300}} >{info.value}</Label>\n        )}\n        <Spacer />\n        <LobList lobs={app.lobs} isPreviousInfo={false}  />\n        <ActionBar>\n          <BackLink caption=\"Back\" action={movePrevStep} />\n          <Button caption=\"Submit\" action={submit} />\n        </ActionBar>\n      </FormPanel>\n    </Card>\n  );\n};\n\nexport default ConfirmPage;\n","import React from \"react\";\nimport {\n  Card,\n  Subtitle,\n  Subtitle2,\n  Panel,\n  Button,\n  ActionBar,\n  Spacer,\n  Title,\n  useData,\n} from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\n\nconst CompletedPage = ({\n  history,\n  location,\n  partner,\n  title,\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { contact, app } = ctx;\n\n  const completeHandler = () => {\n    history.replace(`/partner/${partner.name}/services`, {partner});\n  }\n\n  return (\n    <Card>\n      <Panel>\n        <Title>{title}</Title>\n        <Subtitle2>Tracking No. {app.controlno}</Subtitle2>\n        <Subtitle>Application Completed</Subtitle>\n        <Spacer height={30} />\n        <p>\n        Your application has been successfully submitted. \n        </p>\n        <p>\n        A notification would be sent on your business email account\n        upon approval of your application for payment.\n        </p>\n        <p>\n        Thank you for using this service.\n        </p>\n        <ActionBar>\n          <Button caption=\"Return\" action={completeHandler} />\n        </ActionBar>\n      </Panel>\n    </Card>\n  );\n};\n\nexport default CompletedPage;\n"],"sourceRoot":""}