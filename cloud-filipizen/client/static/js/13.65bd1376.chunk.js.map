{"version":3,"sources":["../../src/components/ApplicationTypeSelect.js","../../src/components/Confirmation.js","../../src/components/TrackingInfo.js","../../src/buildingpermit/BuildingPermitInitial.js","../../src/buildingpermit/BuildingPermitApplicant.js","../../src/components/LotOwnershipType.js","../../src/components/OwnershipInfo.js","../../src/components/LotInformation.js","../../src/buildingpermit/BuildingPermitLocation.js","../../src/buildingpermit/BuildingPermitProject.js","../../src/components/ProfessionalLookup.js","../../src/components/ProfessionalCard.js","../../src/buildingpermit/BuildingPermitOccupancy.js","../../src/components/InfoComponent.js","../../src/buildingpermit/BuildingPermitAccessories.js","../../src/buildingpermit/BuildingPermitOtherPermits.js","../../src/buildingpermit/BuildingPermitConfirm.js","../../src/buildingpermit/BuildingPermitCompleted.js","../../src/buildingpermit/BuildingPermitWebController.js","../../src/buildingpermit/BuildingPermitContractor.js","../../src/occupancypermit/OccupancyPermitInitial.js","../../src/occupancypermit/PlannedVsActual.js","../../src/occupancypermit/ActualCost.js","../../src/occupancypermit/OtherCost.js","../../src/occupancypermit/Confirmation.js","../../src/occupancypermit/OccupancyPermitWebController.js","../../src/occupancypermit/OccupancyType.js","../../src/occupancypermit/Contractor.js","../../src/components/ProfessionList.js","../../src/professional/Initial.js","../../src/professional/NewProfessional.js","../../src/professional/Success.js","../../src/assets/success.png","../../src/professional/ProfessionalWebController.js","../../src/apptracking/AppTrackingWebController.js","../../src/obobilling/OnlineBilling.js","../../src/obobilling/OboBillingWebController.js","../../src/obobilling/InitialInfo.js","../../src/obobilling/Payment.js"],"names":["ApplicationTypeSelect","onCancel","onSubmit","error","service","useState","errorText","setErrorText","appType","setAppType","appno","setAppno","React","Page","Card","Title","title","Subtitle","Spacer","height","Radio","value","onChange","Item","caption","Text","visibleWhen","variant","fullWidth","required","style","marginLeft","helperText","size","ActionBar","BackLink","action","Button","Confirmation","partner","onContinue","agreeDisclaimer","setAgreeDisclaimer","Fragment","Error","msg","Subtitle2","opacity","Checkbox","name","disableWhen","TrackingInfo","svc","Service","lookup","steps","BuildingPermitInitial","props","email","contact","setContact","apptype","app","setApp","activeStep","setActiveStep","setError","handler","step","moveNextStep","cs","EmailVerification","showName","onVerify","FormPanel","context","Panel","editable","autoFocus","goBack","newApp","orgcode","id","worktypes","invoke","err","objid","width","entityTypes","LotOwnershipType","rest","OwnershipInfo","owner","showIdEntry","Combobox","items","entitytype","Label","ResidenceAddress","person","IdEntry","LotInformation","row","styles","balanceText","color","fontWeight","locationContainer","border","borderRadius","boxShadow","marginBottom","tdno","padding","backgroundColor","borderBottom","rpuInfoContainer","initialWorkTypes","column","display","flexDirection","ProfessionalLookup","onSelect","hideSearchText","prc","query","setQuery","selectedItems","setSelectedItems","professionals","setProfessionals","fetchList","params","idno","p","list","console","log","Lookup","searchFieldTitle","searchField","enableSelect","length","limit","start","Table","rowsPerPage","showPagination","singleSelect","keyId","onSelectItems","TableColumn","expr","item","lastname","firstname","middlename","ProfessionalCard","professional","onSelectProfessional","photoUrl","container","lookupContainer","captionStyle","margin","nameContainer","labelStyle","profession","Image","src","label","dtissued","dtvalid","placeissued","ptr","refno","borderWidth","borderColor","fontSize","justifyContent","alignItems","paddingTop","paddingLeft","paddingRight","dipslay","paddingBottom","group","marginRight","RadioItem","description","components","decimal","Decimal","integer","Integer","boolean","checkInfo","InfoComponent","category","dataType","unit","HandlerComponent","toLowerCase","infoContainer","flexBasis","infoTitle","professionalLookup","itemsContainer","workTypeContainer","justifyConent","linkContainer","ancillaryContainer","ancillaryItem","pages","component","appService","setLoading","setEditmode","appid","resident","applicant","setApplicant","useEffect","Email","Mobileno","updatedApplicant","address","LocalAddress","NonLocalAddress","barangays","useBarangayList","mode","setMode","editmode","setRefno","rpus","setRpus","property","setProperty","location","setLocation","reloadList","viewInitial","viewList","map","key","rpu","titleno","pin","addr","lotno","push","blockno","street","barangay","join","classcode","areasqm","prop","find","brgy","newRefno","type","city","citymunicipality","municipality","ctc","lotowned","alert","BarangayList","stepCompleted","initialProject","numfloors","numunits","occupancytype","division","occupancyMode","project","setProject","setOccupancyGroups","setOccupancyDivisions","setOccupancyTypes","setProfessional","workTypes","wt","pwt","checked","contractor","groups","groupid","divisions","divisionid","types","readOnly","occupancytypeid","textAlign","decimalScale","Date","totalfloorarea","projectcost","dtproposedconstruction","dtexpectedcompletion","proj","worktype","idx","findIndex","updatedWorkTypes","filter","contractorid","setOccupancyMode","occupancyGroups","occupancyDivisions","occupancyTypes","setPrevOccupancyId","setShowConfirm","Control","res","hasAccessories","setHasAccessories","accessories","setAccessories","accessoryTypes","setAccessoryTypes","loadAccessories","test","forEach","ot","Object","keys","o","ix","infos","info","iy","datatype","accessory","loaded","setLoaded","availableAncillaryPermits","setAvailableAncillaryPermits","ancillaryPermits","setAncillaryPermits","ancillaryPermit","setAncillaryPermit","loadAncillaryPermits","hasIncompletePermit","permit","designprofessionalid","prevInfo","CheckIcon","EditButton","typeid","DeleteButton","incompletePermits","toUpperCase","equipmentcost","_","selectedPermits","selected","permits","designprofessional","supervisor","supervisorid","updatedPermit","confirm","setConfirm","loading","showPreview","setShowPreview","resetStatus","permittypeid","Icon","PageviewIcon","href","ReportViewer","open","onClose","MsgBox","onAccept","Loading","ButtonLink","CloudDownloadIcon","icon","multiline","rows","BuildingPermitWebController","getUrlParameter","setStep","history","page","PageComponent","compProps","ps","updatedApp","saveHandler","target","stepperContainer","Stepper","completedStep","handleStep","OccupancyPermitInitial","onComplete","bldgPermitNo","setBldgPermitNo","bldgPermit","setBldgPermit","movePrevStep","permitno","permittype","bldgpermit","columnTitle","maxWidth","onSubmitOccupancyType","disabled","fullWdith","update","field","cost","setCost","updatedCost","isContracted","setIsContracted","OccupancyPermitWebController","onCompleteInitial","ProfessionList","professions","Initial","onVerified","setInfo","setKey","professionList","setProfessionList","VerifyEmailCode","hiddenCode","NewProfessional","initialProfessional","entity","Person","showAddress","PrcCard","disableIdNo","PtrCard","Success","Content","center","alt","text","CardActions","onClick","ProfessionalWebController","Disclaimer","reconciledProf","province","prof","toString","AppTrackingWebController","trackingno","setTrackingno","subtasks","verifiedInfo","setVerifiedInfo","duration","task","getDuration","dtcreated","currentTask","taskInfo","assignee","table","trth","tableText","st","borderSpacing","cellSpacing","OnlineBilling","paymentError","ctx","useData","txntype","bill","align","format","currencyFormat","amount","origin","data","paidby","paidbyaddress","particulars","initialState","reducer","draft","Component","ContactVerification","dispatch","setParams","lookupAsync","getBilling","qtr","showdetails","then","e","JSON","stringify","EPayment","module","initialContact","initialStep","cancelPayment","OboBillingWebController","StateProvider"],"mappings":"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","file":"static/js/13.65bd1376.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Radio,\n  ActionBar,\n  BackLink,\n  Item,\n  Spacer,\n  Error,\n  Text,\n  Subtitle,\n  Page,\n  Card,\n  Title\n} from 'rsi-react-web-components';\n\nconst ApplicationTypeSelect = ({\n  onCancel,\n  onSubmit,\n  error,\n  service\n}) => {\n  const [errorText, setErrorText] = useState({});\n  const [appType, setAppType]= useState(\"new\");\n  const [appno, setAppno] = useState();\n\n  const submitAppType = () => {\n    if (appType !== \"new\") {\n      if (!appno) {\n        setErrorText({appno: \"Tracking No. is required.\"});\n        return\n      }\n    }\n    onSubmit({appType, appno});\n  }\n\n  return (\n    <Page>\n      <Card>\n        <Title>{service.title}</Title>\n        <Subtitle>Select an action</Subtitle>\n        <Spacer height={30} />\n        <Radio value={appType} onChange={setAppType} >\n          <Item caption=\"Create New Application\" value=\"new\" />\n          <Item caption=\"Resume Pending Application\" value=\"resume\" />\n        </Radio>\n        <Text\n          caption=\"Application Tracking No.\"\n          value={appno} onChange={setAppno}\n          visibleWhen={appType === \"resume\"}\n          variant=\"outlined\"\n          fullWidth={false}\n          required\n          style={{marginLeft: 40}}\n          error={errorText.appno || error}\n          helperText={errorText.appno || error}\n          size=\"small\"\n          />\n        <ActionBar>\n          <BackLink caption=\"Cancel\" action={onCancel} />\n          <Button caption=\"Next\" action={submitAppType} />\n        </ActionBar>\n      </Card>\n    </Page>\n  )\n}\n\nexport default ApplicationTypeSelect;\n","import React, { useState } from \"react\";\nimport {\n  Subtitle2,\n  Button,\n  Checkbox,\n  ActionBar,\n  BackLink,\n  Spacer,\n  Subtitle,\n  Error\n} from 'rsi-react-web-components';\n\n\nconst Confirmation = ({\n  partner,\n  title=\"New Permit Application\",\n  onCancel,\n  onContinue,\n  error\n}) => {\n  const [agreeDisclaimer, setAgreeDisclaimer] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Subtitle>{title}</Subtitle>\n      <Spacer height={30} />\n      <Error msg={error} />\n      <Subtitle2>Please read thoroughly before proceeding</Subtitle2>\n      <p style={{opacity: 0.8}}>\n      This online service will require personal information from the applicant,\n      lot owner(s) and professionals involved in this transaction. In compliance\n      with the Data Privacy Act, we are securing your consent that you have been\n      authorized by the aforementioned parties to act on their behalf. The data\n      collected will be stored, processed and used for effectively carrying out\n      legitimate transactions with the local government of {partner.title}. If you\n      do not agree to these terms, you can cancel out by click on the Cancel button.\n      If you agree to these terms, tick on the checkbox and click Continue.\n      </p>\n      <Checkbox caption='Yes, I have read and agree to the terms and conditions'\n        value={agreeDisclaimer}\n        name='agreeDisclaimer'\n        onChange={setAgreeDisclaimer}\n      />\n      <ActionBar>\n        <BackLink caption=\"Cancel\" action={onCancel} />\n        <Button caption='Continue' action={onContinue} disableWhen={!agreeDisclaimer} />\n      </ActionBar>\n  </React.Fragment>\n  )\n}\n\nexport default Confirmation;\n","import React from \"react\";\nimport {\n  Subtitle2,\n  Button,\n  ActionBar,\n  Spacer,\n  Subtitle\n} from 'rsi-react-web-components';\n\nconst TrackingInfo = ({\n  title=\"New Permit Application\",\n  appno,\n  onContinue\n}) => {\n  return (\n    <React.Fragment>\n      <Subtitle>{title}</Subtitle>\n      <Spacer height={30} />\n      <Subtitle2>Application created</Subtitle2>\n      <p>\n      Please take note of the tracking number for this application.\n      This will be your tracking reference for completing\n      and follow up for this application.\n      </p>\n      <Subtitle2>{appno}</Subtitle2>\n      <ActionBar>\n        <Button caption='Continue' action={onContinue} />\n      </ActionBar>\n    </React.Fragment>\n  )\n}\n\nexport default TrackingInfo;\n","import React, { useState, useEffect } from 'react';\nimport {\n  FormPanel,\n  Panel,\n  Card,\n  Subtitle2,\n  Button,\n  ActionBar,\n  BackLink,\n  Title,\n  Spacer,\n  Service,\n  Text,\n  Subtitle,\n  Page,\n  Radio,\n  Item\n} from 'rsi-react-web-components';\n\nconst svc = Service.lookup(\"OnlineBuildingPermitService\", \"obo\");\n\nimport { EmailVerification } from 'rsi-react-filipizen-components'\nimport Confirmation from \"../components/Confirmation\";\nimport TrackingInfo from \"../components/TrackingInfo\";\n\nconst steps = [\n  {name: \"email\", caption: \"Email Verification\"},\n  {name: \"select-apptype\", caption: \"Select Application Type\"},\n  {name: \"project-name\", caption: \"Project Name\"},\n  {name: \"confirmation\", caption: \"Confirmation\"},\n  {name: \"newapp\", caption: \"New Application \"},\n]\n\nconst BuildingPermitInitial = (props) => {\n  //TODO: remove test contact\n  // const [contact, setContact] = useState({\n  const [contact, setContact] = useState({\n    name: \"JUAN DELA CRUZ\", email: \"juan@gmail.com\"\n  })\n  const [agreeDisclaimer, setAgreeDisclaimer] = useState(false)\n  const [appType, setAppType] = useState(\"new\")\n  const [projectName, setProjectName] = useState()\n  const [appno, setAppno] = useState()\n  const [app, setApp] = useState({apptype: \"NEW\"})\n  //TODO: reset step to 0\n  const [activeStep, setActiveStep] = useState(1);\n  const [error, setError] = useState();\n\n  const { partner, service, handler, history, onCancel } = props\n  const step = steps[activeStep];\n\n  const moveNextStep = () => {\n    setActiveStep(cs => cs + 1);\n  }\n\n  const movePrevStep = () => {\n    setActiveStep(cs => cs-1);\n  }\n\n  const saveApp = () => {\n    const newApp = {\n      ...app,\n      orgcode: partner.orgcode || partner.id,\n      apptype: appType,\n      contact,\n      worktypes: [],\n    }\n\n    svc.invoke(\"create\", newApp, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        setAppno(app.objid)\n        moveNextStep();\n      }\n    });\n  }\n\n  const exitInitial = () => {\n    handler(appno);\n  }\n\n  const onVerifyEmail = (contact) => {\n    setContact(contact);\n    moveNextStep();\n  }\n\n  return (\n    <Page>\n      <Card>\n        <Title>{service.title}</Title>\n        <EmailVerification visibleWhen={step.name === \"email\"} showName={true} onCancel={onCancel} onVerify={onVerifyEmail}  partner={partner} />\n\n        <FormPanel visibleWhen={step.name === \"select-apptype\"} context={app} handler={setApp} >\n          <Subtitle>Select Application Type</Subtitle>\n          <Panel style={{marginLeft: 20}}>\n            <Radio name=\"apptype\">\n              <Item caption=\"New Construction\" value=\"NEW\" />\n              <Item caption=\"Renovation\" value=\"RENOVATION\" editable={false} />\n              <Item caption=\"Demolition\" value=\"DEMOLITION\" editable={false}  />\n            </Radio>\n          </Panel>\n          <ActionBar>\n            <BackLink caption=\"Back\" action={onCancel} />\n            <Button caption=\"Next\" action={moveNextStep} />\n          </ActionBar>\n        </FormPanel>\n\n        <FormPanel visibleWhen={step.name === \"project-name\"} context={app} handler={setApp}>\n          <Subtitle>New Building Permit Application</Subtitle>\n          <Spacer height={30} />\n          <Subtitle2>Project Information</Subtitle2>\n          <Text caption=\"Project Name\" name=\"title\"  autoFocus={true} />\n          <ActionBar>\n            <BackLink action={movePrevStep} />\n            <Button caption='Next' action={moveNextStep} />\n          </ActionBar>\n        </FormPanel>\n\n        <Panel visibleWhen={step.name === \"confirmation\"}>\n          <Confirmation partner={partner} error={error} onCancel={props.goBack} onContinue={saveApp} />\n        </Panel>\n\n        <Panel visibleWhen={step.name === \"newapp\"} width={400}>\n          <TrackingInfo appno={appno} onContinue={exitInitial} />\n        </Panel>\n\n      </Card>\n    </Page>\n  )\n}\n\nexport default BuildingPermitInitial;\n","import React, { useState, useEffect } from 'react'\nimport {\n  Error,\n  FormPanel,\n  Text,\n  Email,\n  Mobileno,\n  Spacer,\n  Checkbox,\n  Combobox,\n  Button,\n  ActionBar,\n  Panel,\n  Subtitle,\n  Subtitle2\n} from 'rsi-react-web-components'\n\nimport { LocalAddress, NonLocalAddress, IdEntry } from 'rsi-react-filipizen-components';\n\nconst entityTypes = ['INDIVIDUAL', 'CORPORATION', 'GOVERNMENT', 'OTHER']\n\nconst BuildingPermitApplicant = (props) => {\n  const { appno, partner, appService, moveNextStep, stepCompleted } = props\n\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [editmode, setEditmode] = useState(\"read\");\n  const [applicant, setApplicant] = useState({\n    appno,\n    appid: appno,\n    entitytype: 'INDIVIDUAL',\n    resident: false,\n  })\n\n  const handleError = (err) => {\n    setLoading(false)\n    setError(err.toString())\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    appService.invoke(\"getApplicant\", {appid: appno}, (err, applicant) => {\n      if (err) {\n        setError(err)\n      } else if(!applicant) {\n        setEditmode(\"create\");\n      }\n      else {\n        setApplicant(applicant);\n        setEditmode(\"read\");\n      };\n      setLoading(false);\n    })\n  }, []);\n\n  const saveApplicant = () => {\n    setError(null);\n    appService.invoke(\"saveApplicant\", applicant, (err, app) => {\n      if (err) {\n        setError(err)\n      } else {\n        moveNextStep();\n      }\n      setLoading(false)\n    })\n  }\n\n  const residentHandler = () => {\n    const updatedApplicant = {...applicant, resident: !applicant.resident, address: {}};\n    setApplicant(updatedApplicant);\n  }\n\n  return (\n    <Panel>\n      <Subtitle>Building Applicant Details</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={applicant} handler={setApplicant} >\n        <Combobox items={entityTypes} name='entitytype' caption='Type of Applicant'/>\n        <Text caption='Applicant Name' name='name' visibleWhen={applicant.entitytype !== 'INDIVIDUAL'}/>\n\n        <Spacer />\n        <Panel visibleWhen={applicant.entitytype === 'INDIVIDUAL'}>\n          <Subtitle2>Administrator or contact name of applicant</Subtitle2>\n          <Text caption='Last Name' name='lastname' required={true}/>\n          <Text caption='First Name' name='firstname' required={true}/>\n          <Text caption='Middle Name' name='middlename' required={true}/>\n          <Email name='email'/>\n          <Mobileno name='mobileno'/>\n        </Panel>\n\n        <Spacer />\n        <Subtitle2>Applicant Address</Subtitle2>\n        <Checkbox caption='Resident' name='resident' onChange={residentHandler}/>\n        {applicant.resident ?\n          <LocalAddress orgcode={partner.id} name='address' caption='Address' />\n          :\n          <NonLocalAddress name='address' caption='Address'  />\n        }\n        <Spacer />\n        <Subtitle2>Proof of Identity</Subtitle2>\n        <IdEntry name=\"id\" />\n      </FormPanel>\n\n      <ActionBar>\n        <Button caption='Next' action={saveApplicant}  />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nexport default BuildingPermitApplicant\n","import React from \"react\";\nimport { Subtitle2, Radio, Item  } from \"rsi-react-web-components\";\n\nconst LotOwnershipType = ({ name, caption, ...rest }) => {\n  const title = rest.title || \"Lot Ownership\";\n  const showTitle = rest.showTitle || true;\n\n  return (\n    <React.Fragment>\n      {showTitle && <Subtitle2>{title}</Subtitle2>}\n      <Radio name={name} {...rest}>\n        <Item caption=\"Lot Owned\" value=\"1\" />\n        <Item caption=\"Leased\" value=\"0\" />\n      </Radio>\n    </React.Fragment>\n  );\n};\n\nexport default LotOwnershipType;\n","import React from \"react\";\nimport { Subtitle2, Panel, Text, Label, Combobox } from \"rsi-react-web-components\";\nimport { ResidenceAddress, IdEntry } from \"rsi-react-filipizen-components\";\n\nconst entityTypes = ['INDIVIDUAL', 'CORPORATION', 'GOVERNMENT', 'OTHER']\n\nconst OwnershipInfo = ({ owner, editable, orgcode, ...rest }) => {\n  const title = rest.title || \"Lot Owner Information\";\n  const showTitle = rest.showTitle || true;\n  const showIdEntry =  rest.showIdEntry || false;\n\n  return (\n    <React.Fragment>\n      {showTitle && <Subtitle2>{title}</Subtitle2> }\n      <Panel>\n        <Text caption=\"Profile No.\" name=\"owner.profileno\" editable={editable} />\n        <Combobox items={entityTypes} name=\"owner.entitytype\" caption='Ownership Type' editable={editable}/>\n        {owner.entitytype !== \"INDIVIDUAL\" && (\n          <React.Fragment>\n            <Text caption=\"Lot Owner Name\" name=\"owner.name\" editable={editable} />\n            <Label>Name of administrator/contact of property owner</Label>\n          </React.Fragment>\n        )}\n\n        <Text caption=\"Last Name\" name=\"owner.lastname\" editable={editable} />\n        <Text caption=\"First Name\" name=\"owner.firstname\" editable={editable} />\n        <Text caption=\"Middle Name\" name=\"owner.middlename\" editable={editable} />\n        <ResidenceAddress person={owner} orgcode={orgcode} name=\"owner\" editable={editable} />\n        {showIdEntry && <IdEntry name=\"owner.id\" editable={editable} /> }\n      </Panel>\n    </React.Fragment>\n  );\n};\n\nexport default OwnershipInfo;\n","import React from \"react\";\nimport { Subtitle2, Text, Panel } from \"rsi-react-web-components\";\n\nconst LotInformation = ({editable, ...rest} ) => {\n  const title = rest.title || \"Lot Information\";\n  const showTitle = rest.showTitle || true;\n  return (\n    <React.Fragment>\n      {showTitle && <Subtitle2>{title}</Subtitle2>}\n      <Panel row>\n        <Text caption=\"PIN\" name=\"pin\" editable={editable} />\n        <Text caption=\"Lot No.\" name=\"lotno\" editable={editable} />\n        <Text caption=\"Block No.\" name=\"blockno\" editable={editable} />\n      </Panel>\n      <Panel row>\n        <Text caption=\"Street\" name=\"street\" editable={editable} />\n        <Text caption=\"Barangay\" name=\"barangay\" editable={editable} />\n      </Panel>\n      <Panel row>\n        <Text caption=\"TD No.\" name=\"tdno\" editable={editable} />\n        <Text caption=\"Title No.\" name=\"titleno\" editable={editable} />\n      </Panel>\n      <Panel row>\n        <Text caption=\"Classification\" name=\"classcode\" editable={editable} />\n        <Text caption=\"Area\" name=\"areasqm\" editable={editable} />\n      </Panel>\n    </React.Fragment>\n  )\n}\n\nexport default LotInformation\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Subtitle2,\n  BackLink,\n  ActionBar,\n  Button,\n  Spacer,\n  Error,\n  Text,\n  Service,\n  Label,\n  FormPanel,\n} from 'rsi-react-web-components';\n\nimport { BarangayList, useBarangayList } from \"rsi-react-filipizen-components\";\nimport LotOwnershipType from \"../components/LotOwnershipType\";\nimport OwnershipInfo from \"../components/OwnershipInfo\";\nimport LotInformation from \"../components/LotInformation\";\n\nconst BuildingPermitLocation = (props) => {\n  const { partner, appno, appService, moveNextStep } = props;\n  const barangays = useBarangayList(partner.id);\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState(\"view-rpus\");\n  const [editmode, setEditmode] = useState(\"view\")\n\n\tconst [refno, setRefno] = useState();\n  const [rpus, setRpus] = useState([]);\n  const [property, setProperty] = useState({});\n  const [location, setLocation] = useState({});\n\n\n  /* load rpus */\n  useEffect(() => {\n    if (mode === \"view-rpus\") {\n      reloadList();\n    }\n  }, [mode])\n\n  const viewInitial = () => {\n    setRefno();\n    setEditmode(\"edit\");\n    setMode(\"initial\");\n  }\n\n  const findProperty = () => {\n    const orgcode = partner.orgcode || partner.id;\n    const svc = Service.lookup( orgcode + \":OboOnlineService\", \"obo\");\n    svc.invoke(\"findLocation\", { refno: refno || newRefno }, (err, property) => {\n      if (err) {\n        setError(err);\n      } else {\n        if(property.owner.address.type == 'local' ) {\n          property.owner.resident = 1;\n        }\n        else {\n          property.owner.resident = 0;\n        }\n        if( property.owner.address.city ) property.owner.address.citymunicipality = property.owner.address.city;\n        if( property.owner.address.municipality ) property.owner.address.citymunicipality = property.owner.address.municipality;\n        property.owner.ctc = {};      //allocate ctc\n        property.lotowned = 1;\n        property.appid = props.appno;\n        setProperty(property);\n        setMode(\"view-lot\");\n      }\n    });\n  }\n\n  const reloadList = () => {\n    appService.invoke(\"getRpus\", {appid: props.appno}, (err, rpus) => {\n      if (err) {\n        setError(err);\n      } else {\n        setRpus(rpus);\n      }\n    } );\n  }\n\n  const viewList = () => {\n    setMode(\"view-rpus\");\n  }\n\n  const editOwner = () => {\n\n  }\n\n  const editOwnerInfo = props => {\n    setMode(\"edit-owner-info\");\n    //TODO: activate validation below\n    // if(property.bill !== null && property.bill.amtdue != null &&  property.bill.amtdue > 0 ) {\n    //   setError(\"Please settle all unpaid balances first before proceeding\");\n    // } else {\n    //   setError(null);\n    //   setMode(\"edit-owner-info\");\n    // }\n  }\n\n  const saveRpu = () => {\n    if( !property.owner.id ) {\n      alert(\"Please provide proof of identity for owner/administrator of property\");\n      return;\n    }\n    setError(null);\n    appService.invoke(\"saveRpu\", property, (err, rpu) => {\n      if (err) {\n        setError(err)\n      } else {\n        reloadList();\n        setMode(\"view-rpus\");\n      }\n    });\n  }\n\n  const viewSpecifyLocation = () => {\n    setError(null);\n    if (rpus.length === 0) {\n      setError(\"Add at least one Lot Information.\");\n    } else {\n      const prop = rpus[0];\n      setLocation({\n        lotno: prop.lotno,\n        blockno: prop.blockno,\n        barangay: barangays.find(brgy => brgy.name === prop.barangay),\n      });\n      setMode(\"specify-location\");\n    }\n  }\n\n  const updateLocation = () => {\n    setError(null);\n    appService.invoke(\"saveLocation\", {appid: appno, ...location}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        moveNextStep();\n      }\n    })\n  }\n\n  const deleteRpu = (rpu) => {\n    setError(null);\n    appService.invoke(\"removeRpu\", rpu, (err, res) => {\n      if (err) {\n        setError(err);\n      } else {\n        setRpus(rpus.map(r => r.objid !== rpu.objid));\n      }\n    })\n  }\n\n  const getAddressText = (item) =>  {\n    const addr = [];\n    if (item.lotno) addr.push(`Lot: ${item.lotno}`);\n    if (item.blockno) addr.push(`Block: ${item.blockno}`);\n    if (item.street) addr.push(`Street: ${item.street}`);\n    if (item.barangay) addr.push(`Barangay: ${item.barangay}`);\n    return addr.join(\" \");\n  }\n\n  return (\n    <Panel>\n      <Panel visibleWhen={mode === \"view-rpus\"}>\n        <Subtitle>Project Location</Subtitle>\n        <Spacer />\n        <Subtitle2>Lot Information</Subtitle2>\n        <Error msg={error} />\n        {rpus.map(rpu => (\n          <Panel style={styles.locationContainer} key={rpu.tdno}>\n            <div style={styles.tdno}>\n              <Subtitle2>TD No. {rpu.tdno}</Subtitle2>\n            </div>\n            <div style={styles.rpuInfoContainer}>\n              <Label caption=\"Title No.\">{rpu.titleno}</Label>\n              <Label caption=\"PIN\">{rpu.pin}</Label>\n              <Label caption=\"Address\">{getAddressText(rpu)}</Label>\n              <Label caption=\"Class\">{rpu.classcode}</Label>\n              <Label caption=\"Area\">{rpu.areasqm}</Label>\n              <Label caption=\"Owner\">{rpu.owner.name}</Label>\n            </div>\n          </Panel>\n        ))}\n        <ActionBar>\n          <Button caption=\"Add Lot Info\" action={viewInitial} />\n          <Button caption=\"Next\" action={viewSpecifyLocation} />\n        </ActionBar>\n      </Panel>\n\n      <Panel visibleWhen={mode === \"initial\"}>\n        <Subtitle>Project Location</Subtitle>\n        <Spacer />\n        <Subtitle2>Specify the Site Location/Property</Subtitle2>\n        <Error msg={error} />\n        <Text caption=\"Tax Declaration No.\" value={refno} onChange={setRefno} autoFocus={true} />\n        <ActionBar>\n          <Button caption=\"Back to List\" action={viewList} variant=\"text\" />\n          <Button caption=\"Search\" action={findProperty} />\n        </ActionBar>\n      </Panel>\n\n      <Panel visibleWhen={mode === \"view-lot\"}>\n        <Subtitle>Project Location</Subtitle>\n        <p>Please check carefully if the information is correct. If not, please contact the Assessor's Office before proceeding.</p>\n        {/** TODO:\n\n        <Label>\n          <a href=\"mailto:assessor@filipizen.com?subject=Building Application Inquiry No: #{appid}&body=Please state your concern: \">[Click Here to Send Message] </a>\n        </Label>\n\n            {(property && property.appno)  &&\n              <Label style={styles.balanceText}>\n                Note: There is still an unpaid balance of <u>Php #{property.bill.amtdue}</u>.\n                You can settle this by paying online <a  href=\"/partners/${partner.name}/services/rptis/billing#viewbill?refno=#{refno}\" target=\"0\"><u>here</u></a>\n              </Label>\n            }\n           */}\n\n        <FormPanel context={property} handler={setProperty}>\n          <LotInformation editable={false} />\n          <LotOwnershipType property={property} name=\"lotowned\" row editable={false} />\n          <OwnershipInfo name=\"owner\" orgcode={partner.id} owner={property.owner} editable={false} />\n        </FormPanel>\n        <ActionBar>\n          <BackLink action={viewInitial} caption='Back' visibleWhen={editmode === \"edit\" } />\n          <Button action={editOwnerInfo} caption='Next'  visibleWhen={editmode == \"edit\"} />\n          <Button action={viewList} caption='Back' visibleWhen={editmode === \"view\" } />\n        </ActionBar>\n      </Panel>\n\n      <Panel visibleWhen={mode === \"edit-owner-info\"}>\n        <Subtitle>Project Location</Subtitle>\n        <p>Please update the information if necessary</p>\n        <FormPanel context={property} handler={setProperty}>\n          <LotOwnershipType name=\"lotowned\" row autoFocus={true} />\n          <OwnershipInfo name=\"owner\" owner={property.owner} orgcode={partner.id} showIdEntry={true} />\n        </FormPanel>\n        <ActionBar>\n          <BackLink action={() => setMode(\"view-lot\")} caption=\"Back\" />\n          <Button action={saveRpu} caption=\"Next\" />\n        </ActionBar>\n      </Panel>\n\n      <Panel visibleWhen={mode === \"specify-location\"}>\n        <Subtitle>Project Location</Subtitle>\n        <Subtitle2>Specify Project Location</Subtitle2>\n        <Spacer />\n        <Error msg={error} />\n        <FormPanel context={location} handler={setLocation}>\n          <Panel row>\n            <Text name='lotno' caption='Lot No.' />\n            <Text name='blockno' caption='Block No.' />\n          </Panel>\n          <Panel row>\n            <Text name='unitno' caption='Unit No.' />\n            <Text name='bldgno' caption='Building No.' />\n          </Panel>\n          <Text name='bldgname' caption='Building Name' />\n          <Text name='street' caption='Street' />\n          <Text name='subdivision' caption='Subdivision' />\n          <BarangayList barangays={barangays} name=\"barangay\" caption='Barangay' />\n        </FormPanel>\n        <ActionBar>\n          <BackLink caption=\"Back\" action={() => setMode(\"view-rpus\")} variant=\"text\" />\n          <Button caption='Next' action={updateLocation} />\n        </ActionBar>\n      </Panel>\n    </Panel>\n  );\n}\n\nconst styles = {\n  balanceText: {\n    color: \"red\",\n    fontWeight: \"bold\",\n  },\n  locationContainer: {\n    border: \"1px solid #aaa\",\n    borderRadius: 5,\n    boxShadow: \"0px 5px 7px -7px rgba(0,0,0,0.75)\",\n    marginBottom: 10\n  },\n  tdno: {\n    padding: \"5px 10px\",\n    backgroundColor: \"#ddd\",\n    borderBottom: \"1px solid #aaa\",\n    borderRadius: 5,\n  },\n  rpuInfoContainer: {\n    padding: \"10px\",\n  }\n}\n\nexport default BuildingPermitLocation;\n\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ActionBar,\n  Button,\n  Checkbox,\n  Panel,\n  Error,\n  Subtitle,\n  Subtitle2,\n  FormPanel,\n  Text,\n  Spacer,\n  BackLink,\n  Service,\n  Integer,\n  Decimal,\n  Date,\n} from \"rsi-react-web-components\";\n\nconst svc = Service.lookup(\"OboMiscListService\", \"obo\");\n\nconst initialWorkTypes = [\n  { name: \"addition\", caption: \"ADDITION\", value: \"ADDITION\" },\n  { name: \"alteration\", caption: \"ALTERATION\", value: \"ALTERATION\" },\n  { name: \"demolition\", caption: \"DEMOLITION\", value: \"DEMOLITION\" },\n  { name: \"original\", caption: \"ORIGINAL\", value: \"ORIGINAL\" },\n  { name: \"renovation\", caption: \"RENOVATION\", value: \"RENOVATION\" },\n];\n\nconst BuildingPermitProject = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n  const initialProject = {\n    appid: appno,\n    apptype: \"NEW\",\n    worktypes: initialWorkTypes,\n    numfloors: 1,\n    numunits: 1,\n    occupancytype: {\n      objid: null,\n      group: {},\n      division: {},\n    }\n  }\n\n  const [error, setError] = useState();\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  //TOOD: remove mode only\n  const [mode, setMode] = useState(\"project-detail\");\n  const [occupancyMode, setOccupancyMode] = useState(\"group\");\n  const [project, setProject] = useState(initialProject);\n  const [occupancyGroups, setOccupancyGroups] = useState([]);\n  const [occupancyDivisions, setOccupancyDivisions] = useState([]);\n  const [occupancyTypes, setOccupancyTypes] = useState([]);\n  const [professional, setProfessional] = useState();\n\n  const loadOccupancyGroups = () => {\n    svc.invoke(\"getOccupancyTypeGroups\", (err, groups) => {\n      if (err) {\n        setError(err)\n      } else {\n        setOccupancyGroups(groups);\n      }\n    });\n  }\n\n  const loadOccupancyDivisions = () => {\n    const groupid = project.occupancytype.group.objid;\n    svc.invoke(\"getOccupancyTypeDivisions\", {groupid} ,(err, divisions) => {\n      if (err) {\n        setError(err)\n      } else {\n        setOccupancyDivisions(divisions);\n      }\n    });\n  }\n\n  const loadOccupancyTypes = () => {\n    const divisionid = project.occupancytype.division.objid;\n    svc.invoke(\"getOccupancyTypes\", {divisionid} ,(err, types) => {\n      if (err) {\n        setError(err)\n      } else {\n        setOccupancyTypes(types);\n      }\n    });\n  }\n\n  useEffect(() => {\n    appService.invoke(\"getProjectInfo\", {appid: appno}, (err, project) => {\n      if (err) {\n        setError(err);\n      } else {\n        if (project.worktypes.length === 0) {\n          project.worktypes = initialWorkTypes;\n        } else {\n          const workTypes = initialWorkTypes.map(wt => {\n            let workType = project.worktypes.find(pwt => wt.value === pwt)\n            if (workType) {\n              return {...wt, checked: true};\n            }\n            return wt;\n          })\n          project.worktypes = workTypes;\n        }\n        setProfessional(project.contractor);\n        setProject(project);\n        setMode(\"project-detail\");\n      }\n    });\n  }, [])\n\n  useEffect(() => {\n    if (occupancyMode === \"group\")\n      loadOccupancyGroups();\n    else if (occupancyMode === \"division\")\n      loadOccupancyDivisions();\n    else if (occupancyMode === \"type\")\n      loadOccupancyTypes();\n  }, [occupancyMode])\n\n  const submitProjectDetail = () => {\n    setError(null);\n    const detail = {\n      appid: appno,\n      title: project.title,\n      description: project.description,\n      numunits: project.numunits,\n      totalfloorarea: project.totalfloorarea,\n      height: project.height,\n      numfloors: project.numfloors,\n      projectcost: project.projectcost,\n      dtproposedconstruction: project.dtproposedconstruction,\n      dtexpectedcompletion: project.dtexpectedcompletion,\n    };\n    appService.invoke(\"update\", detail, (err, proj) => {\n      if (err) {\n        setError(err);\n      } else {\n        clearStatus();\n        setMode(\"select-worktype\");\n      }\n    });\n  }\n\n  const validWorkTypes = () => {\n    const idx = project.worktypes.findIndex(wt => wt.checked === true);\n    return idx >= 0;\n  }\n\n  const submitWorkType = () => {\n    setError(null);\n    if (validWorkTypes()) {\n      setError(null);\n      const updatedWorkTypes = {\n        appid: appno,\n        worktypes: project.worktypes.filter(wt => wt.checked).map(wt => wt.value),\n      };\n      appService.invoke(\"update\", updatedWorkTypes, (err, proj) => {\n        if (err) {\n          setError(error);\n        } else {\n          setLoading(false);\n          moveNextStep();\n        }\n      });\n    } else {\n      setError(\"Please check at least one work type.\")\n    }\n  }\n\n  const submitOccupancyGroup = () => {\n    if (!project.occupancytype.group.objid) {\n      setError(\"Kindly select an occupancy group.\")\n    } else {\n      setOccupancyMode(\"division\");\n    }\n  }\n\n  const submitOccupancyDivision = () => {\n    if (!project.occupancytype.division.objid) {\n      setError(\"Kindly select an occupancy division group.\")\n    } else {\n      setOccupancyMode(\"type\");\n    }\n  }\n\n  const submitOccupancyType = () => {\n    if (!project.occupancytype.objid) {\n      setError(\"Kindly select an occupancy type.\")\n    } else {\n      let occupancytype = {appid: appno, occupancytype: project.occupancytype};\n      appService.invoke(\"updateOccupancyType\", occupancytype, (err, res) => {\n        if (err) {\n          setError(err);\n        } else {\n          clearStatus();\n          moveNextStep();\n        }\n      })\n    }\n  }\n  const clearStatus = () => {\n    setError(null);\n    setLoading(false);\n  }\n\n  return (\n    <Panel>\n      <Subtitle>Project Details</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n\n      <FormPanel visibleWhen={mode === \"project-detail\"} context={project} handler={setProject}>\n        <Text caption=\"Project Title\" name=\"title\" required={true} readOnly={stepCompleted} autoFocus={true}/>\n        <Text caption=\"Project Description\" name=\"description\" required={true} readOnly={stepCompleted} />\n        {project.occupancytypeid &&\n          <Text caption=\"Occupancy Type\" name=\"occupancytype.title\" required={true} readOnly={stepCompleted} />\n        }\n        <Spacer/>\n        <Integer caption=\"No of Units\" name=\"numunits\" required={true} readOnly={stepCompleted} />\n        <Panel row>\n          <Decimal caption=\"Total Floor Area [sq.meter]\" name=\"totalfloorarea\" required={true} readOnly={stepCompleted} fullWidth textAlign=\"left\" />\n          <Decimal caption=\"Building Height [meter]\" name=\"height\" required={true} readOnly={stepCompleted} fullWidth textAlign=\"left\" />\n        </Panel>\n        <Integer caption=\"No. of Storeys\" name=\"numfloors\" required={true} readOnly={stepCompleted} />\n        <Spacer/>\n        <Decimal caption=\"Estimated Cost [Php]\" name=\"projectcost\" required={true} readOnly={stepCompleted} decimalScale={2} textAlign=\"left\" />\n        <Panel row>\n          <Date caption=\"Proposed Construction Date\" name=\"dtproposedconstruction\" readOnly={stepCompleted} />\n          <Date caption=\"Expected Completion Date\" name=\"dtexpectedcompletion\" readOnly={stepCompleted} />\n        </Panel>\n        <ActionBar>\n          <Button caption=\"Next\" action={submitProjectDetail} />\n        </ActionBar>\n      </FormPanel>\n\n      <FormPanel visibleWhen={mode === \"select-worktype\"} context={project} handler={setProject} >\n        <Subtitle2>Select Work Type</Subtitle2>\n        <Panel style={styles.column}>\n          {project.worktypes.map((worktype, idx) => (\n            <Checkbox\n              caption={worktype.caption}\n              name={`worktypes[${idx}].checked`}\n              value={worktype.value} />\n          ))}\n        </Panel>\n        <ActionBar>\n          <BackLink action={() => setMode(\"project-detail\")} />\n          <Button caption=\"Next\" action={submitWorkType} />\n        </ActionBar>\n      </FormPanel>\n    </Panel>\n  )\n}\n\nconst styles = {\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: 20,\n  },\n}\n\nexport default BuildingPermitProject\n","import React, { useState } from 'react'\nimport {\n  Lookup,\n  Panel,\n  FormPanel,\n  Text,\n  Button,\n  Table,\n  TableColumn,\n  Service\n} from 'rsi-react-web-components'\n\nconst svc = Service.lookup(\"OboProfessionalService\", \"obo\");\n\nconst ROWS_PER_PAGE = 5;\n\nconst ProfessionalLookup = ({\n  caption,\n  onSelect,\n  hideSearchText=false\n}) => {\n  const [showLookup, setShowLookup] = useState(false)\n  const [query, setQuery] = useState({prc:{}});\n  const [selectedItems, setSelectedItems] = useState();\n  const [professionals, setProfessionals] = useState()\n\n  const onSelectItems = (items) => {\n    setSelectedItems(items);\n  }\n\n  const onAcceptLookup = () => {\n    onSelect(selectedItems);\n  }\n\n  const fetchList = (params) => {\n      if (svc && query.prc.idno ) {\n        const p = {...query, ...params};\n        svc.invoke(\"getList\", p, (err, list) => {\n          if (err) {\n            console.log(\"ERROR\", err)\n          } else {\n            console.log(\"list\", list)\n            setProfessionals(list);\n          }\n        });\n      }\n  }\n\n  const search = () => {\n    fetchList({limit: ROWS_PER_PAGE, start: 0});\n  }\n\n  return (\n    <div>\n      <Lookup caption='Search Professional'\n        query={query}\n        setQuery={setQuery}\n        searchFieldTitle=\"PRC No.\"\n        searchField=\"prc.idno\"\n        onSelect={onAcceptLookup}\n        fetchList={fetchList}\n        hideSearchText={hideSearchText}\n        enableSelect={selectedItems && selectedItems.length > 0}\n      >\n        <FormPanel context={query} handler={setQuery}>\n          <Panel row>\n            <Text caption='PRC No.' name='prc.idno' width={200} variant='outlined' />\n            <Button caption='Search' action={search} />\n          </Panel>\n        </FormPanel>\n        <Table\n          items={professionals}\n          fetchList={fetchList}\n          rowsPerPage={ROWS_PER_PAGE}\n          showPagination={false}\n          singleSelect={true}\n          keyId=\"objid\"\n          onSelectItems={onSelectItems}\n        >\n          <TableColumn caption='PRC' expr='prc.idno' />\n          <TableColumn caption='Name' expr={item => `${item.lastname}, ${item.firstname} ${item.middlename}`} />\n          <TableColumn caption='Profession' expr='profession' />\n        </Table>\n      </Lookup>\n    </div>\n  )\n}\n\nexport default ProfessionalLookup\n","import React from \"react\";\nimport {\n  Panel,\n  Label,\n  Image,\n} from \"rsi-react-web-components\";\n\nimport \"./ProfessionalCard.css\";\nimport ProfessionalLookup from \"./ProfessionalLookup\";\n\nconst ProfessionalCard = ({ professional  ={}, caption, onSelectProfessional, photoUrl }) => {\n  let name = \"\";\n  if (professional.lastname) {\n    name = `${professional.lastname}, ${professional.firstname} ${professional.middlename}`\n  };\n  let address = \"\";\n  if (professional.address) {\n    address = professional.address.text;\n  }\n\n  return (\n    <div style={styles.container}>\n      <Panel style={styles.lookupContainer}>\n        <Label captionStyle={styles.caption} caption={caption} />\n        <ProfessionalLookup hideSearchText={true}\n          onSelect={onSelectProfessional}\n          fullWidth={false}\n        />\n      </Panel>\n      <div style={{margin: 10, padding: 10}}>\n        <div style={styles.nameContainer}>\n          <Panel>\n            <Label labelStyle={styles.name}>{name}</Label>\n            <Label labelStyle={styles.profession}>{professional.profession}</Label>\n          </Panel>\n          <Image src={photoUrl}/>\n        </div>\n        <Panel style={styles.row}>\n          <Panel>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"PRC ID No.\">{professional.prc.idno}</Label>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"Date Issued\">{professional.prc.dtissued}</Label>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"Valid Until\">{professional.prc.dtvalid}</Label>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"Place Issued\">{professional.prc.placeissued}</Label>\n          </Panel>\n          <Panel>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"PTR ID No.\">{professional.ptr.refno}</Label>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"Date Issued\">{professional.ptr.dtissued}</Label>\n            <Label style={styles.label} captionStyle={{width: 120}} caption=\"Place Issued\">{professional.ptr.placeissued}</Label>\n          </Panel>\n        </Panel>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    borderWidth: 1,\n    borderColor: \"#aaa\",\n    boxShadow: \"0px 5px 7px -7px rgba(0,0,0,0.75)\",\n    backgroundColor: \"#eee\",\n  },\n  caption: {\n    fontSize: 18,\n    width: \"100%\"\n  },\n  lookupContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"lightgray\",\n    paddingTop: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  nameContainer: {\n    dipslay: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 5\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: 600,\n  },\n  profession: {\n    fontSize: 14,\n    fontWeight: 600,\n    backgroundColor: \"#ddd\",\n    width: \"100%\",\n    padding: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  label: {\n    paddingBottom: 2,\n  }\n}\n\n\nexport default ProfessionalCard;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ActionBar,\n  Button,\n  Panel,\n  Radio,\n  Error,\n  Subtitle,\n  Subtitle2,\n  FormPanel,\n  Spacer,\n  BackLink,\n  Service,\n} from \"rsi-react-web-components\";\n\nconst svc = Service.lookup(\"OboMiscListService\", \"obo\");\n\nconst styles = {\n  row: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n  },\n  group: {\n    fontSize: 20,\n    fontWeight: 700,\n    marginRight: 15,\n    paddingTop: 8,\n  }\n}\n\nconst RadioItem = ({item}) => {\n  return (\n    <Panel style={{paddingBottom: 5}}>\n      <Panel style={styles.row}>\n        <div style={styles.group}>{item.objid}</div>\n        <Panel>\n          <Subtitle2>{item.title}</Subtitle2>\n          <label>{item.description}</label>\n        </Panel>\n      </Panel>\n    </Panel>\n  )\n}\n\nconst BuildingPermitOccupancy = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState(\"select-occupancytype\");\n  const [occupancyMode, setOccupancyMode] = useState(\"group\");\n  const [project, setProject] = useState({});\n  const [occupancyGroups, setOccupancyGroups] = useState([]);\n  const [occupancyDivisions, setOccupancyDivisions] = useState([]);\n  const [occupancyTypes, setOccupancyTypes] = useState([]);\n  const [prevOccupancyId, setPrevOccupancyId] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        setProject({occupancytype: app.occupancytype});\n        setPrevOccupancyId(app.occupancytype.objid);\n      }\n    })\n  }, [])\n\n  const loadOccupancyGroups = () => {\n    svc.invoke(\"getOccupancyTypeGroups\", null, (err, groups) => {\n      if (err) {\n        setError(err)\n      } else {\n        setOccupancyGroups(groups);\n      }\n    });\n  }\n\n  const loadOccupancyDivisions = () => {\n    const groupid = project.occupancytype.group.objid;\n    svc.invoke(\"getOccupancyTypeDivisions\", {groupid} ,(err, divisions) => {\n      if (err) {\n        setError(err)\n      } else {\n        setOccupancyDivisions(divisions);\n      }\n    });\n  }\n\n  const loadOccupancyTypes = () => {\n    const divisionid = project.occupancytype.division.objid;\n    svc.invoke(\"getOccupancyTypes\", {divisionid} ,(err, types) => {\n      if (err) {\n        setError(err)\n      } else {\n        setOccupancyTypes(types);\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (occupancyMode === \"group\")\n      loadOccupancyGroups();\n    else if (occupancyMode === \"division\")\n      loadOccupancyDivisions();\n    else if (occupancyMode === \"type\")\n      loadOccupancyTypes();\n  }, [occupancyMode])\n\n  const submitOccupancyGroup = () => {\n    if (!project.occupancytype.group.objid) {\n      setError(\"Kindly select an occupancy group.\")\n    } else {\n      setOccupancyMode(\"division\");\n    }\n  }\n\n  const submitOccupancyDivision = () => {\n    if (!project.occupancytype.division.objid) {\n      setError(\"Kindly select an occupancy division group.\")\n    } else {\n      setOccupancyMode(\"type\");\n    }\n  }\n\n  const updateOccupancyType = () => {\n    let occupancytype = {appid: appno, occupancytype: project.occupancytype};\n    appService.invoke(\"updateOccupancyType\", occupancytype, (err, res) => {\n      if (err) {\n        setError(err);\n      } else {\n        clearStatus();\n        setShowConfirm(false);\n        moveNextStep();\n      }\n    });\n  }\n\n  const submitOccupancyType = () => {\n    if (!project.occupancytype.objid) {\n      setError(\"Kindly select an occupancy type.\")\n    } else {\n      updateOccupancyType();\n    }\n  }\n  const clearStatus = () => {\n    setError(null);\n    setLoading(false);\n  }\n\n\n  return (\n    <Panel>\n      <Subtitle>Occupancy Type</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n\n      <Panel visibleWhen={mode === \"select-occupancytype\"}>\n        <FormPanel visibleWhen={occupancyMode === \"group\"} context={project} handler={setProject}>\n          <Subtitle2>Select Occupancy Group</Subtitle2>\n          <Radio name=\"occupancytype.group.objid\" list={occupancyGroups} Control={RadioItem}/>\n          <ActionBar>\n            <Button caption=\"Next\" action={submitOccupancyGroup} />\n          </ActionBar>\n        </FormPanel>\n\n        <FormPanel visibleWhen={occupancyMode === \"division\"} context={project} handler={setProject}>\n          <Subtitle2>Select Occupancy Group Division</Subtitle2>\n          <Radio name=\"occupancytype.division.objid\" list={occupancyDivisions} Control={RadioItem}/>\n          <ActionBar>\n            <BackLink caption=\"Back\" action={() => setOccupancyMode(\"group\")} />\n            <Button caption=\"Next\" action={submitOccupancyDivision} />\n          </ActionBar>\n        </FormPanel>\n\n        <FormPanel visibleWhen={occupancyMode === \"type\"} context={project} handler={setProject}>\n          <Subtitle2>Select Occupancy Type</Subtitle2>\n          <Radio name=\"occupancytype.objid\" list={occupancyTypes} Control={RadioItem}/>\n          <ActionBar>\n            <BackLink caption=\"Back\" action={() => setOccupancyMode(\"division\")} />\n            <Button caption=\"Next\" action={submitOccupancyType} />\n          </ActionBar>\n        </FormPanel>\n      </Panel>\n\n    </Panel>\n  )\n}\n\nexport default BuildingPermitOccupancy\n","import React from 'react'\nimport {\n  Checkbox,\n  Panel,\n  Label,\n  Decimal,\n  Integer,\n}\nfrom \"rsi-react-web-components\";\n\nconst CheckboxInfo = (props) => {\n  return (\n    <div style={styles.checkInfo}>\n      <Checkbox {...props} />\n    </div>\n  )\n}\n\nconst components = {\n  \"decimal\": Decimal,\n  \"integer\": Integer,\n  \"boolean\": CheckboxInfo\n}\n\nconst InfoComponent = ({\n  category,\n  dataType=\"integer\",\n  caption,\n  unit,\n  name,\n}) => {\n  const HandlerComponent = components[dataType];\n  let label = caption.toLowerCase();\n  if (dataType !== \"boolean\") {\n    label += \" (\" + unit.toLowerCase() + \")\";\n  }\n\n  return (\n    <Panel>\n      {category &&\n        <Label style={styles.category}>{category}</Label>\n      }\n      <div style={styles.infoContainer}>\n        <label>{label}</label>\n        <HandlerComponent\n          name={name}\n          fullWidth={false}\n          variant='outlined'\n          size='small'\n          width={120}\n          style={{ flexBasis: 100 }}\n        />\n      </div>\n    </Panel>\n  )\n}\n\nconst styles = {\n  infoContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 20,\n  },\n  category: {\n    fontSize: 16,\n    fontWeight: 600,\n    border: \"1px solid #aaa\",\n    backgroundColor: \"#eee\",\n    padding: \"2px 10px\",\n    margin: \"10px 0px\"\n  },\n  checkInfo: {\n    width: 100,\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#aaa\",\n    borderRadius: 3,\n  },\n}\n\nexport default InfoComponent\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Subtitle2,\n  Spacer,\n  Service,\n  Error,\n  FormPanel,\n  Checkbox,\n  ActionBar,\n  Button,\n  Label,\n  Radio,\n  Item,\n  BackLink\n} from \"rsi-react-web-components\";\n\nimport InfoComponent from \"../components/InfoComponent\";\n\nconst BuildingPermitAccessories = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState(\"initial\");\n  const [hasAccessories, setHasAccessories] = useState(\"TRUE\");\n  const [accessories, setAccessories] = useState([]);\n  const [accessoryTypes, setAccessoryTypes] = useState([]);\n  const [occupancyTypes, setOccupancyTypes] = useState([]);\n\n  const isJAccessoryType = (accessories) => {\n    if (accessories.length > 0 && /j.*/i.test(accessories[0].occupancytypeid)) {\n      return true;\n    }\n    return false;\n  }\n\n  const loadAccessories = () => {\n    appService.invoke(\"getAccessories\", {appid: appno}, (err, accessories) => {\n      setAccessories(accessories);\n      if (isJAccessoryType(accessories)) {\n        setMode(\"infos\")\n      }\n    });\n  }\n\n  const loadAccessoryOccupancyTypes = () => {\n    const svc = Service.lookup(\"OboMiscListService\", \"obo\");\n    svc.invoke(\"getAccessoryOccupancyTypes\", null, (err, occupancyTypes) => {\n      if (err) {\n        setError(err);\n      } else {\n        const accessoryTypes = {};\n        occupancyTypes.forEach(ot => {\n          accessoryTypes[`${ot.objid.toLowerCase()}`] = false;\n        });\n        setOccupancyTypes(occupancyTypes);\n        setAccessoryTypes(accessoryTypes);\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadAccessoryOccupancyTypes();\n    loadAccessories();\n  }, []);\n\n\n  const submitInitial = () => {\n\t\tif (hasAccessories === \"TRUE\") {\n\t\t\tsetMode(\"select-accessories\");\n\t\t} else {\n      setError(null);\n      appService.invoke(\"saveAccessories\", {appid: appno, items: []}, (err, res) => {\n        if (err) {\n          setError(err);\n        } else {\n          moveNextStep();\n        }\n      });\n\t\t}\n  }\n\n  const submitAccessoryTypes = () => {\n    if (Object.keys(accessoryTypes).length > 0) {\n      const accessories = getSelectedAccessoryTypes();\n      appService.invoke(\"saveAccessories\", accessories, (err, accessories) => {\n        if (err) {\n          setError(err);\n        } else {\n          loadAccessories();\n          setMode(\"infos\");\n        }\n      });\n    } else {\n      setError(\"Select at least one accessory type before proceeding.\")\n    }\n  }\n\n  const getSelectedAccessoryTypes = () => {\n\t\tconst items = [];\n    for (const prop in accessoryTypes) {\n      if (accessoryTypes[prop]) {\n\t\t\t\titems.push(prop);\n\t\t\t}\n    }\n    return { appid: appno, items }\n  }\n\n  const saveAccesoryInfos = () => {\n\t\tvar p = {appid: appno, infos: []};\n    p.infos = [];\n    accessories.forEach(accessory => {\n      p.infos.push(...accessory.infos);\n    });\n\n\t\tappService.invoke(\"saveAccessoryInfos\", p, (err, res) => {\n      if (err) {\n        setError(err)\n      } else {\n        moveNextStep();\n      }\n    });\n\t}\n\n  return (\n    <Panel>\n      <Subtitle>Accessories</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n\n\t\t\t<Panel visibleWhen={mode===\"initial\"}>\n        <p>Does the plan include accessories?</p>\n        <Radio name=\"hasAccessories\" value={hasAccessories} onChange={setHasAccessories}>\n          <Item caption=\"Yes\" value=\"TRUE\" />\n          <Item caption=\"No\" value=\"FALSE\" />\n        </Radio>\n        <ActionBar>\n          <Button caption=\"Next\" action={submitInitial} />\n        </ActionBar>\n      </Panel>\n\n      <Panel visibleWhen={mode === \"select-accessories\"}>\n        <Subtitle2>Select accessory to add if applicable</Subtitle2>\n        <FormPanel context={accessoryTypes} handler={setAccessoryTypes}>\n          {occupancyTypes.map(ot =>\n            <Checkbox key={ot.objid} caption={ot.title} name={`${ot.objid.toLowerCase()}`} />\n          )}\n        </FormPanel>\n        <ActionBar>\n          <BackLink action={() => setMode(\"initial\")} />\n          <Button caption=\"Next\" action={submitAccessoryTypes} />\n        </ActionBar>\n      </Panel>\n\n      <FormPanel visibleWhen={mode === \"infos\"} context={accessories} handler={setAccessories}>\n        {accessories.map((o, ix) => {\n          return (\n            <div key={o.objid}>\n              <Label style={styles.infoTitle}>{o.type.title}</Label>\n              {o.infos.map((info, iy) => {\n                return (\n                  <InfoComponent\n                    key={`${info.name}:${ix}:${iy}`}\n                    name={`[${ix}].infos[${iy}].value`}\n                    dataType={info.datatype}\n                    caption={info.caption}\n                    unit={info.unit}\n                  />\n                )\n              })}\n            </div>\n          )\n        })}\n        <ActionBar>\n          <BackLink action={() => setMode(\"select-accessories\")}  />\n          <Button caption=\"Next\" action={saveAccesoryInfos} />\n        </ActionBar>\n      </FormPanel>\n    </Panel>\n\n  )\n}\n\nconst styles = {\n  infoTitle: {\n    fontWeight: \"bold\",\n  },\n  infoContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: 20,\n  },\n}\n\nexport default BuildingPermitAccessories\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ActionBar,\n  Button,\n  Checkbox,\n  Panel,\n  Error,\n  Subtitle,\n  Subtitle2,\n  FormPanel,\n  Spacer,\n  BackLink,\n  ViewButton,\n  EditButton,\n  DeleteButton,\n  Label,\n  Decimal,\n  Integer,\n  CheckIcon,\n  Service\n} from \"rsi-react-web-components\";\n\nimport ProfessionalCard from \"../components/ProfessionalCard\";\nimport InfoComponent from \"../components/InfoComponent\";\n\nconst BuildingPermitOtherPermits = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState(\"permit-list\");\n  const [availableAncillaryPermits, setAvailableAncillaryPermits] = useState([]);\n  const [ancillaryPermits, setAncillaryPermits] = useState([]);\n  const [ancillaryPermit, setAncillaryPermit] = useState({worktypes:[], type:{}});\n\n  const loadAvailableAccillaryPermits = () => {\n    appService.invoke(\"getAvailableAncillaryPermitTypes\", {appid: appno}, (err, list) => {\n      if (err) {\n        setError(err);\n      } else {\n        setAvailableAncillaryPermits(list);\n      }\n    })\n  }\n\n  const loadAncillaryPermits = () => {\n    appService.invoke(\"getAncillaryPermits\", {appid: appno}, (err, list) => {\n      if (err) {\n        setError(err)\n      } else {\n        setAncillaryPermits(list);\n        if (!loaded && list.length === 0) {\n          setLoaded(true);\n          setMode(\"available-list\");\n        }\n      }\n    })\n  }\n\n  useEffect(() => {\n    loadAvailableAccillaryPermits();\n  }, [ancillaryPermits])\n\n  useEffect(() => {\n    loadAncillaryPermits();\n  }, [mode, loaded]);\n\n  const submitSelectedAncillaryPermits = () => {\n    const selectedPermits = availableAncillaryPermits.filter((permit => permit.selected === true));\n    if (selectedPermits.length > 0 ) {\n      setAncillaryPermits(selectedPermits);\n      appService.invoke(\"saveAncillaryPermits\", {appid: appno, permits: selectedPermits}, (err, _) => {\n        if (err) {\n          setError(err);\n        } else {\n          setError(null);\n          setMode(\"permit-list\");\n        }\n      })\n    } else {\n      setMode(\"permit-list\");\n    }\n  }\n\n  const loadPermitWorkTypes = (permit) => {\n    const svc = Service.lookup(\"OboMiscListService\", \"obo\");\n    svc.invoke(\"getWorkTypes\", {typeid: permit.type.objid}, (err, workTypes) => {\n      if (err) {\n        setError(err);\n      } else {\n        workTypes.forEach(wt => {\n          if (permit.worktypes.findIndex(pwt => pwt.toLowerCase() === wt.name.toLowerCase()) >= 0) {\n            wt.checked = true;\n          }\n        })\n        setAncillaryPermit({...permit, worktypes: workTypes});\n        setMode(\"select-worktypes\");\n      }\n    })\n  }\n\n  const editPermit = (o) => {\n    appService.invoke(\"getAncillaryPermit\", {objid: o.objid}, (err, permit) => {\n      if (err) {\n        setError(err);\n      } else {\n        setError(null);\n        loadPermitWorkTypes(permit);\n      }\n    })\n  }\n\n  const removePermit = (permit) => {\n    appService.invoke(\"removeAncillaryPermit\", {objid: permit.objid}, (err, res) => {\n      if (err) {\n        setError(err);\n      } else {\n        setError(null);\n        loadAncillaryPermits();\n      }\n    });\n  }\n\n  const validWorkTypes = () => {\n    const idx = ancillaryPermit.worktypes.findIndex(wt => wt.checked === true);\n    return idx >= 0;\n  }\n\n  const submitWorkType = () => {\n    setError(null);\n    setError(null);\n    const updatedWorkTypes = {\n      objid: ancillaryPermit.objid,\n      worktypes: ancillaryPermit.worktypes.filter(wt => wt.checked).map(wt => wt.name)\n    };\n    appService.invoke(\"updateAncillaryPermit\", updatedWorkTypes, (err, proj) => {\n      if (err) {\n        setError(error);\n      } else {\n        setMode(\"infos\");\n        setLoading(false);\n      }\n    });\n\n  }\n\n  const onSelectDesignProfessional = (professionals) => {\n    const professional = professionals[0]\n    setAncillaryPermit({\n      ...ancillaryPermit,\n      designprofessional: professional,\n      designprofessionalid: professional.objid\n    });\n  }\n\n  const onSelectSupervisor = (professionals) => {\n    const professional = professionals[0]\n    setAncillaryPermit({\n      ...ancillaryPermit,\n      supervisor: professional,\n      supervisorid: professional.objid,\n    });\n  }\n\n  const submitInfos = () => {\n    const updatedInfos = {\n      objid: ancillaryPermit.objid,\n      projectcost: ancillaryPermit.projectcost,\n      equipmentcost: ancillaryPermit.equipmentcost,\n    }\n    appService.invoke(\"updateAncillaryPermit\", updatedInfos, (err, _) => {\n      if (err) {\n        setError(err);\n      } else {\n        setMode(\"cost\");\n      }\n    })\n  }\n\n  const saveCost = () => {\n    setError(null);\n    const updatedCost = {objid: ancillaryPermit.objid, infos: ancillaryPermit.infos }\n    appService.invoke(\"saveAncillaryPermit\", updatedCost, (err, _) => {\n      if (err) {\n        setError(err);\n      } else {\n        setMode(\"professional\");\n      }\n    })\n  }\n\n  const savePermit = () => {\n    setError(null);\n    if (!ancillaryPermit.designprofessionalid) {\n      setError(\"Design Professional is required.\");\n      return;\n    }\n    if (!ancillaryPermit.supervisorid) {\n      setError(\"Supervisor is required.\");\n      return;\n    }\n\n    const updatedPermit = {\n      ...ancillaryPermit,\n      worktypes: ancillaryPermit.worktypes.filter(wt => wt.checked).map(wt => wt.name)\n    }\n\n    appService.invoke(\"saveAncillaryPermit\", updatedPermit, (err, _) => {\n      if (err) {\n        setError(err);\n      } else {\n        setMode(\"permit-list\");\n      }\n    })\n  }\n\n  const submitAncillaryPermits = () => {\n    const incompletePermits = [];\n    ancillaryPermits.forEach(permit => {\n      if (!permit.designprofessionalid) {\n        incompletePermits.push(permit.type.title);\n      }\n    })\n    if (incompletePermits.length === 1) {\n      setError(`Permit ${incompletePermits[0]} is not processed`);\n    } else if (incompletePermits.length > 1) {\n      setError(`The following permist are not processed: ${incompletePermits.join(\",\")}`);\n    } else {\n      moveNextStep();\n    }\n  }\n\n  let hasIncompletePermit = false;\n  if (ancillaryPermits.length > 0) {\n    const idx = ancillaryPermits.findIndex(permit => !permit.designprofessionalid);\n    hasIncompletePermit =  idx >= 0;\n  }\n\n  let prevInfo = null;\n\n  return (\n    <Panel>\n      <Subtitle>Other Permits</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n\n      <Panel visibleWhen={mode === \"permit-list\"}>\n        <Spacer />\n        {ancillaryPermits.map(permit => (\n          <Panel style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n            <Panel row>\n              {permit.designprofessionalid ? (\n                <div style={{width: 40}}>\n                  <CheckIcon style={{ color: \"green\", paddingRight: 10}} />\n                </div>\n              )\n              : (\n                <div style={{width: 40}}/>\n              )}\n              <label>{permit.type.title}</label>\n            </Panel>\n            <Panel row>\n              <EditButton action={() => editPermit(permit)} size=\"small\" />\n              <DeleteButton action={() => removePermit(permit)} size=\"small\" />\n            </Panel>\n          </Panel>\n        ))}\n        <ActionBar>\n          <BackLink caption=\"Add New Permits\" action={() => setMode(\"available-list\")} />\n          <Button caption=\"Next\" action={submitAncillaryPermits} disableWhen={hasIncompletePermit} />\n        </ActionBar>\n      </Panel>\n\n      <FormPanel visibleWhen={mode === \"select-worktypes\"} context={ancillaryPermit} handler={setAncillaryPermit} >\n        <h4>{ancillaryPermit.type.title}</h4>\n        <Subtitle2>Select Work Type</Subtitle2>\n        <Panel style={styles.workTypeContainer}>\n          {ancillaryPermit.worktypes.map((worktype, idx) => (\n            <Checkbox\n              caption={worktype.name.toUpperCase()}\n              name={`worktypes[${idx}].checked`}\n              value={worktype.name} />\n          ))}\n        </Panel>\n        <ActionBar>\n          <BackLink action={() => setMode(\"permit-list\")} />\n          <Button caption=\"Next\" action={submitWorkType} />\n        </ActionBar>\n      </FormPanel>\n\n      <FormPanel visibleWhen={mode === \"infos\"} context={ancillaryPermit} handler={setAncillaryPermit}>\n        <Subtitle2>{ancillaryPermit.type?.title}</Subtitle2>\n        <Spacer />\n        <p>Please fill the applicable values and click Save and Complete when done.</p>\n        {ancillaryPermit.infos && ancillaryPermit.infos.map((info, ix) => {\n          let category = null;\n          if (prevInfo === null || prevInfo.category !== info.category) {\n            category = info.category;\n            prevInfo = info;\n          }\n          return (\n            <InfoComponent\n              key={`${info.name}:${ix}`}\n              name={`infos[${ix}].value`}\n              category={category}\n              dataType={info.datatype}\n              caption={info.caption}\n              unit={info.unit}\n            />\n          )\n        })}\n        <ActionBar>\n          <BackLink action={() => setMode(\"select-worktypes\")}  />\n          <Button caption=\"Next\" action={submitInfos} />\n        </ActionBar>\n      </FormPanel>\n\n      <Panel visibleWhen={mode === \"available-list\"}>\n        <Subtitle2>Select ancillary and other permits to include in the project</Subtitle2>\n        <FormPanel\n          context={availableAncillaryPermits}\n          handler={setAvailableAncillaryPermits}\n          style={styles.itemsContainer}\n        >\n          {availableAncillaryPermits.map((permit,idx) =>\n            <Checkbox key={permit.objid} caption={permit.title} name={`[${idx}].selected`} />\n          )}\n        </FormPanel>\n        <ActionBar>\n          <Button caption=\"Next\" action={submitSelectedAncillaryPermits} />\n        </ActionBar>\n      </Panel>\n\n      <FormPanel visibleWhen={mode === \"cost\"} context={ancillaryPermit} handler={setAncillaryPermit}>\n        <Subtitle2>{ancillaryPermit.type?.title}</Subtitle2>\n        <Decimal name=\"projectcost\" caption=\"Project Cost\" textAlign=\"left\" fullWidth={false} />\n        <Decimal name=\"equipmentcost\" caption=\"Equipment Cost\" textAlign=\"left\" />\n        <Spacer />\n        <ActionBar>\n          <BackLink action={() => setMode(\"infos\")} />\n          <Button caption=\"Next\" action={saveCost} />\n        </ActionBar>\n      </FormPanel>\n\n\n      <FormPanel visibleWhen={mode === \"professional\"} context={ancillaryPermit} handler={setAncillaryPermit}>\n        <Subtitle2>{ancillaryPermit.type?.title}</Subtitle2>\n        <Spacer />\n        <ProfessionalCard\n          caption=\"Design Professional\"\n          professional={ancillaryPermit.designprofessional}\n          onSelectProfessional={onSelectDesignProfessional}\n        />\n        <Spacer />\n        <ProfessionalCard\n          caption=\"Supervisor in Charge Professional\"\n          professional={ancillaryPermit.supervisor}\n          onSelectProfessional={onSelectSupervisor}\n        />\n        <ActionBar>\n          <BackLink action={() => setMode(\"permit-list\")} />\n          <Button caption=\"Save and Complete\" action={savePermit} />\n        </ActionBar>\n      </FormPanel>\n    </Panel>\n  )\n}\n\nconst styles = {\n  professionalLookup: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"lightgray\",\n  },\n  itemsContainer: {\n    marginLeft: 20,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  workTypeContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: 20,\n  },\n}\n\n\nexport default BuildingPermitOtherPermits;\n","import React, { useState, useEffect } from 'react'\nimport {\n  MsgBox,\n  ActionBar,\n  Button,\n  FormPanel,\n  Panel,\n  Subtitle,\n  Spacer,\n  Loading,\n  Error,\n  Text,\n  Decimal,\n  Integer,\n  LinkIcon,\n  ButtonLink,\n  Subtitle2,\n  PageviewIcon,\n  CloudDownloadIcon,\n  ReportViewer\n} from 'rsi-react-web-components'\n\nconst BuildingPermitConfirm = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n\n  const [confirm, setConfirm] = useState(false);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [app, setApp] = useState({});\n  const [ancillaryPermits, setAncillaryPermits] = useState([]);\n  const [showPreview, setShowPreview] = useState(false);\n\n  const resetStatus = () => {\n    setError(null);\n    setLoading(false);\n  }\n\n  const loadApplication = () => {\n    setLoading(true);\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        setApp(app);\n        resetStatus();\n      }\n    })\n  };\n\n  const loadAncillaryPermits = () => {\n    setLoading(true);\n    appService.invoke(\"getAncillaryPermits\", {appid: appno}, (err, ancillaryPermits) => {\n      if (err) {\n        setError(err);\n      } else {\n        setAncillaryPermits(ancillaryPermits);\n        resetStatus();\n      }\n    })\n  };\n\n  useEffect(() => {\n    loadApplication();\n    loadAncillaryPermits();\n  }, []);\n\n\n  const getLocation = () => {\n    if (!app.location) return \"\";\n\n    const location = [];\n    if (app.location.lotno) location.push(`Lot: ${app.location.lotno}`);\n    if (app.location.blockno) location.push(`Block: ${app.location.blockno}`);\n    if (app.location.street) location.push(`Street: ${app.location.street}`);\n    if (app.location.barangay.name) location.push(`Barangay: ${app.location.barangay.name}`);\n    return location.join(\" \");\n  }\n\n  const getContractor = () => {\n    let contractor = \"\";\n    if (app.contractor) {\n      contractor = `${app.contractor.lastname}, ${app.contractor.firstname} ${app.contractor.middlename}`;\n    }\n    return contractor;\n  }\n\n  const getWorkTypes = () => {\n    let worktypes = \"\";\n    if (app.worktypes && app.worktypes.length > 0) {\n      worktypes = app.worktypes?.join(\",\");\n    }\n    return worktypes;\n  }\n\n  const submitConfirmation = () => {\n    setConfirm(true);\n  }\n\n  const submit = () => {\n    setConfirm(false);\n    moveNextStep();\n  }\n\n  const onCloseViewer = () => {\n    setShowPreview(false);\n  }\n\n  let items = [];\n  ancillaryPermits.forEach(permit => {\n    items.push({\n      title: permit.permittypeid.toUpperCase(),\n      Icon: PageviewIcon,\n      href: `/jreports/obo/${permit.permittypeid}permit?refid=${permit.objid}`,\n      // href: `/jreports/obo/electricalpermit?refid=OBOBPANC25cf462e:174704f4c30:-7fcf`,\n    })\n  })\n\n  return (\n    <Panel>\n      <Subtitle>Confirm Application</Subtitle>\n      <Spacer />\n\n      <ReportViewer\n        title=\"Building Permit Application\"\n        items={items}\n        open={showPreview}\n        style={{}}\n        onClose={onCloseViewer}\n      />\n\n      <MsgBox\n        open={confirm}\n        type=\"confirm\"\n        msg=\"Permit processing will now be completed. Make sure that all information are correct.\"\n        onAccept={submit}\n        onCancel={() => setConfirm(false)}\n      />\n      { /* <Error msg={error} /> */}\n      <Loading visibleWhen={loading} />\n      <p>Please confirm the info and preview each permit application before submitting</p>\n      <FormPanel visibleWhen={!loading} context={app} handler={setApp}>\n        <Panel style={styles.container}>\n          <Panel style={styles.linkContainer}>\n          {/**\n            <Button caption=\"Preview Reports\" action={() => setShowPreview(true)} />\n           */}\n            <ButtonLink\n              caption=\"Preview\"\n              href={`/jreports/obo/bldgpermit?refid=${appno}`}\n              Icon={PageviewIcon}\n            />\n            <ButtonLink\n              caption=\"Download\"\n              href={`/jreports/download/obo/bldgpermit?refid=${appno}`}\n              Icon={CloudDownloadIcon}\n            />\n          </Panel>\n          <Panel>\n            <Text caption=\"Tracking No.\" name=\"objid\" readOnly={true} />\n            <Text caption=\"Project Title\" name=\"title\" readOnly={true} />\n            <Text caption=\"Project Location\" expr={getLocation} readOnly={true} />\n            <Spacer />\n            <Text caption=\"Applicant\" name=\"applicant.name\" readOnly={true} />\n            <Text caption=\"Occupancy Type\" name=\"occupancytype.title\" readOnly={true} />\n            <Text caption=\"Type of Work\" expr={getWorkTypes} readOnly={true} />\n            <Text caption=\"Supervisor in Charge of Construction\" expr={getContractor} readOnly={true} />\n          </Panel>\n          <Panel>\n            <Panel row>\n              <Integer caption=\"No. of Units\" name=\"numunits\" readOnly={true} />\n              <Integer caption=\"No. of Floors\" name=\"numfloors\" readOnly={true} />\n              <Decimal caption=\"Bldg. Height\" name=\"height\" readOnly={true} textAlign=\"left\"/>\n            </Panel>\n            <Spacer />\n            <Panel row>\n              <Decimal caption=\"Total Area (sqm)\" name=\"totalfloorarea\" readOnly={true} textAlign=\"left\" fullWidth={true} />\n              <Decimal caption=\"Project Cost\" name=\"projectcost\" readOnly={true} textAlign=\"left\" fullWidth={true} />\n            </Panel>\n            <Panel row>\n              <Text caption=\"Est. Start Date\" name=\"dtproposedconstruction\" readOnly={true} />\n              <Text caption=\"Est. Completion Date\" name=\"dtexpectedcompletion\" readOnly={true} />\n            </Panel>\n          </Panel>\n        </Panel>\n        <Spacer />\n        <Panel style={styles.ancillaryContainer}>\n          <Subtitle2 style={styles.label}>Other Permits</Subtitle2>\n          <Panel visibleWhen={ancillaryPermits.length > 0}>\n            {ancillaryPermits.map((permit) =>\n              <Panel style={styles.ancillaryItem}>\n                <label style={{marginLeft: 20}}>{permit.type.title}</label>\n                <Panel row>\n                  <ButtonLink\n                    caption=\"Preview\"\n                    href={`/jreports/obo/${permit.permittypeid}permit?refid=${permit.objid}`}\n                    Icon={PageviewIcon}\n                  />\n                  <ButtonLink\n                    caption=\"Download\"\n                    href={`/jreports/download/obo/${permit.permittypeid}permit?refid=${permit.objid}`}\n                    Icon={CloudDownloadIcon}\n                  />\n                </Panel>\n              </Panel>\n            )}\n          </Panel>\n        </Panel>\n        <ActionBar>\n          <Button caption=\"Submit\" action={submitConfirmation} />\n        </ActionBar>\n      </FormPanel>\n    </Panel>\n  )\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyConent: \"flex-start\",\n    border: \"1px solid #aaa\",\n    padding: 20,\n    borderRadius: 3,\n  },\n  linkContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  ancillaryContainer: {\n    marginRight: 15,\n    marginBottom: 20,\n  },\n  ancillaryItem: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 5,\n    marginRight: 10,\n    border: \"1px solid #aaa\",\n  },\n}\n\nexport default BuildingPermitConfirm;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Error,\n  Subtitle,\n  FormPanel,\n  Text,\n  Spacer,\n  Decimal,\n  Date,\n  ButtonLink,\n  PageviewIcon,\n  CloudDownloadIcon,\n  LinkIcon,\n  Subtitle2,\n  ReportViewer,\n} from \"rsi-react-web-components\";\n\n\nconst BuildingPermitCompleted = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [app, setApp] = useState({});\n  const [ancillaryPermits, setAncillaryPermits] = useState([]);\n  const [showPreview, setShowPreview] = useState(false);\n\n\n  const resetStatus = () => {\n    setError(null)\n    setLoading(false)\n  }\n\n  const loadApplication = () => {\n    setLoading(true)\n    appService.invoke(\"getProjectInfo\", { appid: appno }, (err, app) => {\n      if (err) {\n        setError(err)\n      } else {\n        setApp(app)\n        resetStatus()\n      }\n    })\n  }\n\n  const loadAncillaryPermits = () => {\n    setLoading(true)\n    appService.invoke(\"getAncillaryPermits\",\n      { appid: appno },\n      (err, ancillaryPermits) => {\n        if (err) {\n          setError(err)\n        } else {\n          setAncillaryPermits(ancillaryPermits)\n          resetStatus()\n        }\n      }\n    )\n  }\n\n  useEffect(() => {\n    loadApplication()\n    loadAncillaryPermits()\n  }, [])\n\n\n\n  const location = [];\n  if (app.location) {\n    if (app.location.lotno) location.push(`Lot: ${app.location.lotno}`);\n    if (app.location.blockno) location.push(`Block: ${app.location.blockno}`);\n    if (app.location.street) location.push(`Street: ${app.location.street}`);\n    if (app.location.barangay.name) location.push(`Barangay: ${app.location.barangay.name}`);\n  }\n\n  let contractor = \"\";\n  if (app.contractor) {\n    contractor = `${app.contractor.lastname}, ${app.contractor.firstname} ${app.contractor.middlename}`;\n    contractor += `\\n${app.contractor.profession}`;\n    contractor += ` PRC NO.: ${app.contractor.prc.idno} Issued: ${app.contractor.prc.dtissued}`;\n  }\n\n  const onCloseViewer = () => {\n    setShowPreview(false);\n  }\n\n  let items = [];\n  ancillaryPermits.forEach(permit => {\n    items.push({\n      title: permit.permittypeid.toUpperCase(),\n      icon: '',\n      href: `/jreports/obo/${permit.permittypeid}permit?refid=${permit.objid}`,\n    })\n  })\n\n  return (\n    <Panel>\n      <Spacer />\n      <Error msg={error} />\n      <ReportViewer\n        title=\"Building Permit Application\"\n        items={items}\n        open={showPreview}\n        style={{}}\n        onClose={onCloseViewer}\n      />\n      <FormPanel context={app} handler={setApp}>\n        <label>\n        Please download and print the Building and Ancillary Permit forms, prepare the\n        requirements listed below, and submit at the receiving window of our One-Stop\n        Shop for Construction Permits (OSCP) at the Ground Floor, City of Engineering\n        Office, Miguel Lopez del Legazpi Boulevard, Dapdap, Legazpi City.\n        </label>\n        <Spacer height={10} />\n        <Panel style={styles.container}>\n          <Panel style={styles.linkContainer}>\n            <ButtonLink\n              caption=\"Preview\"\n              href={`/jreports/partner/${partner.group.name}_${partner.name}/obo/buildingpermit?refid=${appno}`}\n              Icon={PageviewIcon}\n            />\n            <ButtonLink\n              caption=\"Download\"\n              href={`/jreports/download/partner/${partner.group.name}_${partner.name}/obo/buildingpermit?refid=${appno}`}\n              Icon={CloudDownloadIcon}\n            />\n          </Panel>\n          <Panel style={styles.infoContainer}>\n            <Text caption=\"Tracking No.\" name=\"objid\" readOnly={true} />\n            <Text caption=\"Project Title\" name=\"title\" readOnly={true} />\n            <Text caption=\"Location\" expr={() => location.join(\" ,\")} readOnly={true} />\n            <Text caption=\"Applicant\" name=\"applicant.name\" readOnly={true} />\n            <Decimal caption=\"Project Cost\" name=\"projectcost\" readOnly={true} textAlign=\"left\" />\n            <Panel row>\n              <Date caption=\"Est. Start Date\" name=\"dtproposedconstruction\" readOnly={true} />\n              <Date caption=\"Est. End Date\" name=\"dtexpectedcompletion\" readOnly={true} />\n            </Panel>\n            <Text\n              caption=\"Supervisor/In Charge of Project\"\n              expr={() => contractor}\n              readOnly={true}\n              multiline={true}\n              rows={2}\n            />\n          </Panel>\n        </Panel>\n      </FormPanel>\n      <Spacer />\n      <Panel style={styles.ancillaryContainer}>\n        <Subtitle2 style={styles.label}>Other Permits</Subtitle2>\n        <Panel visibleWhen={ancillaryPermits.length > 0}>\n          {ancillaryPermits.map((permit) =>\n            <Panel style={styles.ancillaryItem}>\n              <label style={{marginLeft: 20}}>{permit.type.title}</label>\n              <Panel row>\n                <ButtonLink\n                  caption=\"Preview\"\n                  href={`/jreports/partner/${partner.group.name}_${partner.name}/obo/${permit.permittypeid}permit?refid=${permit.objid}`}\n                  Icon={PageviewIcon}\n                />\n                <ButtonLink\n                  caption=\"Download\"\n                  href={`/jreports/download/partner/${partner.group.name}_${partner.name}/obo/${permit.permittypeid}permit?refid=${permit.objid}`}\n                  Icon={CloudDownloadIcon}\n                />\n              </Panel>\n            </Panel>\n          )}\n        </Panel>\n      </Panel>\n    </Panel>\n  )\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyConent: \"flex-start\",\n    border: \"1px solid #aaa\",\n    padding: 20,\n    borderRadius: 3,\n  },\n  infoContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginRight: 10,\n    width: \"100%\",\n  },\n  linkContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  ancillaryContainer: {\n    marginRight: 15,\n    marginBottom: 20,\n  },\n  ancillaryItem: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 5,\n    marginRight: 10,\n    border: \"1px solid #aaa\",\n  },\n}\n\n\nexport default BuildingPermitCompleted\n","import React, { useState, useEffect } from 'react';\nimport {\n  Panel,\n  Card,\n  Title,\n  Service,\n  Stepper,\n  getUrlParameter,\n  Page\n} from 'rsi-react-web-components';\n\nconst svc = Service.lookup(\"OnlineBuildingPermitService\", \"obo\");\n\nimport ApplicationTypeSelect from \"../components/ApplicationTypeSelect\";\nimport BuildingPermitInitial from \"./BuildingPermitInitial\";\nimport BuildingPermitApplicant from \"./BuildingPermitApplicant\";\nimport BuildingPermitLocation from \"./BuildingPermitLocation\";\nimport BuildingPermitProject from \"./BuildingPermitProject\";\nimport BuildingPermitContractor from \"./BuildingPermitContractor\";\nimport BuildingPermitOccupancy from \"./BuildingPermitOccupancy\";\nimport BuildingPermitAccessories from \"./BuildingPermitAccessories\";\nimport BuildingPermitOtherPermits from \"./BuildingPermitOtherPermits\";\nimport BuildingPermitConfirm from \"./BuildingPermitConfirm\";\n// import BuildingPermitFinish from \"./BuildingPermitFinish\";\nimport BuildingPermitCompleted from \"./BuildingPermitCompleted\";\n\nconst pages = [\n  { step: 0, component: null },\n  { step: 1, name: 'applicant', caption: 'Applicant', component: BuildingPermitApplicant },\n  { step: 2, name: 'location', caption: 'Project Location', component: BuildingPermitLocation },\n  { step: 3, name: 'project', caption: 'Project Details', component: BuildingPermitProject },\n  { step: 4, name: 'contractor', caption: 'Contractor', component: BuildingPermitContractor },\n  { step: 5, name: 'project', caption: 'Occupancy Type', component: BuildingPermitOccupancy },\n  { step: 6, name: 'accessories', caption: 'Accessories', component: BuildingPermitAccessories },\n  { step: 7, name: 'ancillarylist', caption: 'Other Permits', component: BuildingPermitOtherPermits },\n  { step: 8, name: 'confirm', caption: 'Confirm', component: BuildingPermitConfirm },\n  { step: 9, name: 'completed', caption: 'Completed', component: BuildingPermitCompleted },\n  // { step: 9, name: 'finish', caption: 'Finish', component: BuildingPermitFinish },\n]\n\nconst BuildingPermitWebController = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [mode, setMode] = useState(\"apptype\");\n  const [appType, setAppType] = useState(\"new\");\n  const [appno, setAppno] = useState(getUrlParameter(props.location, \"appid\"));\n  const [app, setApp] = useState({step: 1});\n  const [step, setStep] = useState(1)\n  const [errorText, setErrorText] = useState({});\n\n  const { partner, service, history } = props\n\n  const handleError = (err) => {\n    setLoading(false);\n    setError(err.toString());\n  }\n\n  const findCurrentApp = () => {\n    svc.invoke(\"findCurrentInfo\", {appid: appno}, (err, app) => {\n      const orgcode = partner.orgcode || partner.id;\n      if (err) {\n        setError(err);\n      } else {\n        if(!app) {\n          setError(\"Application no. does not exist\");\n        } else if( orgcode != app.orgcode ) {\n          setError(\"The application number provided is not for this local government\");\n        } else {\n          setApp(app);\n          setStep(app.step);\n          setMode(\"processing\");\n        }\n      }\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    if (appno) {\n      setLoading(true);\n      findCurrentApp();\n    }\n  }, [appno]);\n\n  const onCreateNewApp = (appno) => {\n    setAppno(appno);\n    setMode(\"processing\");\n  }\n\n  const processAppType = ({appType, appno}) => {\n    if (appType === \"new\") {\n      setMode(appType);\n    } else {\n      if (appno) {\n        setAppno(appno);\n      } else {\n        setErrorText({...errorText, appno: \"Tracking No. is required\"})\n      }\n    }\n  }\n\n  const saveHandler = () => {\n    console.log(\"SAVE HANDLER\");\n  }\n\n  const moveNextStep = () => {\n    const stepCompleted = step < app.step && step !== 1;\n    if (stepCompleted) {\n      setStep(ps => ps + 1);\n    } else {\n      svc.invoke(\"update\", {appid: appno, step: step+1}, (err, updatedApp) => {\n        if (err) {\n          setError(err);\n        } else {\n          setStep(updatedApp.step);\n          setApp({...app, step: updatedApp.step});\n        }\n      });\n    }\n  }\n\n  const handleStep = (step) => {\n    setStep(step);\n  }\n\n\n  if (mode === \"apptype\") {\n    return (\n      <ApplicationTypeSelect service={service} error={error} onCancel={history.goBack} onSubmit={processAppType}  />\n    )\n  }\n\n  if (mode === \"new\") {\n    return (\n      <BuildingPermitInitial {...props} handler={onCreateNewApp} onCancel={()=>{ setMode(\"apptype\")}}/>\n    )\n  }\n\n  const page = pages[step];\n  const PageComponent = page.component;\n  const compProps = {\n    partner,\n    appno,\n    pages,\n    moveNextStep,\n    appService: svc,\n    saveHandler,\n    stepCompleted: step < app.step\n  };\n\n  return (\n    <Page>\n      {app.step < 9 &&\n        <Panel target=\"left\" style={styles.stepperContainer} >\n          <Stepper steps={pages} completedStep={app.step} activeStep={step} handleStep={handleStep} />\n        </Panel>\n      }\n      <Card>\n        <Title>{service.title}</Title>\n        <PageComponent page={page} {...compProps} />\n      </Card>\n    </Page>\n  )\n}\n\nconst styles = {\n  stepperContainer: {\n    paddingTop: 30,\n    paddingLeft: 40,\n  }\n}\n\nexport default BuildingPermitWebController\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ActionBar,\n  Button,\n  Panel,\n  Error,\n  Subtitle,\n  Spacer,\n} from \"rsi-react-web-components\";\n\nimport ProfessionalLookup from \"../components/ProfessionalLookup\";\nimport ProfessionalCard from \"../components/ProfessionalCard\";\n\nconst BuildingPermitContractor = ({\n  partner,\n  appno,\n  appService,\n  moveNextStep,\n  stepCompleted\n}) => {\n  const initialProject = {\n    appid: appno,\n    apptype: \"NEW\",\n  }\n\n  const [error, setError] = useState();\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [project, setProject] = useState(initialProject);\n  const [professional, setProfessional] = useState();\n\n  useEffect(() => {\n    appService.invoke(\"getProjectInfo\", {appid: appno}, (err, project) => {\n      if (err) {\n        setError(err);\n      } else {\n        setProfessional(project.contractor);\n        setProject(project);\n      }\n    });\n  }, [])\n\n  const submitProjectDetail = () => {\n    setError(null);\n    const detail = {\n      appid: appno,\n      title: project.title,\n      description: project.description,\n      numunits: project.numunits,\n      totalfloorarea: project.totalfloorarea,\n      height: project.height,\n      numfloors: project.numfloors,\n      projectcost: project.projectcost,\n      dtproposedconstruction: project.dtproposedconstruction,\n      dtexpectedcompletion: project.dtexpectedcompletion,\n    };\n    appService.invoke(\"update\", detail, (err, proj) => {\n      if (err) {\n        setError(err);\n      } else {\n        clearStatus();\n        setMode(\"select-worktype\");\n      }\n    });\n  }\n\n  const clearStatus = () => {\n    setError(null);\n    setLoading(false);\n  }\n\n  const onSelectProfessional = (professionals) => {\n    if (professionals.length === 0) {\n      setProfessional({});\n      return;\n    }\n\n    const professional = professionals[0];\n    appService.invoke(\"update\", {appid: appno, contractorid: professional.objid}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        setError(null);\n        setProfessional(professional);\n      }\n    });\n  }\n\n  const submitProfessional = () => {\n    if (!professional) {\n      setError(\"Please select a professional.\")\n    } else {\n      moveNextStep();\n    }\n  }\n\n  return (\n    <Panel>\n      <Subtitle>Project Details</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n\n      <Panel>\n        <label>Specify full time inspector and supervisor of construction work</label>\n        <Spacer height={10} />\n        {professional && professional.lastname &&\n          <Panel>\n            <ProfessionalCard\n              caption=\"Inspector/Supervisor\"\n              professional={professional}\n              onSelectProfessional={onSelectProfessional}\n            />\n          </Panel>\n        }\n        {(!professional || !professional.lastname) &&\n          <ProfessionalLookup caption=\"Search Professional\" onSelect={onSelectProfessional} fullWidth={false} />\n        }\n        <ActionBar>\n          <Button caption=\"Next\" action={submitProfessional} disableWhen={!professional || !professional.objid}/>\n        </ActionBar>\n      </Panel>\n\n    </Panel>\n  )\n}\n\n\nexport default BuildingPermitContractor\n","import React, { useState } from \"react\";\nimport {\n  Panel,\n  Card,\n  Title,\n  Page,\n  Text,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  BackLink,\n  Button,\n  FormPanel,\n  Decimal,\n  Service,\n  Error\n} from 'rsi-react-web-components';\n\nimport { EmailVerification } from 'rsi-react-filipizen-components'\nimport ApplicationTypeSelect from \"../components/ApplicationTypeSelect\";\nimport Confirmation from \"../components/Confirmation\";\nimport TrackingInfo from \"../components/TrackingInfo\";\n\n\nconst steps = [\n  {name: \"email\", title: \"Email Verification\"},\n  // {name: \"apptype\", title: \"Application Type\"},\n  {name: \"specifybldgpermit\", title: \"Specify Building Permit\"},\n  {name: \"verifybldgpermit\", title: \"Verify Building Permit Information\"},\n  {name: \"confirmation\", title: \"Confirmation\"},\n  {name: \"newapp\", title: \"New Application \"},\n]\n\nconst OccupancyPermitInitial = ({\n  partner,\n  service,\n  onComplete,\n  history,\n  appService\n}) => {\n\n  const [error, setError] = useState();\n  const [errorText, setErrorText] = useState({});\n  const [contact, setContact] = useState({});\n  const [appType, setAppType] = useState(\"new\");\n  const [appno, setAppno] = useState();\n  const [bldgPermitNo, setBldgPermitNo] = useState();\n  const [bldgPermit, setBldgPermit] = useState({});\n  //TOOD: reset step t0 0\n  const [activeStep, setActiveStep] = useState(0);\n\n\n  const step = steps[activeStep];\n\n  const moveNextStep = () => {\n    setActiveStep(cs => cs + 1);\n  }\n\n  const movePrevStep = () => {\n    setActiveStep(cs => cs-1);\n  }\n\n  const submitAppType = ({appType, appno}) => {\n    if (appType === \"new\") {\n      moveNextStep();\n    } else {\n      appService.invoke(\"findCurrentInfo\", {appid: appno}, (err, app) => {\n        if (err) {\n          setError(err);\n        } else if (!app) {\n          setError(\"Application no. does not exist.\")\n        } else {\n          onComplete({appType, appno});\n        }\n      })\n    }\n  }\n\n  const exitInitial = () => {\n    onComplete({appType: \"new\", appno});\n  }\n\n  const onverifyEmail = (contact) => {\n    setContact(contact);\n    moveNextStep();\n  }\n\n  const loadBuildingPermit = () => {\n    if (bldgPermitNo) {\n      setError(null);\n      const svc = Service.lookup(`${partner.id}:OboOnlineService`, \"obo\");\n      svc.invoke(\"findBldgPermitNo\", {permitno: bldgPermitNo}, (err, permit) => {\n        if (err) {\n          setError(err);\n        } else {\n          setBldgPermit(permit);\n          moveNextStep();\n        }\n      })\n    } else {\n      setErrorText({bldgPermitNo: \"Please specify the Building Permit No.\"});\n    }\n  }\n\n  const submitBuildingPermit = () => {\n    moveNextStep();\n  }\n\n  const saveApp = () => {\n    const newApp = {\n      orgcode: partner.id,\n      apptype: appType,\n      permittype: bldgPermit.apptype,\n      applicant: bldgPermit.applicant,\n      bldgpermit: bldgPermit,\n      contact\n    }\n    appService.invoke(\"create\", newApp, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        setAppno(app.objid)\n        moveNextStep();\n      }\n    });\n  }\n\n  return (\n    <Page>\n      <Card>\n        <Title>{service.title}</Title>\n        <Panel visibleWhen={step.name === \"email\"}>\n          <EmailVerification showName={true} onCancel={history.goBack} onVerify={onverifyEmail}  />\n        </Panel>\n\n        <Panel visibleWhen={step.name === \"specifybldgpermit\"}>\n          <Subtitle>{step.title}</Subtitle>\n          <Spacer height={30} />\n          <Text\n            caption=\"Building Permit No.\"\n            value={bldgPermitNo} onChange={setBldgPermitNo}\n            variant=\"outlined\"\n            fullWidth={false}\n            required\n            error={errorText.bldgPermitNo || error}\n            helperText={errorText.bldgPermitNo || error}\n            size=\"small\"\n            />\n          <ActionBar>\n            <BackLink action={movePrevStep} />\n            <Button caption=\"Next\" action={loadBuildingPermit} />\n          </ActionBar>\n        </Panel>\n\n        <FormPanel visibleWhen={step.name === \"verifybldgpermit\"} context={bldgPermit} handler={setBldgPermit}>\n          <Subtitle>Verify Building Permit Information</Subtitle>\n          <Spacer height={30} />\n          <Text caption=\"Building Permit No.\" name=\"permitno\" readOnly={true} />\n          <Text caption=\"Applicant\" name=\"applicant.name\" readOnly={true} />\n          <Spacer />\n          <Text caption=\"Project Title\" name=\"title\" readOnly={true} />\n          <Text caption=\"Location\" name=\"location.text\" readOnly={true} />\n          <Decimal caption=\"Project Cost\" name=\"projectcost\" readOnly={true} />\n          <ActionBar>\n            <BackLink action={movePrevStep} />\n            <Button caption=\"Next\" action={submitBuildingPermit} />\n          </ActionBar>\n        </FormPanel>\n\n        <Panel visibleWhen={step.name === \"confirmation\"}>\n          <Confirmation partner={partner} error={error} onCancel={movePrevStep} onContinue={saveApp} />\n        </Panel>\n\n        <Panel visibleWhen={step.name === \"newapp\"} width={400}>\n          <TrackingInfo appno={appno} onContinue={exitInitial} />\n        </Panel>\n      </Card>\n    </Page>\n  )\n}\n\n\nexport default OccupancyPermitInitial;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  Button,\n  FormPanel,\n  Text,\n  Label,\n  Decimal,\n  Date,\n  BackLink\n} from 'rsi-react-web-components';\n\nconst PlannedVsActual = ({\n  appno,\n  appService,\n  moveNextStep,\n  movePrevStep,\n  stepCompleted\n}) => {\n\n  const [error, setError] = useState();\n  const [app, setApp] = useState({});\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {{\n        setApp(app);\n      }}\n    });\n  }, [appno])\n\n  const updatePermit = () => {\n    appService.update(app, (err, updatedApp) => {\n      if (err) {\n        setError(err)\n      } else {\n        moveNextStep();\n      }\n    })\n  }\n\n  return (\n    <Panel style={{maxWidth: 600}}>\n      <Subtitle>Planned vs. Actual</Subtitle>\n      <Label>Please indicate the actual values of construction.</Label>\n      <Spacer />\n      <FormPanel context={app} handler={setApp} style={styles.container}>\n        <Panel style={styles.row}>\n          <Label caption=\"\" style={styles.label}  />\n          <div style={styles.columnTitle}>Planned</div>\n          <div style={styles.columnTitle}>Actual</div>\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"Total Floor Area (sqm)\" style={styles.label}  />\n          <Decimal name=\"bldgpermit.totalfloorarea\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Decimal name=\"actualtotalfloorarea\" style={styles.item} fullWdith={false} variant=\"outlined\"/>\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"Project Total Cost\" style={styles.label} />\n          <Decimal name=\"bldgpermit.projectcost\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Decimal name=\"actualprojectcost\" style={styles.item} fullWdith={false} variant=\"outlined\" />\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"No. of Units\" style={styles.label} />\n          <Decimal name=\"bldgpermit.numunits\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Decimal name=\"actualnumunits\" style={styles.item} fullWdith={false} variant=\"outlined\" />\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"No. of Floors\" style={styles.label} />\n          <Decimal name=\"bldgpermit.numfloors\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Decimal name=\"actualnumfloors\" style={styles.item} fullWdith={false} variant=\"outlined\" />\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"Height (m)\" style={styles.label} />\n          <Decimal name=\"bldgpermit.height\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Decimal name=\"actualheight\" style={styles.item} fullWdith={false} variant=\"outlined\" />\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"Start Date\" style={styles.label} />\n          <Date name=\"bldgpermit.dtproposedconstruction\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Date name=\"dtactualstarted\" style={styles.item} fullWdith={false} variant=\"outlined\" />\n        </Panel>\n        <Panel style={styles.row}>\n          <Label caption=\"Completion Date\" style={styles.label} />\n          <Date name=\"bldgpermit.dtexpectedcompletion\" disabled={true} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          <Date name=\"dtactualcompleted\" style={styles.item} fullWdith={false} variant=\"outlined\" />\n        </Panel>\n      </FormPanel>\n      <ActionBar>\n        <BackLink action={movePrevStep} />\n        <Button caption=\"Next\" action={updatePermit} />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nconst styles = {\n  container: {\n    display: \"flext\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n  },\n  columnTitle: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: 300,\n    padding: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  label: {\n    width: \"100%\",\n  },\n  item: {\n    width: 300,\n    marginRight: 10,\n  }\n}\n\nexport default PlannedVsActual;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  Button,\n  FormPanel,\n  Label,\n  Decimal,\n  Error,\n  BackLink\n} from 'rsi-react-web-components';\n\nconst ActualCost = ({\n  appno,\n  appService,\n  moveNextStep,\n  movePrevStep,\n  stepCompleted\n}) => {\n\n  const costs = [\n    { caption: \"Total Materials Cost\", field: \"totalmaterialcost\", value: 0.0, },\n    { caption: \"Total Direct Cost\", field: \"totaldirectlaborcost\", value: 0.0, },\n    { caption: \"Total Equipment Cost\", field: \"totalequipmentcost\", value: 0.0, },\n    { caption: \"Total Other Cost\", field: \"totalothercost\", value: 0.0, },\n  ]\n\n  const [error, setError] = useState();\n  const [app, setApp] = useState({});\n  const [cost, setCost] = useState({items: costs})\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {{\n        setApp(app);\n        const updatedCost = {...cost};\n        updatedCost.items.forEach(item => {\n          item.value = app[item.field];\n        });\n        setCost(updatedCost);\n      }}\n    });\n  }, [appno])\n\n  const updatePermit = () => {\n    const updatedApp = { ...app };\n    cost.items.forEach(item => {\n      updatedApp[item.field] = item.value;\n    });\n    appService.invoke(\"update\", updatedApp, (err, app) => {\n      if (err) {\n        setError(err)\n      } else {\n        moveNextStep();\n      }\n    })\n  }\n\n  return (\n    <Panel style={{maxWidth: 600}}>\n      <Subtitle>Actual Costs</Subtitle>\n      <Label>Please indicate the actual cost of construction.</Label>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={cost} handler={setCost} style={styles.container}>\n        {cost.items.map((cost, idx) => (\n          <Panel key={cost.field} style={styles.row}>\n            <Label caption={cost.caption} style={styles.label}  />\n            <Decimal name={`items[${idx}].value`} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          </Panel>\n        ))}\n      </FormPanel>\n      <ActionBar>\n        <BackLink action={movePrevStep} />\n        <Button caption=\"Next\" action={updatePermit} />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nconst styles = {\n  container: {\n    display: \"flext\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  label: {\n    width: \"100%\",\n  },\n  item: {\n    width: 300,\n    marginRight: 10,\n  }\n}\n\nexport default ActualCost;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  Button,\n  FormPanel,\n  Label,\n  Decimal,\n  Error,\n  BackLink\n} from 'rsi-react-web-components';\n\nconst OtherCost = ({\n  appno,\n  appService,\n  moveNextStep,\n  movePrevStep,\n  stepCompleted\n}) => {\n\n  const costs = [\n    { caption: \"Fire Alarm Cost\", field: \"firealarmcost\", value: 0.0, },\n    { caption: \"Sprinkler Cost\", field: \"sprinklercost\", value: 0.0, },\n    { caption: \"LPG Piping Cost\", field: \"lpgpipingcost\", value: 0.0, },\n    { caption: \"Fire Suppression System Cost\", field: \"firesuppcost\", value: 0.0, },\n  ]\n\n  const [error, setError] = useState();\n  const [app, setApp] = useState({});\n  const [cost, setCost] = useState({items: costs})\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {{\n        setApp(app);\n        const updatedCost = {...cost};\n        updatedCost.items.forEach(item => {\n          item.value = app[item.field];\n        });\n        setCost(updatedCost);\n      }}\n    });\n  }, [appno])\n\n  const updatePermit = () => {\n    const updatedApp = { ...app };\n    cost.items.forEach(item => {\n      updatedApp[item.field] = item.value;\n    });\n    appService.invoke(\"update\", updatedApp, (err, app) => {\n      if (err) {\n        setError(err)\n      } else {\n        moveNextStep();\n      }\n    })\n  }\n\n  return (\n    <Panel style={{maxWidth: 600}}>\n      <Subtitle>Other Costs</Subtitle>\n      <Label>Please indicate the other cost of construction.</Label>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={cost} handler={setCost} style={styles.container}>\n        {cost.items.map((cost, idx) => (\n          <Panel key={cost.field} style={styles.row}>\n            <Label caption={cost.caption} style={styles.label}  />\n            <Decimal name={`items[${idx}].value`} variant=\"outlined\" style={styles.item} fullWdith={false} />\n          </Panel>\n        ))}\n      </FormPanel>\n      <ActionBar>\n        <BackLink action={movePrevStep} />\n        <Button caption=\"Next\" action={updatePermit} />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nconst styles = {\n  container: {\n    display: \"flext\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  label: {\n    width: \"100%\",\n  },\n  item: {\n    width: 300,\n    marginRight: 10,\n  }\n}\n\nexport default OtherCost;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  Button,\n  Label,\n  BackLink,\n  PreviewButton\n} from 'rsi-react-web-components';\n\nconst Confirmation = ({\n  appno,\n  appService,\n  moveNextStep,\n  movePrevStep,\n  onComplete,\n  stepCompleted\n}) => {\n\n  const [error, setError] = useState();\n  const [app, setApp] = useState({});\n  const [isContracted, setIsContracted] = useState(false);\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {{\n        setApp(app);\n      }}\n    });\n  }, [appno])\n\n  const confirmPermit = () => {\n    appService.invoke(\"update\", app, (err, updatedApp) => {\n      if (err) {\n        setError(err)\n      } else {\n        onComplete();\n      }\n    })\n  }\n\n  const viewOccupancyPermit = () => {\n\n  }\n\n  const viewCompletionCertificate = () => {\n\n  }\n\n  return (\n    <Panel>\n      <Subtitle>Confirm Entry</Subtitle>\n      <p>\n        Before sending please check first the generated\n        application info. If everything is in order, you can\n        click Submit button to complete the transaction.\n      </p>\n      <Spacer />\n      <Panel style={styles.container}>\n        <Panel  style={styles.row}>\n          <Label style={styles.label}>Application for Occupancy Permit</Label>\n          <Button caption=\"View\" action={viewOccupancyPermit} variant=\"outlined\" />\n        </Panel>\n        <Panel style={styles.row}>\n          <Label style={styles.label}>Certificate of Completion</Label>\n          <Button caption=\"View\" action={viewCompletionCertificate} variant=\"outlined\" />\n        </Panel>\n      </Panel>\n      <ActionBar>\n        <BackLink action={movePrevStep} />\n        <Button caption=\"Submit\" action={confirmPermit} />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nconst styles = {\n  container: {\n    maxWidth: 350,\n    marginLeft: 50,\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  label: {\n    fontWeight: \"bold\",\n  }\n}\n\nexport default Confirmation;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Service,\n  getUrlParameter,\n  Stepper,\n  Page,\n  Panel,\n  Title,\n  Card\n} from 'rsi-react-web-components';\n\nimport ApplicationTypeSelect from \"../components/ApplicationTypeSelect\";\nimport OccupancyPermitInitial from \"./OccupancyPermitInitial\";\nimport OccupancyType from \"./OccupancyType\";\nimport PlannedVsActual from \"./PlannedVsActual\";\nimport ActualCost from \"./ActualCost\";\nimport OtherCost from \"./OtherCost\";\nimport Contractor from \"./Contractor\";\nimport Professionals from \"./Professionals\";\nimport Confirmation from \"./Confirmation\";\n\n\nconst svc = Service.lookup(\"OnlineOccupancyPermitService\", \"obo\");\n\nconst pages = [\n  { step: 0, component: null },\n  { step: 1, name: 'apptype', caption: 'Application Type', component: OccupancyType },\n  { step: 2, name: 'plannedactual', caption: 'Planned vs Actual', component: PlannedVsActual },\n  { step: 3, name: 'actualcost', caption: 'Actual Cost', component: ActualCost },\n  { step: 4, name: 'othercost', caption: 'Other Cost', component: OtherCost },\n  { step: 5, name: 'contractor', caption: 'Contractor', component: Contractor },\n  // { step: 6, name: 'professionals', caption: 'Professionals', component: Professionals },\n  { step: 6, name: 'confirmation', caption: 'Confirmation', component: Confirmation },\n]\n\nconst OccupancyPermitWebController = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [mode, setMode] = useState(\"apptype\");\n  const [appType, setAppType] = useState(\"full\");\n  const [appno, setAppno] = useState(getUrlParameter(props.location, \"appid\"));\n  const [app, setApp] = useState({});\n  const [step, setStep] = useState(0)\n\n  const { partner, service } = props\n\n  const handleError = (err) => {\n    setLoading(false);\n    setError(err.toString());\n  }\n\n  const findCurrentApp = () => {\n    if (!appno) return;\n    svc.invoke(\"findCurrentInfo\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        if(!app) {\n          setError(\"Application no. does not exist\");\n        }\n        console.log(\"partner\", partner)\n        if( partner.orgcode != app.orgcode ) {\n          setError(\"The application number provided is not for this local government\");\n        }\n        setApp(app);\n        setStep(app.step);\n        setMode(\"processing\");\n      }\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    findCurrentApp();\n  }, [appno]);\n\n  const onCompleteInitial = ({appType, appno}) => {\n    setAppno(appno);\n    setStep(step + 1);\n    setMode(\"processing\");\n  }\n\n  const moveNextStep = () => {\n    const stepCompleted = step < app.step;\n    if (stepCompleted) {\n      setStep(ps => ps + 1);\n    } else {\n      svc.invoke(\"moveNextStep\", {appid: appno}, (err, updatedApp) => {\n        if (err) {\n          setError(err);\n        } else {\n          setStep(updatedApp.step);\n          setApp({...app, step: updatedApp.step});\n        }\n      });\n    }\n  }\n\n  const movePrevStep = () => {\n    setStep(ps => ps - 1);\n  }\n\n  const onSubmitOccupancyType = (appType) => {\n    setAppType(appType);\n    moveNextStep();\n  }\n\n  const handleStep = (step) => {\n    setStep(step);\n  }\n\n  const submitAppType = ({appType, appno}) => {\n    if (appType === \"new\") {\n      setMode(\"init\");\n    } else {\n      svc.invoke(\"findCurrentInfo\", {appid: appno}, (err, app) => {\n        if (err) {\n          setError(err);\n        } else if (!app) {\n          setError(\"Application no. does not exist.\")\n        } else {\n          onCompleteInitial({appType, appno});\n        }\n      })\n    }\n  }\n\n  const onComplete = () => {\n    moveNextStep();\n    props.history.goBack();\n  }\n\n  if (mode === \"apptype\") {\n    return (\n      <ApplicationTypeSelect service={props.service} error={error} onCancel={history.goBack} onSubmit={submitAppType}  />\n    )\n  }\n\n  if (mode === \"init\") {\n    return (\n      <OccupancyPermitInitial {...props} appService={svc} onComplete={onCompleteInitial} onCancel={()=>{ setMode(\"init\")}}/>\n    )\n  }\n\n  const page = pages[step];\n  const PageComponent = page.component;\n  const compProps = {\n    partner,\n    appno,\n    pages,\n    moveNextStep,\n    movePrevStep,\n    appService: svc,\n    stepCompleted: step < app.step,\n    onSubmitOccupancyType,\n    onComplete\n  };\n\n  return (\n    <Page>\n      <Panel target=\"left\" style={styles.stepperContainer} >\n        <Stepper steps={pages} completedStep={app.step} activeStep={step} handleStep={handleStep} />\n      </Panel>\n      <Card>\n        <Title>{service.title}</Title>\n        <PageComponent page={page} {...compProps} />\n      </Card>\n    </Page>\n  )\n}\n\nconst styles = {\n  stepperContainer: {\n    paddingTop: 30,\n    paddingLeft: 40,\n  }\n}\n\nexport default OccupancyPermitWebController\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  Button,\n  Radio,\n  Item,\n  FormPanel,\n  Error\n} from 'rsi-react-web-components';\n\nconst OccupancyType = ({\n  appno,\n  appService,\n  onSubmitOccupancyType\n}) => {\n  const [error, setError] = useState();\n  const [app, setApp] = useState({});\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {{\n        setApp(app);\n      }}\n    });\n  }, [])\n\n  return (\n    <Panel>\n      <Subtitle>Application Type</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={app} handler={setApp}>\n        <Radio name=\"apptype\">\n          <Item caption=\"Full (Completed)\" value=\"full\" />\n          <Item caption=\"Partial\" value=\"partial\" />\n        </Radio>\n      </FormPanel>\n      <ActionBar>\n        <Button caption=\"Next\" action={() => onSubmitOccupancyType(app.apptype)} />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nexport default OccupancyType;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Panel,\n  Subtitle,\n  Spacer,\n  ActionBar,\n  Button,\n  FormPanel,\n  Label,\n  Text,\n  Date,\n  Email,\n  Checkbox,\n  BackLink\n} from 'rsi-react-web-components';\n\nconst Contractor = ({\n  appno,\n  appService,\n  moveNextStep,\n  movePrevStep,\n  stepCompleted\n}) => {\n\n  const [error, setError] = useState();\n  const [app, setApp] = useState({});\n  const [isContracted, setIsContracted] = useState(false);\n\n  useEffect(() => {\n    appService.invoke(\"getApplication\", {appid: appno}, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {{\n        setApp(app);\n      }}\n    });\n  }, [appno])\n\n  const updatePermit = () => {\n    appService.invoke(\"update\", app, (err, updatedApp) => {\n      if (err) {\n        setError(err)\n      } else {\n        moveNextStep();\n      }\n    })\n  }\n\n  return (\n    <Panel>\n      <Subtitle>Contractor</Subtitle>\n      <Label>Please specify contractor if available</Label>\n      <Spacer />\n      <Checkbox value={isContracted} onChange={setIsContracted} caption=\"Is undertaken by a Contractor?\" />\n      <FormPanel visibleWhen={isContracted} context={app} handler={setApp}>\n        <Text name=\"contractor.name\" caption=\"Contractor\" required={true} />\n        <Text name=\"contractor.address\" caption=\"Address\" required={true} />\n        <Text name=\"contractor.pcabno\" caption=\"PCAB License No.\" required={true} />\n        <Date name=\"contractor.pcabvalidaty\" caption=\"Validity Date\" required={true} />\n        <Text name=\"contractor.tin\" caption=\"TIN\" required={true} />\n        <Text name=\"contractor.managingofficer.name\" caption=\"Authorized Managing Officer\" required={true} />\n        <Email name=\"contractor.managingofficer.email\" required={true} />\n      </FormPanel>\n      <ActionBar>\n        <BackLink action={movePrevStep} />\n        <Button caption=\"Next\" action={updatePermit} />\n      </ActionBar>\n    </Panel>\n  )\n}\n\nexport default Contractor;\n","import React from \"react\";\nimport { Combobox } from \"rsi-react-web-components\";\n\nconst ProfessionList = ({\n  name=\"profession\",\n  caption=\"Profession\",\n  professions,\n  ...rest\n}) => {\n    return (\n    <Combobox\n      name={name}\n      caption={caption}\n      items={professions}\n      {...rest}\n    />\n  );\n};\n\nexport default ProfessionList;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Subtitle,\n  Error,\n  FormPanel,\n  Spacer,\n  Text,\n  Email,\n  Mobileno,\n  ActionBar,\n  Button,\n  BackLink,\n  Panel,\n  Service\n} from 'rsi-react-web-components';\n\nimport { VerifyEmailCode } from \"rsi-react-filipizen-components\";\nimport ProfessionList from \"../components/ProfessionList\";\n\nconst svc = Service.lookup(\"OboProfessionalService\", \"obo\");\n\n\nconst Initial = ({\n  partner,\n  onCancel,\n  onVerified\n}) => {\n\n  const [mode, setMode] = useState(\"init\");\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [info, setInfo] = useState({});\n  const [key, setKey] = useState();\n  const [professionList, setProfessionList] = useState([]);\n\n  useEffect(() => {\n    svc.invoke(\"getProfessionList\", null, (err, list) => {\n      setProfessionList(list);\n    })\n  }, []);\n\n  const handleError = (err) => {\n    setError(err);\n    setLoading(false);\n  }\n\n  const verifyInfo = () => {\n    setLoading(true);\n    svc.invoke(\"verifyInfo\", info, (err, res) => {\n      if (err) {\n        handleError(err)\n      } else {\n        setError(null);\n        setKey(res.key);\n        setMode(\"verify\");\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <FormPanel visibleWhen={mode === \"init\"} context={info} handler={setInfo}>\n        <Subtitle>Please specify initial information</Subtitle>\n        <Spacer />\n        <Error msg={error} />\n        <Text name=\"prc.idno\" caption=\"PRC No.\" required />\n        <ProfessionList caption=\"Profession (Copy profession in the PRC card\" name=\"profession\" expr={item => item} professions={professionList} required={true} />\n        <Email name=\"email\" required />\n        <Mobileno name=\"mobileno\" required />\n        <ActionBar>\n          <BackLink action={onCancel} />\n          <Button caption=\"Next\" action={verifyInfo} />\n        </ActionBar>\n      </FormPanel>\n\n      <Panel visibleWhen={mode === \"verify\"}>\n        <Subtitle>Email Verification</Subtitle>\n        <Spacer />\n        <Error msg={error} />\n        <p>Please enter the key code sent to your email at {info.email}.</p>\n        <VerifyEmailCode\n          partner={partner}\n          hiddenCode={key}\n          email={info.email}\n          onCancel={() => setMode(\"init\")}\n          onVerified={() => onVerified(info)}\n          width={200}\n        />\n      </Panel>\n    </React.Fragment>\n  );\n}\n\nexport default Initial;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ActionBar,\n  Button,\n  Panel,\n  Error,\n  Subtitle,\n  FormPanel,\n  BackLink,\n  Spacer,\n  Text,\n} from \"rsi-react-web-components\";\n\nimport { Person, IdEntry, PrcCard, PtrCard } from \"rsi-react-filipizen-components\";\n\nconst NewProfessional = ({\n  info = {},\n  partner,\n  onSubmit\n}) => {\n\n  const initialProfessional = {\n    entity: {...info, resident: true},\n    prc: info.prc,\n    resident: true\n  }\n\n  const [error, setError] = useState();\n  const [professional, setProfessional] = useState(initialProfessional);\n\n  const submitHandler = () => {\n    //TODO:\n    //validate here\n    onSubmit(professional);\n  }\n\n  return (\n    <Panel>\n      <Subtitle>Register New Professional</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n\n      <Panel>\n        <FormPanel context={professional} handler={setProfessional}>\n          <p>Please fill in the necessary data below. Text marked with * are required fields. </p>\n          <Text caption=\"Profession\" name=\"entity.profession\" readOnly={true} />\n          <Person name=\"entity\" person={professional} showAddress={true} orgcode={partner.id} />\n          <Spacer />\n          <PrcCard name=\"prc\" disableIdNo={true} />\n          <PtrCard name=\"ptr\" />\n          <IdEntry caption=\"Primary Identification\" name=\"id\" />\n          <ActionBar>\n            <Button caption=\"Next\" action={submitHandler} />\n          </ActionBar>\n        </FormPanel>\n      </Panel>\n    </Panel>\n  )\n}\n\nexport default NewProfessional;\n","import React from 'react'\nimport {\n  Panel,\n  Spacer,\n  Button,\n  Content,\n  Label,\n  Title,\n  Card,\n  CardActions,\n  Image\n} from 'rsi-react-web-components'\n\nimport SuccessLogo from \"../assets/success.png\";\n\nconst Success = ({ onClose }) => {\n  return (\n    <Panel>\n      <Card>\n        <Content center>\n          <Image src={SuccessLogo} width={120} alt='success' />\n          <Spacer />\n          <Title>Success!</Title>\n          <Spacer />\n          <Label style={{ ...styles.text, ...{ maxWidth: 300 } }}>\n            You have successfully registered your professional information.\n          </Label>\n          <Label labelStyle={styles.text}>\n            Thank you for using this service.\n          </Label>\n          <Spacer />\n          <CardActions>\n            <Button\n              variant='text'\n              caption='Return'\n              onClick={onClose}\n            />\n          </CardActions>\n        </Content>\n      </Card>\n    </Panel>\n  )\n}\n\nconst styles = {\n  text: {\n    display: \"block\",\n    textAlign: \"center\"\n  }\n};\n\nexport default Success\n","/* loaded by smart-asset */\nexport default \"success~RyBjQfqc.png\"","import React, { useState, useEffect } from 'react';\nimport {\n  Service,\n  Stepper,\n  Page,\n  Panel,\n  Title,\n  Card,\n  Error,\n  Content\n} from 'rsi-react-web-components';\n\n\nimport { Disclaimer } from \"rsi-react-filipizen-components\";\n\nimport Initial from \"./Initial\";\nimport NewProfessional from \"./NewProfessional\";\nimport Success from \"./Success\";\n\nconst svc = Service.lookup(\"OboProfessionalService\", \"obo\");\n\nconst steps = [\n  { step: 1, name: \"initial\", caption: \"Initial\" },\n  { step: 2, name: \"newprofessional\", caption: \"New Professional\" },\n  { step: 3, name: \"disclaimer\", caption: \"Disclaimer\" },\n  { step: 4, name: \"registered\", caption: \"Registered\" },\n]\n\nconst ProfessionalWebController = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState({});\n  const [mode, setMode] = useState(\"new\");\n  const [step, setStep] = useState(0);\n  const [key, setKey] = useState();\n  const [info, setInfo] = useState();\n  const [professional, setProfessional] = useState();\n\n  const { partner, service, history } = props;\n\n  console.log(\"PARTNER\", partner)\n\n  const handleError = (err) => {\n    setLoading(false);\n    setError(err.toString());\n  }\n\n  const moveNextStep = () => {\n    setStep(cs => cs+1);\n  }\n\n  const movePrevStep = () => {\n    setStep(cs => cs-1);\n  }\n\n  const activeStep = steps[step];\n\n  const verifiedInfoHandler = (info) => {\n    setInfo(info);\n    moveNextStep();\n  }\n\n\n  const getReconciledProfessional = () => {\n    const address = {...professional.entity.address};\n    if (professional.entity.resident) {\n      address.citymunicipality = partner.title;\n      address.province = partner.group.title;\n    }\n    const entity = {...professional.entity, address};\n    const prof = {...entity, ...professional};\n    delete prof.entity;\n    return prof;\n  }\n\n  const submitProfessional = (professional) => {\n    setProfessional(professional);\n    moveNextStep();\n  }\n\n  const saveProfessional = () => {\n    setLoading(true);\n    const reconciledProf = getReconciledProfessional();\n    svc.invoke(\"create\", reconciledProf, (err, prof) => {\n      if (err) {\n        handleError(err);\n      } else {\n        moveNextStep();\n      }\n    })\n  }\n\n  return (\n    <Page>\n      <Panel target=\"left\" style={styles.stepperContainer} >\n        <Stepper steps={steps} activeStep={step} />\n      </Panel>\n      <Card>\n        <Title>{service.title}</Title>\n        <Error msg={error} />\n        <Panel visibleWhen={activeStep.name === \"initial\"}>\n          <Initial partner={partner} onCancel={history.goBack} onVerified={verifiedInfoHandler} />\n        </Panel>\n        <Panel visibleWhen={activeStep.name === \"newprofessional\"}>\n          <NewProfessional partner={partner} info={info} onSubmit={submitProfessional} />\n        </Panel>\n        <Panel visibleWhen={activeStep.name === \"disclaimer\"}>\n          <Disclaimer partner={partner} onCancel={movePrevStep} onSubmit={saveProfessional} />\n        </Panel>\n        <Panel visibleWhen={activeStep.name === \"registered\"}>\n          <Success onClose={() => history.goBack()} />\n        </Panel>\n      </Card>\n    </Page>\n  )\n}\n\nconst styles = {\n  stepperContainer: {\n    paddingTop: 30,\n    paddingLeft: 40,\n  }\n}\n\nexport default ProfessionalWebController\n","import React, { useState, useEffect } from 'react'\nimport {\n  Service,\n  Page,\n  Panel,\n  Title,\n  Card,\n  Error,\n  FormPanel,\n  Subtitle,\n  Subtitle2,\n  Spacer,\n  Text,\n  ActionBar,\n  Button,\n  BackLink,\n  Date,\n  Label,\n  getDuration\n} from 'rsi-react-web-components'\nimport { VerifyEmailCode, EmailVerification } from 'rsi-react-filipizen-components'\n\nconst AppTrackingWebController = (props) => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [mode, setMode] = useState('init')\n  const [trackingno, setTrackingno] = useState()\n  const [app, setApp] = useState({subtasks: []})\n  const [verifiedInfo, setVerifiedInfo] = useState({})\n  const [contact, setContact] = useState()\n\n  const { partner, service, history } = props\n\n  const verifyTrackingNo = () => {\n    setError(null)\n    if (!trackingno) {\n      setError('Tracking No. is required.')\n    } else {\n      const svc = Service.lookup(`${partner.id}:OboOnlineService`, \"obo\");\n      svc.invoke(\"verifyApplication\", { trackingno }, (err, info) => {\n        if (err) {\n          setError(err);\n        } else {\n          setVerifiedInfo(info);\n          setMode('verification');\n        }\n      });\n    }\n  }\n\n  const onEmailVerified = (contact) => {\n    setContact(contact);\n    getApplicationStatus();\n  }\n\n  const resetStatus = () => {\n    setError(null);\n    setLoading(false);\n  }\n\n  const getApplicationStatus = () => {\n    setLoading(true);\n    const svc = Service.lookup(`${partner.id}:OboOnlineService`, \"obo\");\n    svc.invoke(\"findApplicationStatus\", { trackingno }, (err, app) => {\n      if (err) {\n        setError(err);\n      } else {\n        setApp(app);\n        setMode('info');\n        resetStatus();\n      }\n    })\n  };\n\n  const getLocation = () => {\n    if (!app.location) return \"\";\n\n    const location = [];\n    if (app.location.lotno) location.push(`Lot: ${app.location.lotno}`);\n    if (app.location.blockno) location.push(`Block: ${app.location.blockno}`);\n    if (app.location.street) location.push(`Street: ${app.location.street}`);\n    if (app.location.barangay.name) location.push(`Barangay: ${app.location.barangay.name}`);\n    return location.join(\" \");\n  }\n\n  const getWorkTypes = () => {\n    let worktypes = \"\";\n    if (app.worktypes && app.worktypes.length > 0) {\n      worktypes = app.worktypes?.join(\",\");\n    }\n    return worktypes;\n  }\n\n  let duration = \"\";\n  if (app && app.task) {\n    duration = getDuration(app.task.dtcreated);\n  }\n\n\n\n  return (\n    <Page>\n      <Card>\n        <Title>{service.title}</Title>\n        <Panel visibleWhen={mode === 'init'}>\n          <Subtitle>Building Permit Tracking No.</Subtitle>\n          <Spacer />\n          <Text\n            caption='Tracking No.'\n            name='trackingno'\n            value={trackingno}\n            onChange={setTrackingno}\n            required\n            error={error}\n            helperText={error}\n            fullWidth={false}\n            variant='outlined'\n          />\n          <ActionBar>\n            <BackLink action={() => history.goBack()} />\n            <Button caption='Next' action={verifyTrackingNo} />\n          </ActionBar>\n        </Panel>\n\n        <Panel visibleWhen={mode === 'verification'}>\n          <Subtitle>Account Verification</Subtitle>\n          <Spacer />\n\n          <VerifyEmailCode\n            partner={partner}\n            hiddenCode={verifiedInfo.key}\n            email={verifiedInfo.email}\n            onCancel={() => setMode(\"init\")}\n            onVerified={onEmailVerified}\n          />\n        </Panel>\n        <FormPanel visibleWhen={mode === 'info'} context={app} handler={setApp}>\n          <Subtitle>Building Permit Application Status</Subtitle>\n          <Spacer />\n          <Panel>\n            <Panel row>\n              <Text caption=\"Tracking No.\" name=\"trackingno\" readOnly={true} />\n              <Text caption=\"Application No.\" name=\"appno\" readOnly={true} />\n            </Panel>\n            <Text caption=\"Project Title\" name=\"title\" readOnly={true} />\n            <Text caption=\"Project Location\" expr={getLocation} readOnly={true} />\n            <Spacer />\n            <Text caption=\"Applicant\" name=\"applicant.name\" readOnly={true} />\n            <Text caption=\"Occupancy Type\" name=\"occupancytype.title\" readOnly={true} />\n            <Text caption=\"Type of Work\" expr={getWorkTypes} readOnly={true} />\n          </Panel>\n          <Spacer />\n\n          <Panel style={styles.currentTask}>\n            <div style={styles.title}>\n              <Subtitle2>Current Task (ongoing)</Subtitle2>\n            </div>\n            <div style={styles.taskInfo}>\n              <h3>{app && app.task && app.task.title}</h3>\n              <Label caption=\"Date Endorsed\" expr=\"task.dtcreated\" />\n              {app && app.task && app.task.assignee.name &&\n                <Label caption=\"Assigned To\" expr=\"task.assignee.name\" />\n              }\n              <Label caption=\"Duration\" context={app} expr={ctx => duration} />\n            </div>\n          </Panel>\n        </FormPanel>\n        <Panel visibleWhen={mode === 'info'}>\n          <Spacer />\n          <Subtitle2>Activity Summary</Subtitle2>\n          <table style={styles.table}>\n              <tr style={styles.trth}>\n                <th style={styles.tableText}>Section</th>\n                <th style={styles.tableText}>Name</th>\n                <th style={styles.tableText}>Date Endorsed</th>\n                <th style={styles.tableText}>Duration</th>\n              </tr>\n              <tbody>\n                {app.subtasks.map(st => (\n                  <tr key={st.objid} style={styles.trth}>\n                    <td style={styles.tableText}>{st.typeid}</td>\n                    <td style={styles.tableText}>{st.task.title}</td>\n                    <td style={styles.tableText}>{st.task.dtcreated || \"Not yet started\"}</td>\n                    <td style={styles.tableText}>{getDuration(st.task.dtcreated)}  </td>\n                  </tr>\n                ))}\n              </tbody>\n          </table>\n        </Panel>\n      </Card>\n    </Page>\n  )\n}\n\nconst styles = {\n  currentTask: {\n    border: \"1px solid #aaa\",\n    borderRadius: 5,\n    boxShadow: \"0px 5px 7px -7px rgba(0,0,0,0.75)\",\n  },\n  taskInfo: {\n    padding: \"0px 10px\",\n  },\n  title: {\n    padding: \"5px 10px\",\n    backgroundColor: \"#ddd\",\n    borderBottom: \"1px solid #aaa\",\n    borderRadius: 5,\n  },\n  table: {\n    width: \"100%\",\n    borderSpacing: 0,\n  },\n  tableText: {\n    fontSize: 12,\n    border: \"1px solid #ddd\",\n    padding: 5,\n  },\n  trth: {\n    border: \"1px solid #ddd\",\n    cellSpacing: 0,\n    padding: 5,\n  }\n}\n\nexport default AppTrackingWebController\n","import React, { useState, useEffect } from 'react'\nimport {\n  Card,\n  Panel,\n  Button,\n  Label,\n  ActionBar,\n  Spacer,\n  Text,\n  Error,\n  Subtitle,\n  Title,\n  BackLink,\n  useData,\n  Table,\n  TableColumn,\n  currencyFormat\n} from 'rsi-react-web-components'\n\nconst ORIGIN = 'filipizen'\n\nconst OnlineBilling = ({\n  title,\n  partner,\n  onCancel,\n  onSubmit,\n  error: paymentError\n}) => {\n  const [ctx, dispatch] = useData();\n  const { refno, apptype, txntype, contact, bill: initialBill } = ctx;\n\n  const [bill, setBill] = useState(initialBill);\n  const [error, setError] = useState(paymentError);\n  const [loading, setLoading] = useState(false)\n\n  const checkoutPayment = () => {\n    onSubmit({\n      refno,\n      txntype,\n      origin: ORIGIN,\n      orgcode: partner.id,\n      info: { data: bill },\n      paidby: bill.paidby,\n      paidbyaddress: bill.paidbyaddress,\n      amount: bill.amount,\n      particulars: `Obo Application No. ${bill.appno}`,\n    })\n  }\n\n  const onCancelBilling = () => {\n    onCancel(0);\n  }\n\n  const blur = contact && contact.email !== bill.email;\n\n  return (\n    <Card style={{maxWidth: 800}}>\n      <Title>{title}</Title>\n      <Subtitle>Billing Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <Panel>\n        <Panel row>\n          <Text context={bill} caption=\"Tracking No.\" expr=\"trackingno\" readOnly={true} />\n          <Text context={bill} caption=\"Application No.\" expr=\"appno\" readOnly={true} />\n        </Panel>\n        <Panel row>\n          <Text context={bill} caption=\"Permit Type\" expr=\"permittype\" readOnly={true} />\n          <Text context={bill} caption=\"Application Type\" expr=\"apptype\" readOnly={true} />\n        </Panel>\n        <Text context={bill} caption=\"Project Name\" expr=\"title\" readOnly={true} />\n        <Text context={bill} caption=\"Applicant\" expr=\"applicant.name\" readOnly={true} />\n        <Text context={bill} caption=\"Address\" expr=\"applicant.address.text\" readOnly={true} />\n        <h4>Bill Details</h4>\n        <Table items={bill ? bill.items : []} size=\"small\" showPagination={false} >\n          <TableColumn caption=\"Particulars\" expr=\"item.title\" />\n          <TableColumn caption=\"Amount\" expr=\"amount\" align=\"right\" format=\"currency\" />\n        </Table>\n        <Panel style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\", paddingRight: 15}}>\n          <Label context={bill} caption=\"Bill Amount:\" expr={item => currencyFormat(item.amount)} />\n        </Panel>\n      </Panel>\n      <ActionBar disabled={loading}>\n        <BackLink caption='Back' action={onCancelBilling} />\n        <Button caption='Confirm Payment' action={checkoutPayment} disableWhen={bill.amount === 0} />\n      </ActionBar>\n    </Card>\n  )\n}\n\nexport default OnlineBilling\n","import React, { useState } from 'react'\nimport { Page, Panel, StateProvider, Content } from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport { ContactVerification } from 'rsi-react-filipizen-components'\n\nconst initialState = {\n  txntype: \"obo\",\n  contact: {},\n  refno: null,\n  apptype: null,\n  bill: {},\n}\n\nconst reducer = (draft, action) => {\n  switch(action.type) {\n    case \"SET_BILL\":\n      draft.refno = action.refno;\n      draft.apptype = action.apptype;\n      draft.bill = action.bill;\n      return;\n\n    case \"SET_CONTACT\":\n      draft.contact = action.contact;\n      return;\n  }\n}\n\nimport InitialInfo from \"./InitialInfo\";\nimport Payment from \"./Payment\";\n\nconst pages = [\n  {step: 1, name: \"verification\", caption: \"Verification\", Component: ContactVerification},\n  {step: 2, name: \"initial\", caption: \"Initial Information\", Component: InitialInfo},\n  {step: 3, name: \"payment\", caption: \"Payment\", Component: Payment},\n]\n\nconst OboBillingWebController = ({\n  partner,\n  service,\n  location,\n  history,\n  initialStep=1 //TODO: reset to 0\n}) => {\n\n  const [step, setStep] = useState(initialStep);\n\n  const moveNextStep = () => {\n    setStep(cs => cs+1);\n  }\n\n  const movePrevStep = () => {\n    if (step === 0) {\n      history.goBack();\n    } else {\n      setStep(cs => cs-1);\n    }\n  }\n\n  const cancelPayment = () => {\n    setStep(1);\n  }\n\n  const page = pages[step];\n  const PageComponent = page.Component;\n  const compProps = {\n    partner,\n    service,\n    location,\n    history,\n    moveNextStep,\n    movePrevStep,\n    cancelPayment,\n    title: \"Building Permit Online Billing\",\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Page>\n        <Content center>\n          <Panel>\n            <PageComponent page={page} {...compProps} />\n          </Panel>\n        </Content>\n      </Page>\n    </StateProvider>\n  )\n};\n\nexport default OboBillingWebController;\n","import React, { useState } from 'react'\nimport {\n  FormPanel,\n  Panel,\n  Text,\n  Title,\n  Button,\n  ActionBar,\n  Subtitle,\n  Spacer,\n  Service,\n  Error,\n  BackLink,\n  useData,\n  Card,\n  Combobox,\n  Radio,\n  Item\n} from 'rsi-react-web-components'\n\n\nconst appTypes = [\"building\", \"occupancy\"];\n\nconst InitialInfo = ({\n  title,\n  partner,\n  moveNextStep,\n  movePrevStep,\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { txntype } = ctx;\n\n  const [error, setError] = useState();\n  const [errorText, setErrorText] =  useState({});\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({apptype: \"building\"});\n\n  const getBilling = async () => {\n    const svc = await Service.lookupAsync(`${partner.id}:OboOnlineBillingService`, \"obo\");\n    return await svc.getBilling({txntype, ...params, qtr: 4, showdetails:true})\n  }\n\n  const loadBill = () => {\n    setErrorText({});\n    if (!params.refno) {\n      setErrorText({refno: \"Application No. is required.\"})\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    getBilling().then(bill => {\n      console.log(\"BILL\", bill);\n      dispatch({type: \"SET_BILL\", ...params, bill: bill});\n      moveNextStep();\n    }).catch(err => {\n      setError(err.toString());\n      setLoading(false)\n    })\n  }\n\n  return (\n    <Card>\n      <Title>{title}</Title>\n      <Subtitle>Initial Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={params} handler={setParams}>\n        <Text\n          name=\"refno\"\n          caption=\"Application No.\"\n          autoFocus={true}\n          error={errorText.refno}\n          helperText={errorText.refno}\n        />\n        <Spacer />\n        <Panel>\n          <label>Application Type:</label>\n          <Panel style={{marginLeft: 20}}>\n            <Radio name=\"apptype\">\n              <Item caption=\"Building Permit\" value=\"building\" />\n              <Item caption=\"Occupancy Permit\" value=\"occupancy\" />\n            </Radio>\n          </Panel>\n        </Panel>\n      </FormPanel>\n      <ActionBar>\n        <BackLink caption='Back' variant=\"text\" action={movePrevStep} />\n        <Button caption='Next' action={loadBill} loading={loading} disabled={loading} />\n      </ActionBar>\n      <p>{JSON.stringify(params, null, 2)}</p>\n    </Card>\n  )\n}\n\nexport default InitialInfo\n","import React from 'react'\nimport { useData } from 'rsi-react-web-components'\nimport { EPayment } from 'rsi-react-filipizen-components'\nimport OnlineBilling from './OnlineBilling';\n\nconst Payment = (props) => {\n  const [ctx, dispatch] = useData()\n  const module = {\n    title: props.title,\n    component: OnlineBilling\n  }\n  return (\n    <EPayment\n      module={module}\n      {...props}\n      initialContact={ctx.contact}\n      initialStep={1}\n      cancelPayment={props.cancelPayment}\n    />\n  )\n}\n\nexport default Payment\n"],"sourceRoot":""}