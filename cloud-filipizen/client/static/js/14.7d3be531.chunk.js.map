{"version":3,"sources":["../../src/rptbilling/InitialInfo.js","../../src/components/PayOption.js","../../src/rptbilling/OnlineBilling.js","../../src/rptbilling/RptBillingWebController.js","../../src/rptbilling/Payment.js","../../src/taxclearance/OnlineBilling.js","../../src/taxclearance/RealtyTaxClearanceWebController.js","../../src/taxclearance/InitialInfo.js","../../src/taxclearance/Payment.js"],"names":["PayOption","props","initialValue","open","onAccept","onCancel","useState","context","setContext","years","integerRangeToArray","fromyear","getCurrentYear","React","Modal","caption","maxWidth","FormPanel","handler","Combobox","name","items","Select","OnlineBilling","title","partner","onSubmit","paymentError","error","ctx","useData","refno","txntype","contact","bill","setBill","setError","loading","setLoading","showPayOption","setShowPayOption","barcode","setBarcode","blur","email","Card","style","Title","Subtitle","Spacer","Error","msg","Panel","row","Text","readOnly","Decimal","textAlign","ActionBar","disabled","BackLink","action","Button","variant","po","origin","orgcode","id","billtoyear","billtoqtr","paidby","paidbyaddress","amount","particulars","tdno","billperiod","info","data","disableWhen","billOption","billOptions","Service","lookupAsync","svc","params","invoke","then","billno","e","err","toString","initialState","reducer","draft","type","pages","step","Component","ContactVerification","moveNextStep","movePrevStep","dispatch","currentYear","Date","getFullYear","setRefno","setBilltoyear","mode","setMode","Fragment","visibleWhen","value","onChange","autoFocus","Integer","thousandSeparator","test","EPayment","module","component","initialContact","initialStep","cancelPayment","RptBillingWebController","service","location","history","setStep","page","StateProvider","Page","Content","center","cs","goBack","billitems","errors","setErrors","purpose","setPurpose","helperText","Object","keys","length","RealtyTaxClearanceWebController"],"mappings":"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","file":"static/js/14.7d3be531.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Text,\n  Title,\n  Button,\n  ActionBar,\n  Subtitle,\n  Spacer,\n  Service,\n  Error,\n  BackLink,\n  useData,\n  Label,\n  Integer,\n  Panel,\n  Card\n} from 'rsi-react-web-components'\n\nconst InitialInfo = ({\n  title,\n  partner,\n  moveNextStep,\n  movePrevStep,\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { txntype } = ctx;\n\n  const currentYear = new Date().getFullYear();\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [refno, setRefno] = useState();\n  const [billtoyear, setBilltoyear] = useState(currentYear+1);\n  const [mode, setMode] = useState(\"initial\");\n\n  const getBilling = async (billOptions = {}) => {\n    const svc = await Service.lookupAsync(`${partner.id}:OnlineLandTaxBillingService`, \"rpt\")\n    const params = { txntype, refno, ...billOptions }\n    if (mode === \"initial-advance\") {\n      params.billtoyear = billtoyear;\n    }\n    return await svc.invoke(\"getBilling\", params);\n  }\n\n  const loadBill = () => {\n    if (mode === \"initial-advance\") {\n      if (billtoyear <= currentYear) {\n        setError(\"Advance year to pay should be greater than \" + currentYear);\n        return;\n      }\n    }\n\n    setLoading(true);\n    setError(null);\n    getBilling().then(bill => {\n      dispatch({type: \"SET_BILL\", refno: refno, bill: bill.info});\n      moveNextStep();\n    }).catch(err => {\n      if (/unpaid|full/ig.test(err)) {\n        setMode(\"initial-advance\");\n      } else {\n        setError(err.toString());\n      }\n      setLoading(false);\n    })\n  }\n\n  return (\n    <React.Fragment>\n    <Card>\n      <Title>{title}</Title>\n      <Subtitle>Initial Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <Panel visibleWhen={mode === \"initial\"}>\n        <Text\n          caption='Tax Declaration No.'\n          name='refno'\n          value={refno}\n          onChange={setRefno}\n          readOnly={loading}\n          autoFocus={true}\n        />\n      </Panel>\n\n      <Panel visibleWhen={mode === \"initial-advance\"}>\n        <p>\n        The associated ledger is fully paid for the current year.<br/>\n        To pay in advance, specify the year and click Next button.\n        </p>\n        <Spacer />\n        <Panel>\n          <Text\n            caption='Tax Declaration No.'\n            name='refno'\n            value={refno}\n            onChange={setRefno}\n            readOnly={true}\n          />\n          <Integer\n            caption=\"Advance Year to Pay\"\n            name=\"billtoyear\"\n            value={billtoyear}\n            onChange={setBilltoyear}\n            thousandSeparator={false}\n            autoFocus={true}\n          />\n        </Panel>\n      </Panel>\n      <ActionBar>\n        <BackLink caption='Back' variant=\"text\" action={movePrevStep} />\n        <Button caption='Next' action={loadBill} loading={loading} disabled={loading} />\n      </ActionBar>\n    </Card>\n    </React.Fragment>\n  )\n}\n\nexport default InitialInfo\n","import React, { useState } from 'react'\nimport {\n  Integer,\n  Select,\n  FormPanel,\n  Modal,\n  Combobox,\n  integerRangeToArray,\n  getCurrentYear,\n} from 'rsi-react-web-components'\n\nconst PayOption = (props) => {\n  const { initialValue = {}, open, onAccept, onCancel } = props\n  const [context, setContext] = useState(initialValue)\n\n  const okHandler = () => {\n    onAccept(context)\n  }\n\n  const qtrs = [1, 2, 3, 4]\n  const years = integerRangeToArray(props.initialValue.fromyear, getCurrentYear() + 3);\n\n  return (\n    <Modal\n      open={open}\n      caption='Pay Options'\n      onAccept={okHandler}\n      onCancel={onCancel}\n      maxWidth={100}\n    >\n      <FormPanel context={context} handler={setContext}>\n        <Combobox caption=\"Year to Bill\" name=\"billtoyear\" items={years} />\n        <Select caption='Quarter to Bill' name='billtoqtr' items={qtrs} />\n      </FormPanel>\n    </Modal>\n  )\n}\n\nexport default PayOption\n","import React, { useState } from 'react'\nimport {\n  Card,\n  Panel,\n  Text,\n  Button,\n  FormPanel,\n  ActionBar,\n  Spacer,\n  Service,\n  Error,\n  Subtitle,\n  Title,\n  Decimal,\n  BackLink,\n  useData\n} from 'rsi-react-web-components'\n\nimport PayOption from '../components/PayOption'\n\nconst origin = 'filipizen'\n\nconst OnlineBilling = ({\n  title,\n  partner,\n  onCancel,\n  onSubmit,\n  error: paymentError\n}) => {\n  const [ctx, dispatch] = useData();\n  const { refno, txntype, contact, bill: initialBill } = ctx;\n  const [bill, setBill] = useState(initialBill);\n  const [error, setError] = useState(paymentError);\n  const [loading, setLoading] = useState(false)\n  const [showPayOption, setShowPayOption] = useState(false)\n  const [year, setYear] = useState()\n  const [qtr, setQtr] = useState()\n  const [barcode, setBarcode] = useState()\n\n  const getBilling = async (billOptions = {}) => {\n    const svc = await Service.lookupAsync(`${partner.id}:OnlineLandTaxBillingService`, \"rpt\")\n    const params = { txntype, refno, ...billOptions }\n    return await svc.invoke(\"getBilling\", params);\n  }\n\n  const loadBill = (billOptions = {}) => {\n    setLoading(true);\n    setError(null);\n    getBilling(billOptions).then(bill => {\n      setBill(bill.info);\n      setBarcode(bill.info.billno);\n      setLoading(false)\n    }).catch(err => {\n      setError(err.toString());\n      setLoading(false)\n    })\n  }\n\n  const payOptionHandler = (billOption) => {\n    setShowPayOption(false)\n    loadBill(billOption)\n  }\n\n  const checkoutPayment = () => {\n    const po = { ...bill, barcode };\n    const items = po.items;\n    delete po.items;\n\n    onSubmit({\n      refno,\n      txntype,\n      origin,\n      orgcode: partner.id,\n      billtoyear: bill.billtoyear,\n      billtoqtr: bill.billtoqtr,\n      paidby: bill.paidby,\n      paidbyaddress: bill.paidbyaddress,\n      amount: bill.amount,\n      particulars: `Real Property TD No. ${bill.tdno} ${bill.billperiod}`,\n      items: items,\n      info: {data: po},\n    })\n  }\n\n  const onCancelBilling = () => {\n    onCancel(0);\n  }\n\n  const blur = contact.email !== bill.email;\n  return (\n    <Card style={{maxWidth: 500}}>\n      <Title>{title}</Title>\n      <Subtitle>Billing Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={bill} handler={setBill}>\n        <Panel row>\n          <Text name='billno' caption='Bill No.' readOnly />\n          <Text name='billdate' caption='Bill Date' readOnly />\n        </Panel>\n        <Text name='tdno' caption='TD No.' readOnly />\n        <Text name='fullpin' caption='PIN' readOnly />\n        <Text name='taxpayer.name' caption='Property Owner' readOnly blur={blur} />\n        <Text name='taxpayer.address' caption='Owner Address' readOnly blur={blur} />\n        <Text name='billperiod' caption='Bill Period' readOnly />\n        <Decimal name='amount' caption='Amount Due' readOnly textAlign=\"left\" />\n      </FormPanel>\n      <ActionBar disabled={loading}>\n        <BackLink caption='Back' action={onCancelBilling} />\n        <Panel row>\n          <Button caption='Pay Option' action={() => setShowPayOption(true)} variant=\"outlined\" />\n          <Button caption='Confirm Payment' action={checkoutPayment} disableWhen={bill.amount === 0} />\n        </Panel>\n      </ActionBar>\n\n      <PayOption\n        initialValue={\n          bill && {\n            billtoyear: bill.billtoyear,\n            billtoqtr: bill.billtoqtr,\n            fromyear: bill.fromyear,\n          }\n        }\n        open={showPayOption}\n        onAccept={payOptionHandler}\n        onCancel={() => setShowPayOption(false)}\n      />\n    </Card>\n  )\n}\n\nexport default OnlineBilling\n","import React, { useState } from 'react'\nimport { Page, StateProvider, Content } from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport { ContactVerification } from 'rsi-react-filipizen-components'\n\nconst initialState = {\n  txntype: \"rptcol\",\n  refno: null,\n  bill: {},\n  contact: {},\n}\n\nconst reducer = (draft, action) => {\n  switch(action.type) {\n    case \"SET_BILL\":\n      draft.refno = action.refno;\n      draft.bill = action.bill;\n      return;\n\n    case \"SET_CONTACT\":\n      draft.contact = action.contact;\n      return;\n  }\n}\n\nimport InitialInfo from \"./InitialInfo\";\nimport Payment from \"./Payment\";\n\nconst pages = [\n  {step: 1, name: \"verification\", caption: \"Verification\", Component: ContactVerification},\n  {step: 2, name: \"initial\", caption: \"Initial Information\", Component: InitialInfo},\n  {step: 3, name: \"payment\", caption: \"Payment\", Component: Payment},\n]\n\nconst RptBillingWebController = ({\n  partner,\n  service,\n  location,\n  history,\n  //TODO: reset to 0\n  initialStep=0\n}) => {\n\n  const [step, setStep] = useState(initialStep);\n\n  const moveNextStep = () => {\n    setStep(cs => cs+1);\n  }\n\n  const movePrevStep = () => {\n    if (step === 0) {\n      history.goBack();\n    } else {\n      setStep(cs => cs-1);\n    }\n  }\n\n  const cancelPayment = () => {\n    setStep(1);\n  }\n\n  const page = pages[step];\n  const PageComponent = page.Component;\n  const compProps = {\n    partner,\n    service,\n    location,\n    history,\n    moveNextStep,\n    movePrevStep,\n    cancelPayment,\n    title: \"Realty Tax Online Billing\",\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Page>\n        <Content center>\n          <PageComponent page={page} {...compProps} />\n        </Content>\n      </Page>\n    </StateProvider>\n  )\n}\n\nexport default RptBillingWebController\n","import React from 'react'\nimport { useData } from 'rsi-react-web-components'\nimport { EPayment } from 'rsi-react-filipizen-components'\n\nimport OnlineBilling from './OnlineBilling';\n\nconst Payment = (props) => {\n  const [ctx, dispatch] = useData()\n  const module = {\n    title: 'Realty Tax Online Billing',\n    component: OnlineBilling\n  }\n  return (\n    <EPayment\n      module={module}\n      {...props}\n      initialContact={ctx.contact}\n      initialStep={1}\n      cancelPayment={props.cancelPayment}\n    />\n  )\n}\n\nexport default Payment\n","import React, { useState } from 'react'\nimport {\n  Card,\n  Panel,\n  Text,\n  Button,\n  FormPanel,\n  ActionBar,\n  Spacer,\n  Service,\n  Error,\n  Subtitle,\n  Title,\n  Decimal,\n  BackLink,\n  useData\n} from 'rsi-react-web-components'\n\nimport PayOption from '../components/PayOption'\n\nconst origin = 'filipizen'\n\nconst OnlineBilling = ({\n  title,\n  partner,\n  onCancel,\n  onSubmit,\n  error: paymentError\n}) => {\n  const [ctx, dispatch] = useData();\n  const { refno, txntype, contact, bill: initialBill } = ctx;\n  const [bill, setBill] = useState(initialBill);\n  const [error, setError] = useState(paymentError);\n  const [loading, setLoading] = useState(false)\n  const [showPayOption, setShowPayOption] = useState(false)\n  const [year, setYear] = useState()\n  const [qtr, setQtr] = useState()\n  const [barcode, setBarcode] = useState()\n\n  const checkoutPayment = () => {\n    const po = { ...bill, barcode };\n    const items = po.items;\n    delete po.items;\n\n    onSubmit({\n      refno,\n      txntype,\n      origin,\n      orgcode: partner.id,\n      paidby: bill.paidby,\n      paidbyaddress: bill.paidbyaddress,\n      amount: bill.amount,\n      particulars: `Realty Tax Clearance for TD No. ${bill.tdno}`,\n      items: bill.billitems,\n      info: {data: bill}\n    })\n  }\n\n  const onCancelBilling = () => {\n    onCancel(0);\n  }\n\n  return (\n    <Card style={{maxWidth: 500}}>\n      <Title>{title}</Title>\n      <Subtitle>Billing Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <FormPanel context={bill} handler={setBill}>\n          <Text name='tdno' caption='TD No.' readOnly />\n          <Text name='pin' caption='PIN' readOnly />\n          <Text name='owner.name' caption='Property Owner' readOnly />\n          <Text name='owner.address' caption='Owner Address' readOnly />\n          <Text name='purpose' caption='Purpose' readOnly />\n          <Spacer />\n          <Decimal name='amount' caption='Amount Due' readOnly textAlign=\"left\" />\n        </FormPanel>\n      <ActionBar disabled={loading}>\n        <BackLink caption='Back' action={onCancelBilling} />\n        <Button caption='Confirm Payment' action={checkoutPayment} disableWhen={bill.amount === 0} />\n      </ActionBar>\n    </Card>\n  )\n}\n\nexport default OnlineBilling\n","import React, { useState } from 'react'\nimport { Page, StateProvider, Content } from \"rsi-react-web-components\";\nimport \"rsi-react-web-components/dist/index.css\";\n\nimport { ContactVerification } from 'rsi-react-filipizen-components'\n\nconst initialState = {\n  txntype: \"rpttaxclearance\",\n  refno: null,\n  bill: {},\n  contact: {},\n}\n\nconst reducer = (draft, action) => {\n  switch(action.type) {\n    case \"SET_BILL\":\n      draft.refno = action.refno;\n      draft.bill = action.bill;\n      return;\n\n    case \"SET_CONTACT\":\n      draft.contact = action.contact;\n      return;\n  }\n}\n\nimport InitialInfo from \"./InitialInfo\";\nimport Payment from \"./Payment\";\n\nconst pages = [\n  {step: 1, name: \"verification\", caption: \"Verification\", Component: ContactVerification},\n  {step: 2, name: \"initial\", caption: \"Initial Information\", Component: InitialInfo},\n  {step: 3, name: \"payment\", caption: \"Payment\", Component: Payment},\n]\n\nconst RealtyTaxClearanceWebController = ({\n  partner,\n  service,\n  location,\n  history,\n  initialStep=0\n}) => {\n\n  const [step, setStep] = useState(initialStep);\n\n  const moveNextStep = () => {\n    setStep(cs => cs+1);\n  }\n\n  const movePrevStep = () => {\n    if (step === 0) {\n      history.goBack();\n    } else {\n      setStep(cs => cs-1);\n    }\n  }\n\n  const cancelPayment = () => {\n    setStep(1);\n  }\n\n  const page = pages[step];\n  const PageComponent = page.Component;\n  const compProps = {\n    partner,\n    service,\n    location,\n    history,\n    moveNextStep,\n    movePrevStep,\n    cancelPayment,\n    title: \"Online Realty Tax Clearance\",\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Page>\n        <Content center>\n          <PageComponent page={page} {...compProps} />\n        </Content>\n      </Page>\n    </StateProvider>\n  )\n}\n\nexport default RealtyTaxClearanceWebController\n","import React, { useState } from 'react'\nimport {\n  Text,\n  Title,\n  Button,\n  ActionBar,\n  Subtitle,\n  Spacer,\n  Service,\n  Error,\n  BackLink,\n  useData,\n  Card\n} from 'rsi-react-web-components'\n\nconst InitialInfo = ({\n  title,\n  partner,\n  moveNextStep,\n  movePrevStep,\n}) => {\n\n  const [ctx, dispatch] = useData();\n  const { txntype } = ctx;\n\n  const [error, setError] = useState();\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [refno, setRefno] = useState();\n  const [purpose, setPurpose] = useState();\n\n  const getBilling = async () => {\n    const svc = await Service.lookupAsync(`${partner.id}:OnlineRealtyTaxClearanceService`, \"rpt\");\n    const params = { txntype, refno, purpose };\n    return await svc.invoke(\"getBilling\", params);\n  }\n\n  const validated = () => {\n    if (!refno) setErrors({...errors, refno: \"Tax Declaration No. is required.\"})\n    if (!purpose) setErrors({...errors, purpose: \"Purpose is required.\"})\n    return Object.keys(errors).length === 0;\n  }\n\n  const loadBill = () => {\n    if (validated()) {\n      setLoading(true);\n      setError(null);\n      getBilling().then(bill => {\n        dispatch({type: \"SET_BILL\", refno: refno, bill: bill});\n        moveNextStep();\n      }).catch(err => {\n        setError(err.toString());\n        setLoading(false)\n      });\n    }\n  }\n\n  return (\n    <React.Fragment>\n    <Card>\n      <Title>{title}</Title>\n      <Subtitle>Initial Information</Subtitle>\n      <Spacer />\n      <Error msg={error} />\n      <Text\n          caption='Tax Declaration No.'\n          name='refno'\n          value={refno}\n          onChange={setRefno}\n          readOnly={loading}\n          autoFocus={true}\n          error={errors.refno}\n          helperText={errors.refno}\n        />\n        <Text\n          caption='Purpose'\n          name='purpose'\n          value={purpose}\n          onChange={setPurpose}\n          readOnly={loading}\n          error={errors.purpose}\n          helperText={errors.purpose}\n        />\n      <ActionBar>\n        <BackLink caption='Back' variant=\"text\" action={movePrevStep} />\n        <Button caption='Next' action={loadBill} loading={loading} disabled={loading} />\n      </ActionBar>\n    </Card>\n    </React.Fragment>\n  )\n}\n\nexport default InitialInfo\n","import React from 'react'\nimport { useData } from 'rsi-react-web-components'\nimport { EPayment } from 'rsi-react-filipizen-components'\n\nimport OnlineBilling from './OnlineBilling';\n\nconst Payment = (props) => {\n  const [ctx, dispatch] = useData()\n  const module = {\n    title: \"Online Realty Tax Clearance\",\n    component: OnlineBilling\n  }\n  return (\n    <EPayment\n      module={module}\n      {...props}\n      initialContact={ctx.contact}\n      initialStep={1}\n      cancelPayment={props.cancelPayment}\n    />\n  )\n}\n\nexport default Payment\n"],"sourceRoot":""}